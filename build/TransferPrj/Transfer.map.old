Component: ARM Compiler 5.06 update 7 (build 960) Tool: armlink [4d3601]

==============================================================================

Section Cross References

    hw_485.o(i.HW_485_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hw_485.o(i.HW_485_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hw_485.o(i.HW_485_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hw_485.o(i.HW_485_Init) refers to hw_485.o(i.HW_485_GPIO_Init) for HW_485_GPIO_Init
    hw_485.o(i.HW_485_Init) refers to hw_485.o(i.HW_485_UART_Init) for HW_485_UART_Init
    hw_485.o(i.HW_485_Init) refers to hw_485.o(i.HW_TimeoutTimer_Init) for HW_TimeoutTimer_Init
    hw_485.o(i.HW_485_Init) refers to lks32mc08x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    hw_485.o(i.HW_485_Init) refers to hw_485.o(.bss) for .bss
    hw_485.o(i.HW_485_UART_Init) refers to lks32mc08x_uart.o(i.UART_StructInit) for UART_StructInit
    hw_485.o(i.HW_485_UART_Init) refers to lks32mc08x_uart.o(i.UART_Init) for UART_Init
    hw_485.o(i.HW_TimeoutTimer_Init) refers to lks32mc08x_tim.o(i.TIM_TimerStrutInit) for TIM_TimerStrutInit
    hw_485.o(i.HW_TimeoutTimer_Init) refers to lks32mc08x_tim.o(i.TIM_TimerInit) for TIM_TimerInit
    hw_485.o(i.HW_TimeoutTimer_Init) refers to lks32mc08x_tim.o(i.TIM_TimerCmd) for TIM_TimerCmd
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_DMA.o(i.DMA_StructInit) for DMA_StructInit
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_DMA.o(i.DMA_Init) for DMA_Init
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_can.o(i.CAN_GetIRQFlag) for CAN_GetIRQFlag
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_DMA.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_can.o(i.HW_CAN_DMA_TX) refers to lks32mc08x_DMA.o(i.DMA_StructInit) for DMA_StructInit
    hw_can.o(i.HW_CAN_DMA_TX) refers to lks32mc08x_DMA.o(i.DMA_Init) for DMA_Init
    hw_can.o(i.HW_CAN_DMA_TX) refers to lks32mc08x_DMA.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_can.o(i.HW_CAN_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hw_can.o(i.HW_CAN_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hw_can.o(i.HW_CAN_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hw_can.o(i.HW_CAN_Init) refers to lks32mc08x_can.o(i.CAN_StructInit) for CAN_StructInit
    hw_can.o(i.HW_CAN_Init) refers to lks32mc08x_can.o(i.CAN_Init) for CAN_Init
    hw_can.o(i.HW_CAN_Init) refers to lks32mc08x_can.o(i.SFF_ID_Filter) for SFF_ID_Filter
    hw_can.o(i.HW_CAN_Init) refers to hw_can.o(i.HW_CAN_GPIO_Init) for HW_CAN_GPIO_Init
    hw_can.o(i.HW_CAN_Init) refers to hw_can.o(i.HW_CAN_DMA_RX) for HW_CAN_DMA_RX
    hw_can.o(i.HW_CAN_Init) refers to hw_can.o(.bss) for .bss
    hw_uart .o(i.HW_UART_DMA_Init) refers to lks32mc08x_DMA.o(i.DMA_StructInit) for DMA_StructInit
    hw_uart .o(i.HW_UART_DMA_Init) refers to lks32mc08x_DMA.o(i.DMA_Init) for DMA_Init
    hw_uart .o(i.HW_UART_DMA_Init) refers to lks32mc08x_DMA.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_uart .o(i.HW_UART_DMA_Init) refers to hw_uart .o(.bss) for .bss
    hw_uart .o(i.HW_UART_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hw_uart .o(i.HW_UART_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hw_uart .o(i.HW_UART_Init) refers to hw_uart .o(i.HW_UART_GPIO_Init) for HW_UART_GPIO_Init
    hw_uart .o(i.HW_UART_Init) refers to lks32mc08x_uart.o(i.UART_StructInit) for UART_StructInit
    hw_uart .o(i.HW_UART_Init) refers to lks32mc08x_uart.o(i.UART_Init) for UART_Init
    hw_uart .o(i.HW_UART_Init) refers to hw_uart .o(i.HW_UART_DMA_Init) for HW_UART_DMA_Init
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.bss) for .bss
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.data) for .data
    heap_4.o(i.prvInsertBlockIntoFreeList) refers to heap_4.o(.data) for .data
    heap_4.o(i.pvPortCalloc) refers to uidiv.o(.text) for __aeabi_uidivmod
    heap_4.o(i.pvPortCalloc) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    heap_4.o(i.pvPortCalloc) refers to memseta.o(.text) for __aeabi_memclr
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvHeapInit) for prvHeapInit
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(.data) for .data
    heap_4.o(i.vPortFree) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortFree) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.vPortFree) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortFree) refers to heap_4.o(.data) for .data
    heap_4.o(i.vPortGetHeapStats) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortGetHeapStats) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortGetHeapStats) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(i.vPortGetHeapStats) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    heap_4.o(i.vPortGetHeapStats) refers to heap_4.o(.data) for .data
    heap_4.o(i.xPortGetFreeHeapSize) refers to heap_4.o(.data) for .data
    heap_4.o(i.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.data) for .data
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(i.prvTaskExitError) refers to port.o(.data) for .data
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEndScheduler) refers to port.o(.data) for .data
    port.o(i.vPortEnterCritical) refers to port.o(.data) for .data
    port.o(i.vPortExitCritical) refers to port.o(.data) for .data
    port.o(i.vPortSetupTimerInterrupt) refers to uidiv.o(.text) for __aeabi_uidivmod
    port.o(i.vPortSetupTimerInterrupt) refers to hardware_init.o(.data) for SystemCoreClock
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvPortStartFirstTask
    port.o(i.xPortStartScheduler) refers to port.o(.data) for .data
    port.o(i.xPortSysTickHandler) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    port.o(i.xPortSysTickHandler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    queue.o(i.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_4.o(i.vPortFree) for vPortFree
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to tasks.o(i.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(i.vQueueWaitForMessageRestricted) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.xQueueGenericCreate) refers to uidiv.o(.text) for __aeabi_uidivmod
    queue.o(i.xQueueGenericCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.xQueueGenericReset) refers to uidiv.o(.text) for __aeabi_uidivmod
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSendFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeekFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for .data
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for .data
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for .bss
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for .data
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for .bss
    tasks.o(i.prvDeleteTCB) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvIdleTask) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvIdleTask) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvIdleTask) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for .bss
    tasks.o(i.prvIdleTask) refers to tasks.o(.data) for .data
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for .data
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for .bss
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for .data
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskGenericNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskGenericNotifyTake) refers to tasks.o(.data) for .data
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to tasks.o(.data) for .data
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for .data
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for .data
    tasks.o(i.uxTaskPriorityGetFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for .data
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to timers.o(i.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for .bss
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for .data
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskCatchUpTicks) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCatchUpTicks) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to memseta.o(.text) for __aeabi_memclr4
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskDelayUntil) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(i.__ARM_common_switch8) for __ARM_common_switch8
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskGenericNotifyFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(i.__ARM_common_switch8) for __ARM_common_switch8
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskGenericNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotifyStateClear) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotifyWait) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGetSchedulerState) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for .bss
    tasks.o(i.xTaskResumeFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for .data
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for .bss
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to list.o(i.vListInitialise) for vListInitialise
    timers.o(i.prvCheckForValidListAndQueue) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.data) for .data
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.bss) for .bss
    timers.o(i.prvInsertTimerInActiveList) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvInsertTimerInActiveList) refers to timers.o(.data) for .data
    timers.o(i.prvProcessExpiredTimer) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.prvReloadTimer) for prvReloadTimer
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(.data) for .data
    timers.o(i.prvProcessReceivedCommands) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessReceivedCommands) refers to tasks.o(i.__ARM_common_switch8) for __ARM_common_switch8
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvReloadTimer) for prvReloadTimer
    timers.o(i.prvProcessReceivedCommands) refers to heap_4.o(i.vPortFree) for vPortFree
    timers.o(i.prvProcessReceivedCommands) refers to queue.o(i.xQueueReceive) for xQueueReceive
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(.data) for .data
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to queue.o(i.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(i.prvProcessTimerOrBlockTask) refers to port.o(i.vPortYield) for vPortYield
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(.data) for .data
    timers.o(i.prvReloadTimer) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvSampleTimeNow) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(i.prvSampleTimeNow) refers to timers.o(i.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(i.prvSampleTimeNow) refers to timers.o(.data) for .data
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(i.prvTimerTask) refers to timers.o(.data) for .data
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.uxTimerGetReloadMode) refers to timers.o(i.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(i.vTimerSetReloadMode) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetReloadMode) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    timers.o(i.xTimerCreate) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.xTimerCreate) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.xTimerCreateTimerTask) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(.data) for .data
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvTimerTask) for prvTimerTask
    timers.o(i.xTimerGenericCommand) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(i.xTimerGenericCommand) refers to timers.o(.data) for .data
    timers.o(i.xTimerGetReloadMode) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.xTimerGetReloadMode) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.data) for .data
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    lks32mc08x_DMA.o(i.DMA_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    lks32mc08x_can.o(i.CAN_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_can.o(i.CAN_Sleep) refers to uidiv.o(.text) for __aeabi_uidivmod
    lks32mc08x_gpio.o(i.GPIO_PinAFConfig) refers to tasks.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lks32mc08x_gpio.o(i.GPIO_ResetBits) refers to lks32mc08x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    lks32mc08x_gpio.o(i.GPIO_SetBits) refers to lks32mc08x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    lks32mc08x_sys.o(i.DSP_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_sys.o(i.Switch2HRC) refers to lks32mc08x_sys.o(.bss) for .bss
    lks32mc08x_sys.o(i.Switch2PLL) refers to lks32mc08x_sys.o(.bss) for .bss
    lks32mc08x_tim.o(i.TIM_ECDInit) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(i.TIM_TimerInit) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_uart.o(i.UART_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_uart.o(i.UART_Init) refers to ldiv.o(.text) for __aeabi_ldivmod
    SEGGER_RTT.o(i.SEGGER_RTT_AllocDownBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_AllocDownBuffer) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_AllocUpBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_AllocUpBuffer) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_ConfigDownBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_ConfigDownBuffer) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_ConfigUpBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_ConfigUpBuffer) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_GetAvailWriteSpace) refers to SEGGER_RTT.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    SEGGER_RTT.o(i.SEGGER_RTT_GetAvailWriteSpace) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_GetBytesInBuffer) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_GetKey) refers to SEGGER_RTT.o(i.SEGGER_RTT_Read) for SEGGER_RTT_Read
    SEGGER_RTT.o(i.SEGGER_RTT_HasData) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_HasDataUp) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_HasKey) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_HasKey) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_Init) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_PutChar) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_PutChar) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_PutCharSkip) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_PutCharSkip) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_PutCharSkipNoLock) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_Read) refers to SEGGER_RTT.o(i.SEGGER_RTT_ReadNoLock) for SEGGER_RTT_ReadNoLock
    SEGGER_RTT.o(i.SEGGER_RTT_ReadNoLock) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_ReadNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT.o(i.SEGGER_RTT_ReadNoLock) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBuffer) refers to SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBufferNoLock) for SEGGER_RTT_ReadUpBufferNoLock
    SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBufferNoLock) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBufferNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBufferNoLock) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsDownBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsDownBuffer) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsUpBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsUpBuffer) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_SetNameDownBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_SetNameDownBuffer) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_SetNameUpBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_SetNameUpBuffer) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(i._WriteNoCheck) for _WriteNoCheck
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(i._WriteBlocking) for _WriteBlocking
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(.data) for .data
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to strlen.o(.text) for strlen
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(i._PostTerminalSwitch) for _PostTerminalSwitch
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(i._WriteBlocking) for _WriteBlocking
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(.data) for .data
    SEGGER_RTT.o(i.SEGGER_RTT_WaitKey) refers to SEGGER_RTT.o(i.SEGGER_RTT_GetKey) for SEGGER_RTT_GetKey
    SEGGER_RTT.o(i.SEGGER_RTT_Write) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_Write) refers to SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock) for SEGGER_RTT_WriteNoLock
    SEGGER_RTT.o(i.SEGGER_RTT_Write) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBuffer) refers to SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock) for SEGGER_RTT_WriteDownBufferNoLock
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBuffer) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to SEGGER_RTT.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to SEGGER_RTT.o(i._WriteNoCheck) for _WriteNoCheck
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to SEGGER_RTT.o(i._WriteBlocking) for _WriteBlocking
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock) refers to SEGGER_RTT.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock) refers to SEGGER_RTT.o(i._WriteNoCheck) for _WriteNoCheck
    SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock) refers to SEGGER_RTT.o(i._WriteBlocking) for _WriteBlocking
    SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_WriteSkipNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT.o(i.SEGGER_RTT_WriteSkipNoLock) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i.SEGGER_RTT_WriteString) refers to strlen.o(.text) for strlen
    SEGGER_RTT.o(i.SEGGER_RTT_WriteString) refers to SEGGER_RTT.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    SEGGER_RTT.o(i.SEGGER_RTT_WriteWithOverwriteNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT.o(i.SEGGER_RTT_WriteWithOverwriteNoLock) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i._DoInit) refers to memseta.o(.text) for __aeabi_memclr4
    SEGGER_RTT.o(i._DoInit) refers to SEGGER_RTT.o(.bss) for .bss
    SEGGER_RTT.o(i._DoInit) refers to SEGGER_RTT.o(.constdata) for .constdata
    SEGGER_RTT.o(i._PostTerminalSwitch) refers to SEGGER_RTT.o(i._WriteBlocking) for _WriteBlocking
    SEGGER_RTT.o(i._PostTerminalSwitch) refers to SEGGER_RTT.o(.data) for .data
    SEGGER_RTT.o(i._WriteBlocking) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT.o(i._WriteNoCheck) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT_printf.o(i.SEGGER_RTT_printf) refers to SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf) for SEGGER_RTT_vprintf
    SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf) refers to SEGGER_RTT_printf.o(i._StoreChar) for _StoreChar
    SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf) refers to SEGGER_RTT_printf.o(i._PrintInt) for _PrintInt
    SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf) refers to SEGGER_RTT_printf.o(i._PrintUnsigned) for _PrintUnsigned
    SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf) refers to SEGGER_RTT.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    SEGGER_RTT_printf.o(i._PrintInt) refers to idiv.o(.text) for __aeabi_idivmod
    SEGGER_RTT_printf.o(i._PrintInt) refers to SEGGER_RTT_printf.o(i._StoreChar) for _StoreChar
    SEGGER_RTT_printf.o(i._PrintInt) refers to SEGGER_RTT_printf.o(i._PrintUnsigned) for _PrintUnsigned
    SEGGER_RTT_printf.o(i._PrintUnsigned) refers to uidiv.o(.text) for __aeabi_uidivmod
    SEGGER_RTT_printf.o(i._PrintUnsigned) refers to SEGGER_RTT_printf.o(i._StoreChar) for _StoreChar
    SEGGER_RTT_printf.o(i._PrintUnsigned) refers to SEGGER_RTT_printf.o(.constdata) for .constdata
    SEGGER_RTT_printf.o(i._StoreChar) refers to SEGGER_RTT.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    freertos.o(i.CANTaskFunc) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    freertos.o(i.LKS_FREERTOS_Init) refers to timers.o(i.xTimerCreate) for xTimerCreate
    freertos.o(i.LKS_FREERTOS_Init) refers to printf8.o(i.__0printf$8) for __2printf
    freertos.o(i.LKS_FREERTOS_Init) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    freertos.o(i.LKS_FREERTOS_Init) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    freertos.o(i.LKS_FREERTOS_Init) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    freertos.o(i.LKS_FREERTOS_Init) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    freertos.o(i.LKS_FREERTOS_Init) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(i.SysLEDTimerCallback) for SysLEDTimerCallback
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(.data) for .data
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(i.RS485TaskFunc) for RS485TaskFunc
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(i.CANTaskFunc) for CANTaskFunc
    freertos.o(i.RS485TaskFunc) refers to timers.o(i.xTimerGetPeriod) for xTimerGetPeriod
    freertos.o(i.RS485TaskFunc) refers to printf8.o(i.__0printf$8) for __2printf
    freertos.o(i.RS485TaskFunc) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    freertos.o(i.RS485TaskFunc) refers to freertos.o(.data) for .data
    freertos.o(i.SysLEDTimerCallback) refers to hardware_init.o(i.Invers_GPIO) for Invers_GPIO
    hardware_init.o(i.Clock_Init) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    hardware_init.o(i.HW_NVIC_Init) refers to hardware_init.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    hardware_init.o(i.HW_NVIC_Init) refers to hardware_init.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    hardware_init.o(i.HW_SysTick_Config) refers to hardware_init.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    hardware_init.o(i.Hardware_Init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hardware_init.o(i.Hardware_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hardware_init.o(i.Hardware_Init) refers to hw_uart .o(i.HW_UART_Init) for HW_UART_Init
    hardware_init.o(i.Hardware_Init) refers to hw_can.o(i.HW_CAN_Init) for HW_CAN_Init
    hardware_init.o(i.Hardware_Init) refers to hw_485.o(i.HW_485_Init) for HW_485_Init
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.HW_SysTick_Config) for HW_SysTick_Config
    hardware_init.o(i.Hardware_Init) refers to printf8.o(i.__0printf$8) for __2printf
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.HW_NVIC_Init) for HW_NVIC_Init
    hardware_init.o(i.Invers_GPIO) refers to lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit) for GPIO_ReadOutputDataBit
    hardware_init.o(i.Invers_GPIO) refers to lks32mc08x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    hardware_init.o(i.Invers_GPIO) refers to lks32mc08x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    hardware_init.o(i.SystemInit) refers to hardware_init.o(i.Clock_Init) for Clock_Init
    hardware_init.o(i.fputc) refers to SEGGER_RTT.o(i.SEGGER_RTT_PutChar) for SEGGER_RTT_PutChar
    interrupt.o(i.BusFault_Handler) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    interrupt.o(i.BusFault_Handler) refers to hardware_init.o(i.Invers_GPIO) for Invers_GPIO
    interrupt.o(i.HardFault_Handler) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    interrupt.o(i.HardFault_Handler) refers to hardware_init.o(i.Invers_GPIO) for Invers_GPIO
    interrupt.o(i.SysTick_Handler) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    interrupt.o(i.SysTick_Handler) refers to port.o(i.xPortSysTickHandler) for xPortSysTickHandler
    interrupt.o(i.UART0_IRQHandler) refers to printf8.o(i.__0printf$8) for __2printf
    interrupt.o(i.UTIMER0_IRQHandler) refers to interrupt.o(.data) for .data
    interrupt.o(i.UsageFault_Handler) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    interrupt.o(i.UsageFault_Handler) refers to hardware_init.o(i.Invers_GPIO) for Invers_GPIO
    main.o(i.main) refers to SEGGER_RTT.o(i.SEGGER_RTT_Init) for SEGGER_RTT_Init
    main.o(i.main) refers to hardware_init.o(i.Hardware_Init) for Hardware_Init
    main.o(i.main) refers to freertos.o(i.LKS_FREERTOS_Init) for LKS_FREERTOS_Init
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to printf8.o(i.__0printf$8) for __2printf
    main.o(i.main) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(.text) for Reset_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.NMI_Handler) for NMI_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.HardFault_Handler) for HardFault_Handler
    startup_lks32mc08x.o(RESET) refers to port.o(i.SVC_Handler) for SVC_Handler
    startup_lks32mc08x.o(RESET) refers to port.o(.emb_text) for PendSV_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.SysTick_Handler) for SysTick_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER0_IRQHandler) for UTIMER0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER1_IRQHandler) for UTIMER1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER2_IRQHandler) for UTIMER2_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER3_IRQHandler) for UTIMER3_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ENCODER0_IRQHandler) for ENCODER0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ENCODER1_IRQHandler) for ENCODER1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.I2C0_IRQHandler) for I2C0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.GPIO_IRQHandler) for GPIO_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.HALL_IRQHandler) for HALL_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.SPI0_IRQHandler) for SPI0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.MCPWM_IRQHandler) for MCPWM_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.CMP_IRQHandler) for CMP_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.DMA_IRQHandler) for DMA_IRQHandler
    startup_lks32mc08x.o(.text) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(.text) refers to hardware_init.o(i.SystemInit) for SystemInit
    startup_lks32mc08x.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000F) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$00000011) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry12b.o(.ARM.Collect$$$$0000000E) for __rt_lib_shutdown_fini
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    ldiv.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing hw_485.o(.rev16_text), (4 bytes).
    Removing hw_485.o(.revsh_text), (4 bytes).
    Removing hw_485.o(.data), (1 bytes).
    Removing hw_485.o(.data), (8 bytes).
    Removing hw_can.o(.rev16_text), (4 bytes).
    Removing hw_can.o(.revsh_text), (4 bytes).
    Removing hw_can.o(i.HW_CAN_DMA_TX), (96 bytes).
    Removing hw_uart .o(.rev16_text), (4 bytes).
    Removing hw_uart .o(.revsh_text), (4 bytes).
    Removing list.o(.rev16_text), (4 bytes).
    Removing list.o(.revsh_text), (4 bytes).
    Removing list.o(i.vListInsertEnd), (24 bytes).
    Removing heap_4.o(.rev16_text), (4 bytes).
    Removing heap_4.o(.revsh_text), (4 bytes).
    Removing heap_4.o(i.pvPortCalloc), (46 bytes).
    Removing heap_4.o(i.vPortGetHeapStats), (96 bytes).
    Removing heap_4.o(i.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(i.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(i.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing port.o(.rev16_text), (4 bytes).
    Removing port.o(.revsh_text), (4 bytes).
    Removing port.o(i.vPortEndScheduler), (24 bytes).
    Removing queue.o(.rev16_text), (4 bytes).
    Removing queue.o(.revsh_text), (4 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (24 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (12 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (28 bytes).
    Removing queue.o(i.vQueueDelete), (16 bytes).
    Removing queue.o(i.xQueueCreateMutex), (36 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (132 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (22 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (24 bytes).
    Removing queue.o(i.xQueuePeek), (258 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (76 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (136 bytes).
    Removing queue.o(i.xQueueSemaphoreTake), (312 bytes).
    Removing tasks.o(.rev16_text), (4 bytes).
    Removing tasks.o(.revsh_text), (4 bytes).
    Removing tasks.o(i.pcTaskGetName), (24 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (44 bytes).
    Removing tasks.o(i.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(i.ulTaskGenericNotifyTake), (104 bytes).
    Removing tasks.o(i.ulTaskGenericNotifyValueClear), (48 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (32 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (32 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (24 bytes).
    Removing tasks.o(i.vTaskDelete), (128 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (20 bytes).
    Removing tasks.o(i.vTaskGenericNotifyGiveFromISR), (224 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (84 bytes).
    Removing tasks.o(i.vTaskPriorityDisinheritAfterTimeout), (144 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (172 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (172 bytes).
    Removing tasks.o(i.vTaskResume), (120 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (36 bytes).
    Removing tasks.o(i.vTaskSuspend), (136 bytes).
    Removing tasks.o(i.xTaskCatchUpTicks), (44 bytes).
    Removing tasks.o(i.xTaskDelayUntil), (100 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (240 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (288 bytes).
    Removing tasks.o(i.xTaskGenericNotifyStateClear), (56 bytes).
    Removing tasks.o(i.xTaskGenericNotifyWait), (128 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(i.xTaskPriorityInherit), (148 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (144 bytes).
    Removing timers.o(.rev16_text), (4 bytes).
    Removing timers.o(.revsh_text), (4 bytes).
    Removing timers.o(i.pcTimerGetName), (12 bytes).
    Removing timers.o(i.pvTimerGetTimerID), (24 bytes).
    Removing timers.o(i.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(i.vTimerSetReloadMode), (42 bytes).
    Removing timers.o(i.vTimerSetTimerID), (24 bytes).
    Removing timers.o(i.xTimerGetExpiryTime), (12 bytes).
    Removing timers.o(i.xTimerGetReloadMode), (36 bytes).
    Removing timers.o(i.xTimerGetTimerDaemonTaskHandle), (20 bytes).
    Removing timers.o(i.xTimerIsTimerActive), (36 bytes).
    Removing lks32mc08x_DMA.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_DMA.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_DMA.o(i.DMA_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_DMA.o(i.DMA_GetIRQFlag), (48 bytes).
    Removing lks32mc08x_can.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_can.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_can.o(i.CAN_Manual_Awake), (24 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadALC), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadErrorCode), (36 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadRXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadState), (8 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadTXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReceFramInfor), (16 bytes).
    Removing lks32mc08x_can.o(i.CAN_Receive_Msg), (184 bytes).
    Removing lks32mc08x_can.o(i.CAN_Sleep), (76 bytes).
    Removing lks32mc08x_can.o(i.EFF_ID_Filter), (104 bytes).
    Removing lks32mc08x_can.o(i.ID1_Filter_Dual), (164 bytes).
    Removing lks32mc08x_can.o(i.ID2_Filter_Dual), (136 bytes).
    Removing lks32mc08x_can.o(i.My_CAN_Send_Msg), (200 bytes).
    Removing lks32mc08x_exti.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_exti.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_ClearIRQFlag), (24 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_GetIRQFlag), (40 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_Trigger_Config), (60 bytes).
    Removing lks32mc08x_gpio.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_gpio.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_LockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadInputData), (4 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadInputDataBit), (14 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadOutputData), (4 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_UnlockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_Write), (8 bytes).
    Removing lks32mc08x_iwdg.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_iwdg.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_DISABLE), (16 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_ENABLE), (16 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_Feed), (36 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_Init), (64 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_StrutInit), (10 bytes).
    Removing lks32mc08x_sys.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_sys.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_sys.o(i.DSP_Init), (12 bytes).
    Removing lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd), (36 bytes).
    Removing lks32mc08x_sys.o(i.SYS_ClearRst), (28 bytes).
    Removing lks32mc08x_sys.o(i.SYS_EnablePORFilter), (28 bytes).
    Removing lks32mc08x_sys.o(i.SYS_FallSleep), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_FeedDog), (60 bytes).
    Removing lks32mc08x_sys.o(i.SYS_GetRstSource), (12 bytes).
    Removing lks32mc08x_sys.o(i.SYS_Init), (108 bytes).
    Removing lks32mc08x_sys.o(i.SYS_SetWakeInterval), (28 bytes).
    Removing lks32mc08x_sys.o(i.SYS_SoftResetModule), (28 bytes).
    Removing lks32mc08x_sys.o(i.SYS_StructInit), (22 bytes).
    Removing lks32mc08x_sys.o(i.SYS_WatchDogCmd), (40 bytes).
    Removing lks32mc08x_sys.o(i.SetWakeIO), (36 bytes).
    Removing lks32mc08x_sys.o(i.Switch2HRC), (60 bytes).
    Removing lks32mc08x_sys.o(i.Switch2PLL), (60 bytes).
    Removing lks32mc08x_sys.o(.bss), (12 bytes).
    Removing lks32mc08x_tim.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_tim.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_tim.o(i.ECD_ClearIRQFlag), (36 bytes).
    Removing lks32mc08x_tim.o(i.ECD_GetIRQFlag), (56 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ClearIRQFlag), (60 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDCmd), (60 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDInit), (164 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDStructInit), (20 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECD_GetCount), (4 bytes).
    Removing lks32mc08x_tim.o(i.TIM_GetIRQFlag), (92 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCMPT0), (4 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCMPT1), (4 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCount), (4 bytes).
    Removing lks32mc08x_uart.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_uart.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_ClearIRQFlag), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_GetIRQFlag), (18 bytes).
    Removing lks32mc08x_uart.o(i.UART_ReadData), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendAddr_485), (44 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendData), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendData_485), (44 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_AllocDownBuffer), (100 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_AllocUpBuffer), (100 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_ConfigDownBuffer), (88 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_ConfigUpBuffer), (88 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_GetAvailWriteSpace), (24 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_GetBytesInBuffer), (32 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_GetKey), (28 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_HasData), (20 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_HasDataUp), (20 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_HasKey), (36 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_PutCharSkip), (84 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_PutCharSkipNoLock), (52 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_Read), (24 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_ReadNoLock), (128 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBuffer), (24 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBufferNoLock), (128 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsDownBuffer), (64 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsUpBuffer), (64 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_SetNameDownBuffer), (64 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_SetNameUpBuffer), (64 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal), (132 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut), (172 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WaitKey), (12 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_Write), (52 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBuffer), (52 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock), (92 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock), (92 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteSkipNoLock), (108 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteString), (24 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteWithOverwriteNoLock), (144 bytes).
    Removing SEGGER_RTT.o(i._GetAvailWriteSpace), (22 bytes).
    Removing SEGGER_RTT.o(i._PostTerminalSwitch), (32 bytes).
    Removing SEGGER_RTT.o(i._WriteBlocking), (96 bytes).
    Removing SEGGER_RTT.o(i._WriteNoCheck), (60 bytes).
    Removing SEGGER_RTT.o(.data), (17 bytes).
    Removing SEGGER_RTT_printf.o(i.SEGGER_RTT_printf), (24 bytes).
    Removing SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf), (404 bytes).
    Removing SEGGER_RTT_printf.o(i._PrintInt), (200 bytes).
    Removing SEGGER_RTT_printf.o(i._PrintUnsigned), (216 bytes).
    Removing SEGGER_RTT_printf.o(i._StoreChar), (62 bytes).
    Removing SEGGER_RTT_printf.o(.constdata), (16 bytes).
    Removing common.o(.rev16_text), (4 bytes).
    Removing common.o(.revsh_text), (4 bytes).
    Removing common.o(i.CheckCrc8), (52 bytes).
    Removing common.o(i.CheckSum), (36 bytes).
    Removing freertos.o(.rev16_text), (4 bytes).
    Removing freertos.o(.revsh_text), (4 bytes).
    Removing hardware_init.o(.rev16_text), (4 bytes).
    Removing hardware_init.o(.revsh_text), (4 bytes).
    Removing interrupt.o(.rev16_text), (4 bytes).
    Removing interrupt.o(.revsh_text), (4 bytes).
    Removing interrupt.o(i.BusFault_Handler), (28 bytes).
    Removing interrupt.o(i.MemManage_Handler), (2 bytes).
    Removing interrupt.o(i.SleepTimer_IRQHandler), (2 bytes).
    Removing interrupt.o(i.UsageFault_Handler), (28 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing startup_lks32mc08x.o(HEAP), (2048 bytes).
    Removing dadd.o(.text), (360 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

220 unused section(s) (total 13760 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_lks32mc08x.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  ldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    .\Driver\Src\hw_485.c                    0x00000000   Number         0  hw_485.o ABSOLUTE
    .\Driver\Src\hw_can.c                    0x00000000   Number         0  hw_can.o ABSOLUTE
    .\Driver\Src\hw_uart .c                  0x00000000   Number         0  hw_uart .o ABSOLUTE
    .\FreeRTOS-Kernel\list.c                 0x00000000   Number         0  list.o ABSOLUTE
    .\FreeRTOS-Kernel\portable\MemMang\heap_4.c 0x00000000   Number         0  heap_4.o ABSOLUTE
    .\FreeRTOS-Kernel\portable\RVDS\ARM_CM0\port.c 0x00000000   Number         0  port.o ABSOLUTE
    .\FreeRTOS-Kernel\queue.c                0x00000000   Number         0  queue.o ABSOLUTE
    .\FreeRTOS-Kernel\tasks.c                0x00000000   Number         0  tasks.o ABSOLUTE
    .\FreeRTOS-Kernel\timers.c               0x00000000   Number         0  timers.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_DMA.c 0x00000000   Number         0  lks32mc08x_DMA.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_can.c 0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_exti.c 0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_gpio.c 0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_iwdg.c 0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_sys.c 0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_tim.c 0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_uart.c 0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\startup_lks32mc08x.s 0x00000000   Number         0  startup_lks32mc08x.o ABSOLUTE
    .\SEGGER_RTT_V764b\RTT\SEGGER_RTT.c      0x00000000   Number         0  SEGGER_RTT.o ABSOLUTE
    .\SEGGER_RTT_V764b\RTT\SEGGER_RTT_printf.c 0x00000000   Number         0  SEGGER_RTT_printf.o ABSOLUTE
    .\System\Src\common.c                    0x00000000   Number         0  common.o ABSOLUTE
    .\System\Src\freertos.c                  0x00000000   Number         0  freertos.o ABSOLUTE
    .\System\Src\hardware_init.c             0x00000000   Number         0  hardware_init.o ABSOLUTE
    .\System\Src\interrupt.c                 0x00000000   Number         0  interrupt.o ABSOLUTE
    .\System\Src\main.c                      0x00000000   Number         0  main.o ABSOLUTE
    .\\Driver\\Src\\hw_485.c                 0x00000000   Number         0  hw_485.o ABSOLUTE
    .\\Driver\\Src\\hw_can.c                 0x00000000   Number         0  hw_can.o ABSOLUTE
    .\\Driver\\Src\\hw_uart .c               0x00000000   Number         0  hw_uart .o ABSOLUTE
    .\\FreeRTOS-Kernel\\list.c               0x00000000   Number         0  list.o ABSOLUTE
    .\\FreeRTOS-Kernel\\portable\\MemMang\\heap_4.c 0x00000000   Number         0  heap_4.o ABSOLUTE
    .\\FreeRTOS-Kernel\\portable\\RVDS\\ARM_CM0\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    .\\FreeRTOS-Kernel\\queue.c              0x00000000   Number         0  queue.o ABSOLUTE
    .\\FreeRTOS-Kernel\\tasks.c              0x00000000   Number         0  tasks.o ABSOLUTE
    .\\FreeRTOS-Kernel\\timers.c             0x00000000   Number         0  timers.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_DMA.c 0x00000000   Number         0  lks32mc08x_DMA.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_can.c 0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_exti.c 0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_gpio.c 0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_iwdg.c 0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_sys.c 0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_tim.c 0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_uart.c 0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    .\\System\\Src\\common.c                 0x00000000   Number         0  common.o ABSOLUTE
    .\\System\\Src\\freertos.c               0x00000000   Number         0  freertos.o ABSOLUTE
    .\\System\\Src\\hardware_init.c          0x00000000   Number         0  hardware_init.o ABSOLUTE
    .\\System\\Src\\interrupt.c              0x00000000   Number         0  interrupt.o ABSOLUTE
    .\\System\\Src\\main.c                   0x00000000   Number         0  main.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000E                 0x000000d0   Section        4  entry12b.o(.ARM.Collect$$$$0000000E)
    .ARM.Collect$$$$0000000F                 0x000000d4   Section        0  entry10a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00000011                 0x000000d4   Section        0  entry11a.o(.ARM.Collect$$$$00000011)
    .ARM.Collect$$$$00002712                 0x000000d4   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d4   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .emb_text                                0x000000d8   Section      120  port.o(.emb_text)
    .text                                    0x00000150   Section       40  startup_lks32mc08x.o(.text)
    .text                                    0x00000178   Section        0  uidiv.o(.text)
    .text                                    0x000001a4   Section        0  ldiv.o(.text)
    .text                                    0x000001f0   Section        0  memcpya.o(.text)
    .text                                    0x00000214   Section        0  memseta.o(.text)
    .text                                    0x00000238   Section        0  uldiv.o(.text)
    .text                                    0x00000298   Section       36  init.o(.text)
    .text                                    0x000002bc   Section        0  llshl.o(.text)
    .text                                    0x000002dc   Section        0  llushr.o(.text)
    i.ADC0_IRQHandler                        0x000002fe   Section        0  interrupt.o(i.ADC0_IRQHandler)
    i.CANTaskFunc                            0x00000300   Section        0  freertos.o(i.CANTaskFunc)
    CANTaskFunc                              0x00000301   Thumb Code     8  freertos.o(i.CANTaskFunc)
    i.CAN_GetIRQFlag                         0x00000308   Section        0  lks32mc08x_can.o(i.CAN_GetIRQFlag)
    i.CAN_Init                               0x00000314   Section        0  lks32mc08x_can.o(i.CAN_Init)
    i.CAN_StructInit                         0x00000358   Section        0  lks32mc08x_can.o(i.CAN_StructInit)
    i.CMP_IRQHandler                         0x0000036e   Section        0  interrupt.o(i.CMP_IRQHandler)
    i.Clock_Init                             0x00000370   Section        0  hardware_init.o(i.Clock_Init)
    i.DMA_CHx_EN                             0x000003a0   Section        0  lks32mc08x_DMA.o(i.DMA_CHx_EN)
    i.DMA_IRQHandler                         0x000003b4   Section        0  interrupt.o(i.DMA_IRQHandler)
    i.DMA_Init                               0x000003b8   Section        0  lks32mc08x_DMA.o(i.DMA_Init)
    i.DMA_StructInit                         0x0000040c   Section        0  lks32mc08x_DMA.o(i.DMA_StructInit)
    i.ENCODER0_IRQHandler                    0x00000416   Section        0  interrupt.o(i.ENCODER0_IRQHandler)
    i.ENCODER1_IRQHandler                    0x00000418   Section        0  interrupt.o(i.ENCODER1_IRQHandler)
    i.GPIO_IRQHandler                        0x0000041a   Section        0  interrupt.o(i.GPIO_IRQHandler)
    i.GPIO_Init                              0x0000041c   Section        0  lks32mc08x_gpio.o(i.GPIO_Init)
    i.GPIO_PinAFConfig                       0x00000498   Section        0  lks32mc08x_gpio.o(i.GPIO_PinAFConfig)
    i.GPIO_ReadOutputDataBit                 0x0000056c   Section        0  lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit)
    i.GPIO_ResetBits                         0x0000057a   Section        0  lks32mc08x_gpio.o(i.GPIO_ResetBits)
    i.GPIO_SetBits                           0x00000584   Section        0  lks32mc08x_gpio.o(i.GPIO_SetBits)
    i.GPIO_StructInit                        0x0000058e   Section        0  lks32mc08x_gpio.o(i.GPIO_StructInit)
    i.GPIO_WriteBit                          0x0000059a   Section        0  lks32mc08x_gpio.o(i.GPIO_WriteBit)
    i.HALL_IRQHandler                        0x000005aa   Section        0  interrupt.o(i.HALL_IRQHandler)
    i.HW_485_GPIO_Init                       0x000005ac   Section        0  hw_485.o(i.HW_485_GPIO_Init)
    i.HW_485_Init                            0x00000614   Section        0  hw_485.o(i.HW_485_Init)
    i.HW_485_UART_Init                       0x00000640   Section        0  hw_485.o(i.HW_485_UART_Init)
    i.HW_CAN_DMA_RX                          0x00000664   Section        0  hw_can.o(i.HW_CAN_DMA_RX)
    i.HW_CAN_GPIO_Init                       0x000006c8   Section        0  hw_can.o(i.HW_CAN_GPIO_Init)
    i.HW_CAN_Init                            0x00000728   Section        0  hw_can.o(i.HW_CAN_Init)
    i.HW_NVIC_Init                           0x00000788   Section        0  hardware_init.o(i.HW_NVIC_Init)
    i.HW_SysTick_Config                      0x000007b0   Section        0  hardware_init.o(i.HW_SysTick_Config)
    i.HW_TimeoutTimer_Init                   0x000007f4   Section        0  hw_485.o(i.HW_TimeoutTimer_Init)
    i.HW_UART_DMA_Init                       0x00000828   Section        0  hw_uart .o(i.HW_UART_DMA_Init)
    i.HW_UART_GPIO_Init                      0x00000878   Section        0  hw_uart .o(i.HW_UART_GPIO_Init)
    i.HW_UART_Init                           0x000008bc   Section        0  hw_uart .o(i.HW_UART_Init)
    i.HardFault_Handler                      0x000008e8   Section        0  interrupt.o(i.HardFault_Handler)
    i.Hardware_Init                          0x00000904   Section        0  hardware_init.o(i.Hardware_Init)
    i.I2C0_IRQHandler                        0x000009bc   Section        0  interrupt.o(i.I2C0_IRQHandler)
    i.Invers_GPIO                            0x000009be   Section        0  hardware_init.o(i.Invers_GPIO)
    i.LKS_FREERTOS_Init                      0x000009e0   Section        0  freertos.o(i.LKS_FREERTOS_Init)
    i.MCPWM_IRQHandler                       0x00000ba8   Section        0  interrupt.o(i.MCPWM_IRQHandler)
    i.NMI_Handler                            0x00000baa   Section        0  interrupt.o(i.NMI_Handler)
    i.RS485TaskFunc                          0x00000bac   Section        0  freertos.o(i.RS485TaskFunc)
    RS485TaskFunc                            0x00000bad   Thumb Code    28  freertos.o(i.RS485TaskFunc)
    i.SEGGER_RTT_Init                        0x00000be0   Section        0  SEGGER_RTT.o(i.SEGGER_RTT_Init)
    i.SEGGER_RTT_PutChar                     0x00000be8   Section        0  SEGGER_RTT.o(i.SEGGER_RTT_PutChar)
    i.SFF_ID_Filter                          0x00000c48   Section        0  lks32mc08x_can.o(i.SFF_ID_Filter)
    i.SPI0_IRQHandler                        0x00000ca8   Section        0  interrupt.o(i.SPI0_IRQHandler)
    i.SVC_Handler                            0x00000caa   Section        0  port.o(i.SVC_Handler)
    i.SYS_ModuleClockCmd                     0x00000cac   Section        0  lks32mc08x_sys.o(i.SYS_ModuleClockCmd)
    i.SoftDelay                              0x00000cd0   Section        0  hardware_init.o(i.SoftDelay)
    i.SysLEDTimerCallback                    0x00000ce4   Section        0  freertos.o(i.SysLEDTimerCallback)
    SysLEDTimerCallback                      0x00000ce5   Thumb Code    12  freertos.o(i.SysLEDTimerCallback)
    i.SysTick_Handler                        0x00000cf4   Section        0  interrupt.o(i.SysTick_Handler)
    i.SystemInit                             0x00000d04   Section        0  hardware_init.o(i.SystemInit)
    i.TIM_TimerCmd                           0x00000d0c   Section        0  lks32mc08x_tim.o(i.TIM_TimerCmd)
    i.TIM_TimerInit                          0x00000d8c   Section        0  lks32mc08x_tim.o(i.TIM_TimerInit)
    i.TIM_TimerStrutInit                     0x00000e8c   Section        0  lks32mc08x_tim.o(i.TIM_TimerStrutInit)
    i.UART0_IRQHandler                       0x00000eb0   Section        0  interrupt.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x00000f2c   Section        0  interrupt.o(i.UART1_IRQHandler)
    i.UART_Init                              0x00000f30   Section        0  lks32mc08x_uart.o(i.UART_Init)
    i.UART_StructInit                        0x00000ff4   Section        0  lks32mc08x_uart.o(i.UART_StructInit)
    i.UTIMER0_IRQHandler                     0x00001014   Section        0  interrupt.o(i.UTIMER0_IRQHandler)
    i.UTIMER1_IRQHandler                     0x00001040   Section        0  interrupt.o(i.UTIMER1_IRQHandler)
    i.UTIMER2_IRQHandler                     0x00001042   Section        0  interrupt.o(i.UTIMER2_IRQHandler)
    i.UTIMER3_IRQHandler                     0x00001044   Section        0  interrupt.o(i.UTIMER3_IRQHandler)
    i._DoInit                                0x00001048   Section        0  SEGGER_RTT.o(i._DoInit)
    _DoInit                                  0x00001049   Thumb Code    76  SEGGER_RTT.o(i._DoInit)
    i.__0printf$8                            0x000010ac   Section        0  printf8.o(i.__0printf$8)
    i.__ARM_common_switch8                   0x000010cc   Section        0  tasks.o(i.__ARM_common_switch8)
    i.__NVIC_EnableIRQ                       0x000010e8   Section        0  hardware_init.o(i.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x000010e9   Thumb Code    18  hardware_init.o(i.__NVIC_EnableIRQ)
    i.__NVIC_SetPriority                     0x00001100   Section        0  hardware_init.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x00001101   Thumb Code    60  hardware_init.o(i.__NVIC_SetPriority)
    i.__scatterload_copy                     0x00001144   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00001152   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00001154   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00001164   Section        0  printf8.o(i._printf_core)
    _printf_core                             0x00001165   Thumb Code  1020  printf8.o(i._printf_core)
    i._printf_post_padding                   0x0000158c   Section        0  printf8.o(i._printf_post_padding)
    _printf_post_padding                     0x0000158d   Thumb Code    32  printf8.o(i._printf_post_padding)
    i._printf_pre_padding                    0x000015ac   Section        0  printf8.o(i._printf_pre_padding)
    _printf_pre_padding                      0x000015ad   Thumb Code    44  printf8.o(i._printf_pre_padding)
    i.fputc                                  0x000015d8   Section        0  hardware_init.o(i.fputc)
    i.main                                   0x000015e8   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x00001638   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x00001639   Thumb Code   106  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x000016ac   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x000016ad   Thumb Code   202  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckForValidListAndQueue           0x00001780   Section        0  timers.o(i.prvCheckForValidListAndQueue)
    prvCheckForValidListAndQueue             0x00001781   Thumb Code    54  timers.o(i.prvCheckForValidListAndQueue)
    i.prvCopyDataFromQueue                   0x000017c0   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x000017c1   Thumb Code    38  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x000017e6   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x000017e7   Thumb Code   112  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x00001856   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x00001857   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvHeapInit                            0x00001868   Section        0  heap_4.o(i.prvHeapInit)
    prvHeapInit                              0x00001869   Thumb Code    54  heap_4.o(i.prvHeapInit)
    i.prvIdleTask                            0x000018a8   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x000018a9   Thumb Code    64  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewTask                   0x000018f0   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x000018f1   Thumb Code   120  tasks.o(i.prvInitialiseNewTask)
    i.prvInsertBlockIntoFreeList             0x00001968   Section        0  heap_4.o(i.prvInsertBlockIntoFreeList)
    prvInsertBlockIntoFreeList               0x00001969   Thumb Code    72  heap_4.o(i.prvInsertBlockIntoFreeList)
    i.prvInsertTimerInActiveList             0x000019b4   Section        0  timers.o(i.prvInsertTimerInActiveList)
    prvInsertTimerInActiveList               0x000019b5   Thumb Code    52  timers.o(i.prvInsertTimerInActiveList)
    i.prvIsQueueEmpty                        0x000019ec   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x000019ed   Thumb Code    28  queue.o(i.prvIsQueueEmpty)
    i.prvProcessExpiredTimer                 0x00001a08   Section        0  timers.o(i.prvProcessExpiredTimer)
    prvProcessExpiredTimer                   0x00001a09   Thumb Code    56  timers.o(i.prvProcessExpiredTimer)
    i.prvProcessReceivedCommands             0x00001a44   Section        0  timers.o(i.prvProcessReceivedCommands)
    prvProcessReceivedCommands               0x00001a45   Thumb Code   220  timers.o(i.prvProcessReceivedCommands)
    i.prvProcessTimerOrBlockTask             0x00001b24   Section        0  timers.o(i.prvProcessTimerOrBlockTask)
    prvProcessTimerOrBlockTask               0x00001b25   Thumb Code    92  timers.o(i.prvProcessTimerOrBlockTask)
    i.prvReloadTimer                         0x00001b84   Section        0  timers.o(i.prvReloadTimer)
    prvReloadTimer                           0x00001b85   Thumb Code    40  timers.o(i.prvReloadTimer)
    i.prvResetNextTaskUnblockTime            0x00001bac   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x00001bad   Thumb Code    26  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvSampleTimeNow                       0x00001bcc   Section        0  timers.o(i.prvSampleTimeNow)
    prvSampleTimeNow                         0x00001bcd   Thumb Code    62  timers.o(i.prvSampleTimeNow)
    i.prvTaskExitError                       0x00001c10   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x00001c11   Thumb Code    14  port.o(i.prvTaskExitError)
    i.prvTimerTask                           0x00001c24   Section        0  timers.o(i.prvTimerTask)
    prvTimerTask                             0x00001c25   Thumb Code    32  timers.o(i.prvTimerTask)
    i.prvUnlockQueue                         0x00001c48   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x00001c49   Thumb Code   112  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x00001cb8   Section        0  heap_4.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x00001d64   Section        0  port.o(i.pxPortInitialiseStack)
    i.uxListRemove                           0x00001d84   Section        0  list.o(i.uxListRemove)
    i.uxTaskGetNumberOfTasks                 0x00001dac   Section        0  tasks.o(i.uxTaskGetNumberOfTasks)
    i.vListInitialise                        0x00001db8   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x00001dce   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x00001dd4   Section        0  list.o(i.vListInsert)
    i.vPortEnterCritical                     0x00001e04   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x00001e1c   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x00001e38   Section        0  heap_4.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x00001e80   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vPortYield                             0x00001ea8   Section        0  port.o(i.vPortYield)
    i.vQueueWaitForMessageRestricted         0x00001ec0   Section        0  queue.o(i.vQueueWaitForMessageRestricted)
    i.vTaskDelay                             0x00001f04   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskInternalSetTimeOutState           0x00001f34   Section        0  tasks.o(i.vTaskInternalSetTimeOutState)
    i.vTaskMissedYield                       0x00001f44   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x00001f50   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPlaceOnEventListRestricted        0x00001f74   Section        0  tasks.o(i.vTaskPlaceOnEventListRestricted)
    i.vTaskStartScheduler                    0x00001fbc   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x00002014   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x00002024   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x0000207c   Section        0  port.o(i.xPortStartScheduler)
    i.xPortSysTickHandler                    0x000020ac   Section        0  port.o(i.xPortSysTickHandler)
    i.xQueueGenericCreate                    0x000020d0   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReset                     0x0000211c   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x000021a2   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueGenericSendFromISR               0x000022ba   Section        0  queue.o(i.xQueueGenericSendFromISR)
    i.xQueueReceive                          0x00002356   Section        0  queue.o(i.xQueueReceive)
    i.xTaskCheckForTimeOut                   0x00002458   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x000024b8   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskGetSchedulerState                 0x0000250c   Section        0  tasks.o(i.xTaskGetSchedulerState)
    i.xTaskGetTickCount                      0x0000252c   Section        0  tasks.o(i.xTaskGetTickCount)
    i.xTaskIncrementTick                     0x00002538   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x00002648   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskRemoveFromEventList               0x000026d0   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x00002798   Section        0  tasks.o(i.xTaskResumeAll)
    i.xTimerCreate                           0x00002898   Section        0  timers.o(i.xTimerCreate)
    i.xTimerCreateTimerTask                  0x000028f0   Section        0  timers.o(i.xTimerCreateTimerTask)
    i.xTimerGenericCommand                   0x00002930   Section        0  timers.o(i.xTimerGenericCommand)
    i.xTimerGetPeriod                        0x00002980   Section        0  timers.o(i.xTimerGetPeriod)
    .constdata                               0x0000298c   Section       17  SEGGER_RTT.o(.constdata)
    _aInitStr                                0x0000298c   Data          17  SEGGER_RTT.o(.constdata)
    .data                                    0x20000000   Section       28  heap_4.o(.data)
    pxEnd                                    0x20000000   Data           4  heap_4.o(.data)
    xFreeBytesRemaining                      0x20000004   Data           4  heap_4.o(.data)
    xMinimumEverFreeBytesRemaining           0x20000008   Data           4  heap_4.o(.data)
    xNumberOfSuccessfulAllocations           0x2000000c   Data           4  heap_4.o(.data)
    xNumberOfSuccessfulFrees                 0x20000010   Data           4  heap_4.o(.data)
    xStart                                   0x20000014   Data           8  heap_4.o(.data)
    .data                                    0x2000001c   Section        4  port.o(.data)
    uxCriticalNesting                        0x2000001c   Data           4  port.o(.data)
    .data                                    0x20000020   Section       64  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x20000024   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000028   Data           4  tasks.o(.data)
    xTickCount                               0x2000002c   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x20000030   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000034   Data           4  tasks.o(.data)
    xPendedTicks                             0x20000038   Data           4  tasks.o(.data)
    xYieldPending                            0x2000003c   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x20000040   Data           4  tasks.o(.data)
    uxTaskNumber                             0x20000044   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x20000048   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x2000004c   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x20000054   Data           4  tasks.o(.data)
    pxDelayedTaskList                        0x20000058   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x2000005c   Data           4  tasks.o(.data)
    .data                                    0x20000060   Section       20  timers.o(.data)
    xTimerQueue                              0x20000060   Data           4  timers.o(.data)
    xTimerTaskHandle                         0x20000064   Data           4  timers.o(.data)
    xLastTime                                0x20000068   Data           4  timers.o(.data)
    pxCurrentTimerList                       0x2000006c   Data           4  timers.o(.data)
    pxOverflowTimerList                      0x20000070   Data           4  timers.o(.data)
    .data                                    0x20000074   Section       20  freertos.o(.data)
    .data                                    0x20000088   Section        4  hardware_init.o(.data)
    .data                                    0x2000008c   Section        2  interrupt.o(.data)
    .data                                    0x20000090   Section        4  stdout.o(.data)
    .bss                                     0x20000094   Section       16  hw_485.o(.bss)
    .bss                                     0x200000a4   Section       55  hw_can.o(.bss)
    .bss                                     0x200000db   Section      128  hw_uart .o(.bss)
    .bss                                     0x2000015b   Section     3072  heap_4.o(.bss)
    ucHeap                                   0x2000015b   Data        3072  heap_4.o(.bss)
    .bss                                     0x20000d5c   Section      240  tasks.o(.bss)
    pxReadyTasksLists                        0x20000d5c   Data         140  tasks.o(.bss)
    xDelayedTaskList1                        0x20000de8   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x20000dfc   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x20000e10   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x20000e24   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x20000e38   Data          20  tasks.o(.bss)
    .bss                                     0x20000e4c   Section       40  timers.o(.bss)
    xActiveTimerList1                        0x20000e4c   Data          20  timers.o(.bss)
    xActiveTimerList2                        0x20000e60   Data          20  timers.o(.bss)
    .bss                                     0x20000e74   Section      312  SEGGER_RTT.o(.bss)
    _acUpBuffer                              0x20000f1c   Data         128  SEGGER_RTT.o(.bss)
    _acDownBuffer                            0x20000f9c   Data          16  SEGGER_RTT.o(.bss)
    STACK                                    0x20000fb0   Section      512  startup_lks32mc08x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lks32mc08x.o(RESET)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __arm_fini_                               - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_lks32mc08x.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_lks32mc08x.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_lib_shutdown_fini                   0x000000d1   Thumb Code     0  entry12b.o(.ARM.Collect$$$$0000000E)
    __rt_final_cpp                           0x000000d5   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000F)
    __rt_final_exit                          0x000000d5   Thumb Code     0  entry11a.o(.ARM.Collect$$$$00000011)
    __asm___6_port_c_39a90d8d__prvPortStartFirstTask 0x000000d9   Thumb Code    36  port.o(.emb_text)
    ulSetInterruptMaskFromISR                0x00000101   Thumb Code     8  port.o(.emb_text)
    vClearInterruptMaskFromISR               0x00000109   Thumb Code     6  port.o(.emb_text)
    PendSV_Handler                           0x0000010f   Thumb Code    62  port.o(.emb_text)
    Reset_Handler                            0x00000151   Thumb Code    14  startup_lks32mc08x.o(.text)
    CAN_IRQHandler                           0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    DSP_IRQHandler                           0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    PWRDN_IRQHandler                         0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    SIF_IRQHandler                           0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    WAKE_IRQHandler                          0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    __aeabi_uidiv                            0x00000179   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000179   Thumb Code    44  uidiv.o(.text)
    __aeabi_ldivmod                          0x000001a5   Thumb Code    76  ldiv.o(.text)
    __aeabi_memcpy                           0x000001f1   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000001f1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000001f1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x00000215   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000215   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000215   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000223   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000223   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000223   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00000227   Thumb Code    18  memseta.o(.text)
    __aeabi_uldivmod                         0x00000239   Thumb Code    96  uldiv.o(.text)
    __scatterload                            0x00000299   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000299   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x000002bd   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x000002bd   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x000002dd   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x000002dd   Thumb Code     0  llushr.o(.text)
    ADC0_IRQHandler                          0x000002ff   Thumb Code     2  interrupt.o(i.ADC0_IRQHandler)
    CAN_GetIRQFlag                           0x00000309   Thumb Code     6  lks32mc08x_can.o(i.CAN_GetIRQFlag)
    CAN_Init                                 0x00000315   Thumb Code    64  lks32mc08x_can.o(i.CAN_Init)
    CAN_StructInit                           0x00000359   Thumb Code    22  lks32mc08x_can.o(i.CAN_StructInit)
    CMP_IRQHandler                           0x0000036f   Thumb Code     2  interrupt.o(i.CMP_IRQHandler)
    Clock_Init                               0x00000371   Thumb Code    36  hardware_init.o(i.Clock_Init)
    DMA_CHx_EN                               0x000003a1   Thumb Code    20  lks32mc08x_DMA.o(i.DMA_CHx_EN)
    DMA_IRQHandler                           0x000003b5   Thumb Code     2  interrupt.o(i.DMA_IRQHandler)
    DMA_Init                                 0x000003b9   Thumb Code    78  lks32mc08x_DMA.o(i.DMA_Init)
    DMA_StructInit                           0x0000040d   Thumb Code    10  lks32mc08x_DMA.o(i.DMA_StructInit)
    ENCODER0_IRQHandler                      0x00000417   Thumb Code     2  interrupt.o(i.ENCODER0_IRQHandler)
    ENCODER1_IRQHandler                      0x00000419   Thumb Code     2  interrupt.o(i.ENCODER1_IRQHandler)
    GPIO_IRQHandler                          0x0000041b   Thumb Code     2  interrupt.o(i.GPIO_IRQHandler)
    GPIO_Init                                0x0000041d   Thumb Code   122  lks32mc08x_gpio.o(i.GPIO_Init)
    GPIO_PinAFConfig                         0x00000499   Thumb Code   202  lks32mc08x_gpio.o(i.GPIO_PinAFConfig)
    GPIO_ReadOutputDataBit                   0x0000056d   Thumb Code    14  lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit)
    GPIO_ResetBits                           0x0000057b   Thumb Code    10  lks32mc08x_gpio.o(i.GPIO_ResetBits)
    GPIO_SetBits                             0x00000585   Thumb Code    10  lks32mc08x_gpio.o(i.GPIO_SetBits)
    GPIO_StructInit                          0x0000058f   Thumb Code    12  lks32mc08x_gpio.o(i.GPIO_StructInit)
    GPIO_WriteBit                            0x0000059b   Thumb Code    16  lks32mc08x_gpio.o(i.GPIO_WriteBit)
    HALL_IRQHandler                          0x000005ab   Thumb Code     2  interrupt.o(i.HALL_IRQHandler)
    HW_485_GPIO_Init                         0x000005ad   Thumb Code   100  hw_485.o(i.HW_485_GPIO_Init)
    HW_485_Init                              0x00000615   Thumb Code    34  hw_485.o(i.HW_485_Init)
    HW_485_UART_Init                         0x00000641   Thumb Code    32  hw_485.o(i.HW_485_UART_Init)
    HW_CAN_DMA_RX                            0x00000665   Thumb Code    90  hw_can.o(i.HW_CAN_DMA_RX)
    HW_CAN_GPIO_Init                         0x000006c9   Thumb Code    92  hw_can.o(i.HW_CAN_GPIO_Init)
    HW_CAN_Init                              0x00000729   Thumb Code    86  hw_can.o(i.HW_CAN_Init)
    HW_NVIC_Init                             0x00000789   Thumb Code    30  hardware_init.o(i.HW_NVIC_Init)
    HW_SysTick_Config                        0x000007b1   Thumb Code    58  hardware_init.o(i.HW_SysTick_Config)
    HW_TimeoutTimer_Init                     0x000007f5   Thumb Code    44  hw_485.o(i.HW_TimeoutTimer_Init)
    HW_UART_DMA_Init                         0x00000829   Thumb Code    68  hw_uart .o(i.HW_UART_DMA_Init)
    HW_UART_GPIO_Init                        0x00000879   Thumb Code    62  hw_uart .o(i.HW_UART_GPIO_Init)
    HW_UART_Init                             0x000008bd   Thumb Code    40  hw_uart .o(i.HW_UART_Init)
    HardFault_Handler                        0x000008e9   Thumb Code    20  interrupt.o(i.HardFault_Handler)
    Hardware_Init                            0x00000905   Thumb Code   114  hardware_init.o(i.Hardware_Init)
    I2C0_IRQHandler                          0x000009bd   Thumb Code     2  interrupt.o(i.I2C0_IRQHandler)
    Invers_GPIO                              0x000009bf   Thumb Code    34  hardware_init.o(i.Invers_GPIO)
    LKS_FREERTOS_Init                        0x000009e1   Thumb Code   162  freertos.o(i.LKS_FREERTOS_Init)
    MCPWM_IRQHandler                         0x00000ba9   Thumb Code     2  interrupt.o(i.MCPWM_IRQHandler)
    NMI_Handler                              0x00000bab   Thumb Code     2  interrupt.o(i.NMI_Handler)
    SEGGER_RTT_Init                          0x00000be1   Thumb Code     8  SEGGER_RTT.o(i.SEGGER_RTT_Init)
    SEGGER_RTT_PutChar                       0x00000be9   Thumb Code    92  SEGGER_RTT.o(i.SEGGER_RTT_PutChar)
    SFF_ID_Filter                            0x00000c49   Thumb Code    90  lks32mc08x_can.o(i.SFF_ID_Filter)
    SPI0_IRQHandler                          0x00000ca9   Thumb Code     2  interrupt.o(i.SPI0_IRQHandler)
    SVC_Handler                              0x00000cab   Thumb Code     2  port.o(i.SVC_Handler)
    SYS_ModuleClockCmd                       0x00000cad   Thumb Code    26  lks32mc08x_sys.o(i.SYS_ModuleClockCmd)
    SoftDelay                                0x00000cd1   Thumb Code    18  hardware_init.o(i.SoftDelay)
    SysTick_Handler                          0x00000cf5   Thumb Code    16  interrupt.o(i.SysTick_Handler)
    SystemInit                               0x00000d05   Thumb Code     8  hardware_init.o(i.SystemInit)
    TIM_TimerCmd                             0x00000d0d   Thumb Code   122  lks32mc08x_tim.o(i.TIM_TimerCmd)
    TIM_TimerInit                            0x00000d8d   Thumb Code   250  lks32mc08x_tim.o(i.TIM_TimerInit)
    TIM_TimerStrutInit                       0x00000e8d   Thumb Code    36  lks32mc08x_tim.o(i.TIM_TimerStrutInit)
    UART0_IRQHandler                         0x00000eb1   Thumb Code    58  interrupt.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x00000f2d   Thumb Code     2  interrupt.o(i.UART1_IRQHandler)
    UART_Init                                0x00000f31   Thumb Code   176  lks32mc08x_uart.o(i.UART_Init)
    UART_StructInit                          0x00000ff5   Thumb Code    30  lks32mc08x_uart.o(i.UART_StructInit)
    UTIMER0_IRQHandler                       0x00001015   Thumb Code    36  interrupt.o(i.UTIMER0_IRQHandler)
    UTIMER1_IRQHandler                       0x00001041   Thumb Code     2  interrupt.o(i.UTIMER1_IRQHandler)
    UTIMER2_IRQHandler                       0x00001043   Thumb Code     2  interrupt.o(i.UTIMER2_IRQHandler)
    UTIMER3_IRQHandler                       0x00001045   Thumb Code     2  interrupt.o(i.UTIMER3_IRQHandler)
    __0printf$8                              0x000010ad   Thumb Code    24  printf8.o(i.__0printf$8)
    __1printf$8                              0x000010ad   Thumb Code     0  printf8.o(i.__0printf$8)
    __2printf                                0x000010ad   Thumb Code     0  printf8.o(i.__0printf$8)
    __ARM_common_switch8                     0x000010cd   Thumb Code    26  tasks.o(i.__ARM_common_switch8)
    __scatterload_copy                       0x00001145   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00001153   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00001155   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputc                                    0x000015d9   Thumb Code    16  hardware_init.o(i.fputc)
    main                                     0x000015e9   Thumb Code    32  main.o(i.main)
    pvPortMalloc                             0x00001cb9   Thumb Code   168  heap_4.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x00001d65   Thumb Code    28  port.o(i.pxPortInitialiseStack)
    uxListRemove                             0x00001d85   Thumb Code    38  list.o(i.uxListRemove)
    uxTaskGetNumberOfTasks                   0x00001dad   Thumb Code     6  tasks.o(i.uxTaskGetNumberOfTasks)
    vListInitialise                          0x00001db9   Thumb Code    22  list.o(i.vListInitialise)
    vListInitialiseItem                      0x00001dcf   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x00001dd5   Thumb Code    48  list.o(i.vListInsert)
    vPortEnterCritical                       0x00001e05   Thumb Code    20  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x00001e1d   Thumb Code    22  port.o(i.vPortExitCritical)
    vPortFree                                0x00001e39   Thumb Code    68  heap_4.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x00001e81   Thumb Code    32  port.o(i.vPortSetupTimerInterrupt)
    vPortYield                               0x00001ea9   Thumb Code    18  port.o(i.vPortYield)
    vQueueWaitForMessageRestricted           0x00001ec1   Thumb Code    68  queue.o(i.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00001f05   Thumb Code    44  tasks.o(i.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00001f35   Thumb Code    12  tasks.o(i.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00001f45   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00001f51   Thumb Code    32  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00001f75   Thumb Code    68  tasks.o(i.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x00001fbd   Thumb Code    70  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x00002015   Thumb Code    10  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002025   Thumb Code    78  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x0000207d   Thumb Code    40  port.o(i.xPortStartScheduler)
    xPortSysTickHandler                      0x000020ad   Thumb Code    32  port.o(i.xPortSysTickHandler)
    xQueueGenericCreate                      0x000020d1   Thumb Code    76  queue.o(i.xQueueGenericCreate)
    xQueueGenericReset                       0x0000211d   Thumb Code   134  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x000021a3   Thumb Code   280  queue.o(i.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x000022bb   Thumb Code   156  queue.o(i.xQueueGenericSendFromISR)
    xQueueReceive                            0x00002357   Thumb Code   258  queue.o(i.xQueueReceive)
    xTaskCheckForTimeOut                     0x00002459   Thumb Code    92  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x000024b9   Thumb Code    84  tasks.o(i.xTaskCreate)
    xTaskGetSchedulerState                   0x0000250d   Thumb Code    26  tasks.o(i.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x0000252d   Thumb Code     6  tasks.o(i.xTaskGetTickCount)
    xTaskIncrementTick                       0x00002539   Thumb Code   264  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002649   Thumb Code   126  tasks.o(i.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x000026d1   Thumb Code   190  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00002799   Thumb Code   246  tasks.o(i.xTaskResumeAll)
    xTimerCreate                             0x00002899   Thumb Code    88  timers.o(i.xTimerCreate)
    xTimerCreateTimerTask                    0x000028f1   Thumb Code    46  timers.o(i.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x00002931   Thumb Code    76  timers.o(i.xTimerGenericCommand)
    xTimerGetPeriod                          0x00002981   Thumb Code    12  timers.o(i.xTimerGetPeriod)
    Region$$Table$$Base                      0x000029a0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000029c0   Number         0  anon$$obj.o(Region$$Table)
    pxCurrentTCB                             0x20000020   Data           4  tasks.o(.data)
    uxTopUsedPriority                        0x20000050   Data           4  tasks.o(.data)
    rs485Task_Handler                        0x20000074   Data           4  freertos.o(.data)
    canTask_Handler                          0x20000078   Data           4  freertos.o(.data)
    sysLEDTimer_Handler                      0x2000007c   Data           4  freertos.o(.data)
    sysLEDTimerStart                         0x20000080   Data           4  freertos.o(.data)
    taskCreateStatus                         0x20000084   Data           4  freertos.o(.data)
    SystemCoreClock                          0x20000088   Data           4  hardware_init.o(.data)
    timetik                                  0x2000008c   Data           2  interrupt.o(.data)
    __stdout                                 0x20000090   Data           4  stdout.o(.data)
    hw_485_Manage                            0x20000094   Data          16  hw_485.o(.bss)
    CAN_Rx                                   0x200000a4   Data          55  hw_can.o(.bss)
    DUART_DMA_RX                             0x200000db   Data         128  hw_uart .o(.bss)
    _SEGGER_RTT                              0x20000e74   Data         168  SEGGER_RTT.o(.bss)
    __initial_sp                             0x200011b0   Data           0  startup_lks32mc08x.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00002a54, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x000029c0, Max: 0x00010000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x000000c0   Data   RO         2342    RESET               startup_lks32mc08x.o
    0x000000c0   0x00000000   Code   RO         2347  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x00000004   Code   RO         2625    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x00000004   Code   RO         2628    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x00000000   Code   RO         2630    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x00000000   Code   RO         2632    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x00000008   Code   RO         2633    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x00000004   Code   RO         2640    .ARM.Collect$$$$0000000E  mc_p.l(entry12b.o)
    0x000000d4   0x00000000   Code   RO         2635    .ARM.Collect$$$$0000000F  mc_p.l(entry10a.o)
    0x000000d4   0x00000000   Code   RO         2637    .ARM.Collect$$$$00000011  mc_p.l(entry11a.o)
    0x000000d4   0x00000004   Code   RO         2626    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d8   0x00000078   Code   RO          388    .emb_text           port.o
    0x00000150   0x00000028   Code   RO         2343    .text               startup_lks32mc08x.o
    0x00000178   0x0000002c   Code   RO         2350    .text               mc_p.l(uidiv.o)
    0x000001a4   0x0000004c   Code   RO         2354    .text               mc_p.l(ldiv.o)
    0x000001f0   0x00000024   Code   RO         2356    .text               mc_p.l(memcpya.o)
    0x00000214   0x00000024   Code   RO         2358    .text               mc_p.l(memseta.o)
    0x00000238   0x00000060   Code   RO         2642    .text               mc_p.l(uldiv.o)
    0x00000298   0x00000024   Code   RO         2655    .text               mc_p.l(init.o)
    0x000002bc   0x00000020   Code   RO         2657    .text               mc_p.l(llshl.o)
    0x000002dc   0x00000022   Code   RO         2659    .text               mc_p.l(llushr.o)
    0x000002fe   0x00000002   Code   RO         2167    i.ADC0_IRQHandler   interrupt.o
    0x00000300   0x00000008   Code   RO         2006    i.CANTaskFunc       freertos.o
    0x00000308   0x0000000c   Code   RO         1143    i.CAN_GetIRQFlag    lks32mc08x_can.o
    0x00000314   0x00000044   Code   RO         1144    i.CAN_Init          lks32mc08x_can.o
    0x00000358   0x00000016   Code   RO         1154    i.CAN_StructInit    lks32mc08x_can.o
    0x0000036e   0x00000002   Code   RO         2169    i.CMP_IRQHandler    interrupt.o
    0x00000370   0x00000030   Code   RO         2079    i.Clock_Init        hardware_init.o
    0x000003a0   0x00000014   Code   RO         1096    i.DMA_CHx_EN        lks32mc08x_DMA.o
    0x000003b4   0x00000002   Code   RO         2170    i.DMA_IRQHandler    interrupt.o
    0x000003b6   0x00000002   PAD
    0x000003b8   0x00000054   Code   RO         1099    i.DMA_Init          lks32mc08x_DMA.o
    0x0000040c   0x0000000a   Code   RO         1100    i.DMA_StructInit    lks32mc08x_DMA.o
    0x00000416   0x00000002   Code   RO         2171    i.ENCODER0_IRQHandler  interrupt.o
    0x00000418   0x00000002   Code   RO         2172    i.ENCODER1_IRQHandler  interrupt.o
    0x0000041a   0x00000002   Code   RO         2173    i.GPIO_IRQHandler   interrupt.o
    0x0000041c   0x0000007a   Code   RO         1297    i.GPIO_Init         lks32mc08x_gpio.o
    0x00000496   0x00000002   PAD
    0x00000498   0x000000d4   Code   RO         1299    i.GPIO_PinAFConfig  lks32mc08x_gpio.o
    0x0000056c   0x0000000e   Code   RO         1303    i.GPIO_ReadOutputDataBit  lks32mc08x_gpio.o
    0x0000057a   0x0000000a   Code   RO         1304    i.GPIO_ResetBits    lks32mc08x_gpio.o
    0x00000584   0x0000000a   Code   RO         1305    i.GPIO_SetBits      lks32mc08x_gpio.o
    0x0000058e   0x0000000c   Code   RO         1306    i.GPIO_StructInit   lks32mc08x_gpio.o
    0x0000059a   0x00000010   Code   RO         1309    i.GPIO_WriteBit     lks32mc08x_gpio.o
    0x000005aa   0x00000002   Code   RO         2174    i.HALL_IRQHandler   interrupt.o
    0x000005ac   0x00000068   Code   RO            3    i.HW_485_GPIO_Init  hw_485.o
    0x00000614   0x0000002c   Code   RO            4    i.HW_485_Init       hw_485.o
    0x00000640   0x00000024   Code   RO            5    i.HW_485_UART_Init  hw_485.o
    0x00000664   0x00000064   Code   RO          156    i.HW_CAN_DMA_RX     hw_can.o
    0x000006c8   0x00000060   Code   RO          158    i.HW_CAN_GPIO_Init  hw_can.o
    0x00000728   0x00000060   Code   RO          159    i.HW_CAN_Init       hw_can.o
    0x00000788   0x00000028   Code   RO         2080    i.HW_NVIC_Init      hardware_init.o
    0x000007b0   0x00000044   Code   RO         2081    i.HW_SysTick_Config  hardware_init.o
    0x000007f4   0x00000034   Code   RO            6    i.HW_TimeoutTimer_Init  hw_485.o
    0x00000828   0x00000050   Code   RO          200    i.HW_UART_DMA_Init  hw_uart .o
    0x00000878   0x00000044   Code   RO          201    i.HW_UART_GPIO_Init  hw_uart .o
    0x000008bc   0x0000002c   Code   RO          202    i.HW_UART_Init      hw_uart .o
    0x000008e8   0x0000001c   Code   RO         2175    i.HardFault_Handler  interrupt.o
    0x00000904   0x000000b8   Code   RO         2082    i.Hardware_Init     hardware_init.o
    0x000009bc   0x00000002   Code   RO         2176    i.I2C0_IRQHandler   interrupt.o
    0x000009be   0x00000022   Code   RO         2083    i.Invers_GPIO       hardware_init.o
    0x000009e0   0x000001c8   Code   RO         2007    i.LKS_FREERTOS_Init  freertos.o
    0x00000ba8   0x00000002   Code   RO         2177    i.MCPWM_IRQHandler  interrupt.o
    0x00000baa   0x00000002   Code   RO         2179    i.NMI_Handler       interrupt.o
    0x00000bac   0x00000034   Code   RO         2008    i.RS485TaskFunc     freertos.o
    0x00000be0   0x00000008   Code   RO         1714    i.SEGGER_RTT_Init   SEGGER_RTT.o
    0x00000be8   0x00000060   Code   RO         1715    i.SEGGER_RTT_PutChar  SEGGER_RTT.o
    0x00000c48   0x00000060   Code   RO         1159    i.SFF_ID_Filter     lks32mc08x_can.o
    0x00000ca8   0x00000002   Code   RO         2180    i.SPI0_IRQHandler   interrupt.o
    0x00000caa   0x00000002   Code   RO          389    i.SVC_Handler       port.o
    0x00000cac   0x00000024   Code   RO         1441    i.SYS_ModuleClockCmd  lks32mc08x_sys.o
    0x00000cd0   0x00000012   Code   RO         2084    i.SoftDelay         hardware_init.o
    0x00000ce2   0x00000002   PAD
    0x00000ce4   0x00000010   Code   RO         2009    i.SysLEDTimerCallback  freertos.o
    0x00000cf4   0x00000010   Code   RO         2182    i.SysTick_Handler   interrupt.o
    0x00000d04   0x00000008   Code   RO         2085    i.SystemInit        hardware_init.o
    0x00000d0c   0x00000080   Code   RO         1554    i.TIM_TimerCmd      lks32mc08x_tim.o
    0x00000d8c   0x00000100   Code   RO         1555    i.TIM_TimerInit     lks32mc08x_tim.o
    0x00000e8c   0x00000024   Code   RO         1556    i.TIM_TimerStrutInit  lks32mc08x_tim.o
    0x00000eb0   0x0000007c   Code   RO         2183    i.UART0_IRQHandler  interrupt.o
    0x00000f2c   0x00000002   Code   RO         2184    i.UART1_IRQHandler  interrupt.o
    0x00000f2e   0x00000002   PAD
    0x00000f30   0x000000c4   Code   RO         1646    i.UART_Init         lks32mc08x_uart.o
    0x00000ff4   0x0000001e   Code   RO         1651    i.UART_StructInit   lks32mc08x_uart.o
    0x00001012   0x00000002   PAD
    0x00001014   0x0000002c   Code   RO         2185    i.UTIMER0_IRQHandler  interrupt.o
    0x00001040   0x00000002   Code   RO         2186    i.UTIMER1_IRQHandler  interrupt.o
    0x00001042   0x00000002   Code   RO         2187    i.UTIMER2_IRQHandler  interrupt.o
    0x00001044   0x00000002   Code   RO         2188    i.UTIMER3_IRQHandler  interrupt.o
    0x00001046   0x00000002   PAD
    0x00001048   0x00000064   Code   RO         1736    i._DoInit           SEGGER_RTT.o
    0x000010ac   0x00000020   Code   RO         2571    i.__0printf$8       mc_p.l(printf8.o)
    0x000010cc   0x0000001a   Code   RO          938    i.__ARM_common_switch8  tasks.o
    0x000010e6   0x00000002   PAD
    0x000010e8   0x00000018   Code   RO         2086    i.__NVIC_EnableIRQ  hardware_init.o
    0x00001100   0x00000044   Code   RO         2087    i.__NVIC_SetPriority  hardware_init.o
    0x00001144   0x0000000e   Code   RO         2669    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00001152   0x00000002   Code   RO         2670    i.__scatterload_null  mc_p.l(handlers.o)
    0x00001154   0x0000000e   Code   RO         2671    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00001162   0x00000002   PAD
    0x00001164   0x00000428   Code   RO         2578    i._printf_core      mc_p.l(printf8.o)
    0x0000158c   0x00000020   Code   RO         2579    i._printf_post_padding  mc_p.l(printf8.o)
    0x000015ac   0x0000002c   Code   RO         2580    i._printf_pre_padding  mc_p.l(printf8.o)
    0x000015d8   0x00000010   Code   RO         2088    i.fputc             hardware_init.o
    0x000015e8   0x00000050   Code   RO         2322    i.main              main.o
    0x00001638   0x00000074   Code   RO          629    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x000016ac   0x000000d4   Code   RO          630    i.prvAddNewTaskToReadyList  tasks.o
    0x00001780   0x00000040   Code   RO          956    i.prvCheckForValidListAndQueue  timers.o
    0x000017c0   0x00000026   Code   RO          483    i.prvCopyDataFromQueue  queue.o
    0x000017e6   0x00000070   Code   RO          484    i.prvCopyDataToQueue  queue.o
    0x00001856   0x00000012   Code   RO          631    i.prvDeleteTCB      tasks.o
    0x00001868   0x00000040   Code   RO          316    i.prvHeapInit       heap_4.o
    0x000018a8   0x00000048   Code   RO          632    i.prvIdleTask       tasks.o
    0x000018f0   0x00000078   Code   RO          633    i.prvInitialiseNewTask  tasks.o
    0x00001968   0x0000004c   Code   RO          317    i.prvInsertBlockIntoFreeList  heap_4.o
    0x000019b4   0x00000038   Code   RO          957    i.prvInsertTimerInActiveList  timers.o
    0x000019ec   0x0000001c   Code   RO          485    i.prvIsQueueEmpty   queue.o
    0x00001a08   0x0000003c   Code   RO          958    i.prvProcessExpiredTimer  timers.o
    0x00001a44   0x000000e0   Code   RO          959    i.prvProcessReceivedCommands  timers.o
    0x00001b24   0x00000060   Code   RO          960    i.prvProcessTimerOrBlockTask  timers.o
    0x00001b84   0x00000028   Code   RO          961    i.prvReloadTimer    timers.o
    0x00001bac   0x00000020   Code   RO          634    i.prvResetNextTaskUnblockTime  tasks.o
    0x00001bcc   0x00000044   Code   RO          962    i.prvSampleTimeNow  timers.o
    0x00001c10   0x00000014   Code   RO          390    i.prvTaskExitError  port.o
    0x00001c24   0x00000024   Code   RO          963    i.prvTimerTask      timers.o
    0x00001c48   0x00000070   Code   RO          486    i.prvUnlockQueue    queue.o
    0x00001cb8   0x000000ac   Code   RO          319    i.pvPortMalloc      heap_4.o
    0x00001d64   0x00000020   Code   RO          391    i.pxPortInitialiseStack  port.o
    0x00001d84   0x00000026   Code   RO          238    i.uxListRemove      list.o
    0x00001daa   0x00000002   PAD
    0x00001dac   0x0000000c   Code   RO          639    i.uxTaskGetNumberOfTasks  tasks.o
    0x00001db8   0x00000016   Code   RO          239    i.vListInitialise   list.o
    0x00001dce   0x00000006   Code   RO          240    i.vListInitialiseItem  list.o
    0x00001dd4   0x00000030   Code   RO          241    i.vListInsert       list.o
    0x00001e04   0x00000018   Code   RO          393    i.vPortEnterCritical  port.o
    0x00001e1c   0x0000001c   Code   RO          394    i.vPortExitCritical  port.o
    0x00001e38   0x00000048   Code   RO          320    i.vPortFree         heap_4.o
    0x00001e80   0x00000028   Code   RO          395    i.vPortSetupTimerInterrupt  port.o
    0x00001ea8   0x00000018   Code   RO          396    i.vPortYield        port.o
    0x00001ec0   0x00000044   Code   RO          491    i.vQueueWaitForMessageRestricted  queue.o
    0x00001f04   0x00000030   Code   RO          643    i.vTaskDelay        tasks.o
    0x00001f34   0x00000010   Code   RO          647    i.vTaskInternalSetTimeOutState  tasks.o
    0x00001f44   0x0000000c   Code   RO          648    i.vTaskMissedYield  tasks.o
    0x00001f50   0x00000024   Code   RO          649    i.vTaskPlaceOnEventList  tasks.o
    0x00001f74   0x00000048   Code   RO          650    i.vTaskPlaceOnEventListRestricted  tasks.o
    0x00001fbc   0x00000058   Code   RO          657    i.vTaskStartScheduler  tasks.o
    0x00002014   0x00000010   Code   RO          659    i.vTaskSuspendAll   tasks.o
    0x00002024   0x00000058   Code   RO          660    i.vTaskSwitchContext  tasks.o
    0x0000207c   0x00000030   Code   RO          397    i.xPortStartScheduler  port.o
    0x000020ac   0x00000024   Code   RO          398    i.xPortSysTickHandler  port.o
    0x000020d0   0x0000004c   Code   RO          493    i.xQueueGenericCreate  queue.o
    0x0000211c   0x00000086   Code   RO          494    i.xQueueGenericReset  queue.o
    0x000021a2   0x00000118   Code   RO          495    i.xQueueGenericSend  queue.o
    0x000022ba   0x0000009c   Code   RO          496    i.xQueueGenericSendFromISR  queue.o
    0x00002356   0x00000102   Code   RO          502    i.xQueueReceive     queue.o
    0x00002458   0x00000060   Code   RO          662    i.xTaskCheckForTimeOut  tasks.o
    0x000024b8   0x00000054   Code   RO          663    i.xTaskCreate       tasks.o
    0x0000250c   0x00000020   Code   RO          670    i.xTaskGetSchedulerState  tasks.o
    0x0000252c   0x0000000c   Code   RO          671    i.xTaskGetTickCount  tasks.o
    0x00002538   0x00000110   Code   RO          673    i.xTaskIncrementTick  tasks.o
    0x00002648   0x00000088   Code   RO          674    i.xTaskPriorityDisinherit  tasks.o
    0x000026d0   0x000000c8   Code   RO          676    i.xTaskRemoveFromEventList  tasks.o
    0x00002798   0x00000100   Code   RO          677    i.xTaskResumeAll    tasks.o
    0x00002898   0x00000058   Code   RO          968    i.xTimerCreate      timers.o
    0x000028f0   0x00000040   Code   RO          969    i.xTimerCreateTimerTask  timers.o
    0x00002930   0x00000050   Code   RO          970    i.xTimerGenericCommand  timers.o
    0x00002980   0x0000000c   Code   RO          972    i.xTimerGetPeriod   timers.o
    0x0000298c   0x00000011   Data   RO         1742    .constdata          SEGGER_RTT.o
    0x0000299d   0x00000003   PAD
    0x000029a0   0x00000020   Data   RO         2667    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x000011b0, Max: 0x00002000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0000001c   Data   RW          326    .data               heap_4.o
    0x2000001c   0x00000004   Data   RW          399    .data               port.o
    0x20000020   0x00000040   Data   RW          680    .data               tasks.o
    0x20000060   0x00000014   Data   RW          977    .data               timers.o
    0x20000074   0x00000014   Data   RW         2010    .data               freertos.o
    0x20000088   0x00000004   Data   RW         2089    .data               hardware_init.o
    0x2000008c   0x00000002   Data   RW         2190    .data               interrupt.o
    0x2000008e   0x00000002   PAD
    0x20000090   0x00000004   Data   RW         2641    .data               mc_p.l(stdout.o)
    0x20000094   0x00000010   Zero   RW            7    .bss                hw_485.o
    0x200000a4   0x00000037   Zero   RW          160    .bss                hw_can.o
    0x200000db   0x00000080   Zero   RW          203    .bss                hw_uart .o
    0x2000015b   0x00000c00   Zero   RW          325    .bss                heap_4.o
    0x20000d5b   0x00000001   PAD
    0x20000d5c   0x000000f0   Zero   RW          679    .bss                tasks.o
    0x20000e4c   0x00000028   Zero   RW          976    .bss                timers.o
    0x20000e74   0x00000138   Zero   RW         1741    .bss                SEGGER_RTT.o
    0x20000fac   0x00000004   PAD
    0x20000fb0   0x00000200   Zero   RW         2340    STACK               startup_lks32mc08x.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       204         28         17          0        312       7813   SEGGER_RTT.o
       532        322          0         20          0       2306   freertos.o
       508        116          0          4          0      14705   hardware_init.o
       384         22          0         28       3072      10807   heap_4.o
       236         26          0          0         16      39505   hw_485.o
       292         24          0          0         55       2418   hw_can.o
       192         22          0          0        128       2169   hw_uart .o
       242         82          0          2          0       8291   interrupt.o
       114          0          0          0          0      10857   list.o
       114          6          0          0          0       3365   lks32mc08x_DMA.o
       198         16          0          0          0       2761   lks32mc08x_can.o
       396         28          0          0          0       5094   lks32mc08x_gpio.o
        36         10          0          0          0        581   lks32mc08x_sys.o
       420         12          0          0          0       2736   lks32mc08x_tim.o
       226         20          0          0          0       1798   lks32mc08x_uart.o
        80         48          0          0          0        443   main.o
       374         56          0          4          0       6931   port.o
      1262          0          0          0          0      13715   queue.o
        40         14        192          0        512        664   startup_lks32mc08x.o
      2072        148          0         64        240      28043   tasks.o
       888         70          0         20         40      15006   timers.o

    ----------------------------------------------------------------------
      8826       1070        244        144       4380     180008   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        16          0          3          2          5          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         4          0          0          0          0          0   entry12b.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        76          0          0          0          0         76   ldiv.o
        32          0          0          0          0         68   llshl.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
      1172         52          0          0          0        324   printf8.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         72   uidiv.o
        96          0          0          0          0         84   uldiv.o

    ----------------------------------------------------------------------
      1618         68          0          4          0        920   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1616         68          0          4          0        920   mc_p.l

    ----------------------------------------------------------------------
      1618         68          0          4          0        920   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     10444       1138        244        148       4380     175176   Grand Totals
     10444       1138        244        148       4380     175176   ELF Image Totals
     10444       1138        244        148          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                10688 (  10.44kB)
    Total RW  Size (RW Data + ZI Data)              4528 (   4.42kB)
    Total ROM Size (Code + RO Data + RW Data)      10836 (  10.58kB)

==============================================================================

