Component: ARM Compiler 5.06 update 7 (build 960) Tool: armlink [4d3601]

==============================================================================

Section Cross References

    hw_485.o(i.HW_485_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hw_485.o(i.HW_485_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hw_485.o(i.HW_485_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hw_485.o(i.HW_485_Init) refers to hw_485.o(i.HW_485_GPIO_Init) for HW_485_GPIO_Init
    hw_485.o(i.HW_485_Init) refers to hw_485.o(i.HW_485_UART_Init) for HW_485_UART_Init
    hw_485.o(i.HW_485_Init) refers to hw_485.o(i.HW_TimeoutTimer_Init) for HW_TimeoutTimer_Init
    hw_485.o(i.HW_485_Init) refers to lks32mc08x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    hw_485.o(i.HW_485_Init) refers to memseta.o(.text) for __aeabi_memclr4
    hw_485.o(i.HW_485_Init) refers to hw_485.o(i.HW_SM_StateTable_Init) for HW_SM_StateTable_Init
    hw_485.o(i.HW_485_Init) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.HW_485_Init) refers to hw_485.o(i.fsmActionIdle) for fsmActionIdle
    hw_485.o(i.HW_485_UART_Init) refers to lks32mc08x_uart.o(i.UART_StructInit) for UART_StructInit
    hw_485.o(i.HW_485_UART_Init) refers to lks32mc08x_uart.o(i.UART_Init) for UART_Init
    hw_485.o(i.HW_FsmRunningFunc) refers to hw_485.o(i.HW_GetCurState) for HW_GetCurState
    hw_485.o(i.HW_FsmRunningFunc) refers to hw_485.o(i.HW_GetCurEvent) for HW_GetCurEvent
    hw_485.o(i.HW_FsmRunningFunc) refers to hw_485.o(i.HW_SetCurState) for HW_SetCurState
    hw_485.o(i.HW_FsmRunningFunc) refers to hw_485.o(.data) for tmpState
    hw_485.o(i.HW_FsmRunningFunc) refers to hw_485.o(.bss) for hw_FsmNodeTable
    hw_485.o(i.HW_GetCurEvent) refers to hw_485.o(i.__ARM_common_switch8) for __ARM_common_switch8
    hw_485.o(i.HW_GetCurEvent) refers to common.o(i.CheckSum) for CheckSum
    hw_485.o(i.HW_GetCurEvent) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.HW_GetCurState) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(i.fsmActionIdle) for fsmActionIdle
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(.bss) for hw_FsmNodeTable
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(i.fsmActionHead) for fsmActionHead
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(i.fsmActionSrc) for fsmActionSrc
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(i.fsmActionDst) for fsmActionDst
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(i.fsmActionType) for fsmActionType
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(i.fsmActionLen) for fsmActionLen
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(i.fsmActionData1) for fsmActionData1
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(i.fsmActionData2) for fsmActionData2
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(i.fsmActionParity) for fsmActionParity
    hw_485.o(i.HW_SM_StateTable_Init) refers to hw_485.o(i.fsmActionError) for fsmActionError
    hw_485.o(i.HW_SetCurState) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.HW_TimeoutTimer_Init) refers to lks32mc08x_tim.o(i.TIM_TimerStrutInit) for TIM_TimerStrutInit
    hw_485.o(i.HW_TimeoutTimer_Init) refers to lks32mc08x_tim.o(i.TIM_TimerInit) for TIM_TimerInit
    hw_485.o(i.HW_TimeoutTimer_Init) refers to lks32mc08x_tim.o(i.TIM_TimerCmd) for TIM_TimerCmd
    hw_485.o(i.fsmActionData1) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.fsmActionData2) refers to printf8.o(i.__0printf$8) for __2printf
    hw_485.o(i.fsmActionData2) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.fsmActionDst) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.fsmActionError) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.fsmActionHead) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.fsmActionIdle) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.fsmActionLen) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.fsmActionParity) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.fsmActionSrc) refers to hw_485.o(.bss) for hw_485_Manage
    hw_485.o(i.fsmActionType) refers to hw_485.o(.bss) for hw_485_Manage
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_DMA.o(i.DMA_StructInit) for DMA_StructInit
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_DMA.o(i.DMA_Init) for DMA_Init
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_can.o(i.CAN_GetIRQFlag) for CAN_GetIRQFlag
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_DMA.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_can.o(i.HW_CAN_DMA_TX) refers to lks32mc08x_DMA.o(i.DMA_StructInit) for DMA_StructInit
    hw_can.o(i.HW_CAN_DMA_TX) refers to lks32mc08x_DMA.o(i.DMA_Init) for DMA_Init
    hw_can.o(i.HW_CAN_DMA_TX) refers to lks32mc08x_DMA.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_can.o(i.HW_CAN_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hw_can.o(i.HW_CAN_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hw_can.o(i.HW_CAN_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hw_can.o(i.HW_CAN_Init) refers to lks32mc08x_can.o(i.CAN_StructInit) for CAN_StructInit
    hw_can.o(i.HW_CAN_Init) refers to lks32mc08x_can.o(i.CAN_Init) for CAN_Init
    hw_can.o(i.HW_CAN_Init) refers to lks32mc08x_can.o(i.SFF_ID_Filter) for SFF_ID_Filter
    hw_can.o(i.HW_CAN_Init) refers to hw_can.o(i.HW_CAN_GPIO_Init) for HW_CAN_GPIO_Init
    hw_can.o(i.HW_CAN_Init) refers to hw_can.o(i.HW_CAN_DMA_RX) for HW_CAN_DMA_RX
    hw_can.o(i.HW_CAN_Init) refers to hw_can.o(.bss) for CAN_Rx
    hw_uart .o(i.HW_UART_DMA_Init) refers to lks32mc08x_DMA.o(i.DMA_StructInit) for DMA_StructInit
    hw_uart .o(i.HW_UART_DMA_Init) refers to lks32mc08x_DMA.o(i.DMA_Init) for DMA_Init
    hw_uart .o(i.HW_UART_DMA_Init) refers to lks32mc08x_DMA.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_uart .o(i.HW_UART_DMA_Init) refers to hw_uart .o(.bss) for DUART_DMA_RX
    hw_uart .o(i.HW_UART_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hw_uart .o(i.HW_UART_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hw_uart .o(i.HW_UART_Init) refers to hw_uart .o(i.HW_UART_GPIO_Init) for HW_UART_GPIO_Init
    hw_uart .o(i.HW_UART_Init) refers to lks32mc08x_uart.o(i.UART_StructInit) for UART_StructInit
    hw_uart .o(i.HW_UART_Init) refers to lks32mc08x_uart.o(i.UART_Init) for UART_Init
    hw_uart .o(i.HW_UART_Init) refers to hw_uart .o(i.HW_UART_DMA_Init) for HW_UART_DMA_Init
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.bss) for ucHeap
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.data) for xStart
    heap_4.o(i.prvInsertBlockIntoFreeList) refers to heap_4.o(.data) for xStart
    heap_4.o(i.pvPortCalloc) refers to uidiv.o(.text) for __aeabi_uidivmod
    heap_4.o(i.pvPortCalloc) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    heap_4.o(i.pvPortCalloc) refers to memseta.o(.text) for __aeabi_memclr
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvHeapInit) for prvHeapInit
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(.data) for pxEnd
    heap_4.o(i.vPortFree) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortFree) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.vPortFree) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortFree) refers to heap_4.o(.data) for xFreeBytesRemaining
    heap_4.o(i.vPortGetHeapStats) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortGetHeapStats) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortGetHeapStats) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(i.vPortGetHeapStats) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    heap_4.o(i.vPortGetHeapStats) refers to heap_4.o(.data) for xStart
    heap_4.o(i.xPortGetFreeHeapSize) refers to heap_4.o(.data) for xFreeBytesRemaining
    heap_4.o(i.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.data) for xMinimumEverFreeBytesRemaining
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(i.prvTaskExitError) refers to port.o(.data) for uxCriticalNesting
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEndScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortSetupTimerInterrupt) refers to uidiv.o(.text) for __aeabi_uidivmod
    port.o(i.vPortSetupTimerInterrupt) refers to hardware_init.o(.data) for SystemCoreClock
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvPortStartFirstTask
    port.o(i.xPortStartScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.xPortSysTickHandler) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    port.o(i.xPortSysTickHandler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    queue.o(i.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_4.o(i.vPortFree) for vPortFree
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to tasks.o(i.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(i.vQueueWaitForMessageRestricted) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(i.xQueueGenericCreate) refers to uidiv.o(.text) for __aeabi_uidivmod
    queue.o(i.xQueueGenericCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReset) refers to uidiv.o(.text) for __aeabi_uidivmod
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(i.xQueueGiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeekFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskGenericNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskGenericNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to timers.o(i.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskCatchUpTicks) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCatchUpTicks) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to memseta.o(.text) for __aeabi_memclr4
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskDelayUntil) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to hw_485.o(i.__ARM_common_switch8) for __ARM_common_switch8
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.xTaskGenericNotifyFromISR) refers to hw_485.o(i.__ARM_common_switch8) for __ARM_common_switch8
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetSchedulerState) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to list.o(i.vListInitialise) for vListInitialise
    timers.o(i.prvCheckForValidListAndQueue) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.bss) for xActiveTimerList1
    timers.o(i.prvGetNextExpireTime) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvInitialiseNewTimer) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.prvInitialiseNewTimer) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    timers.o(i.prvInsertTimerInActiveList) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvInsertTimerInActiveList) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvProcessExpiredTimer) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.prvReloadTimer) for prvReloadTimer
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvProcessReceivedCommands) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessReceivedCommands) refers to hw_485.o(i.__ARM_common_switch8) for __ARM_common_switch8
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvReloadTimer) for prvReloadTimer
    timers.o(i.prvProcessReceivedCommands) refers to heap_4.o(i.vPortFree) for vPortFree
    timers.o(i.prvProcessReceivedCommands) refers to queue.o(i.xQueueReceive) for xQueueReceive
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(i.prvProcessTimerOrBlockTask) refers to queue.o(i.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(i.prvProcessTimerOrBlockTask) refers to port.o(i.vPortYield) for vPortYield
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvReloadTimer) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvSampleTimeNow) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(i.prvSampleTimeNow) refers to timers.o(i.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(i.prvSampleTimeNow) refers to timers.o(.data) for xLastTime
    timers.o(i.prvSwitchTimerLists) refers to timers.o(i.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(i.prvSwitchTimerLists) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvTimerTask) refers to timers.o(i.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.uxTimerGetReloadMode) refers to timers.o(i.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(i.vTimerSetReloadMode) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetReloadMode) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    timers.o(i.xTimerCreate) refers to timers.o(i.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.xTimerCreateTimerTask) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvTimerTask) for prvTimerTask
    timers.o(i.xTimerGenericCommand) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(i.xTimerGenericCommand) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerGetReloadMode) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.xTimerGetReloadMode) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.data) for xTimerTaskHandle
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    lks32mc08x_DMA.o(i.DMA_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    lks32mc08x_can.o(i.CAN_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_can.o(i.CAN_Sleep) refers to uidiv.o(.text) for __aeabi_uidivmod
    lks32mc08x_gpio.o(i.GPIO_PinAFConfig) refers to hw_485.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lks32mc08x_gpio.o(i.GPIO_ResetBits) refers to lks32mc08x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    lks32mc08x_gpio.o(i.GPIO_SetBits) refers to lks32mc08x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    lks32mc08x_sys.o(i.DSP_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_sys.o(i.Switch2HRC) refers to lks32mc08x_sys.o(.bss) for WAKE_InitStruct
    lks32mc08x_sys.o(i.Switch2PLL) refers to lks32mc08x_sys.o(i.SoftDelay) for SoftDelay
    lks32mc08x_sys.o(i.Switch2PLL) refers to lks32mc08x_sys.o(.bss) for WAKE_InitStruct
    lks32mc08x_tim.o(i.TIM_ECDInit) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(i.TIM_TimerInit) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_uart.o(i.UART_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_uart.o(i.UART_Init) refers to ldiv.o(.text) for __aeabi_ldivmod
    SEGGER_RTT.o(i.SEGGER_RTT_AllocDownBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_AllocDownBuffer) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_AllocUpBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_AllocUpBuffer) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_ConfigDownBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_ConfigDownBuffer) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_ConfigUpBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_ConfigUpBuffer) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_GetAvailWriteSpace) refers to SEGGER_RTT.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    SEGGER_RTT.o(i.SEGGER_RTT_GetAvailWriteSpace) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_GetBytesInBuffer) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_GetKey) refers to SEGGER_RTT.o(i.SEGGER_RTT_Read) for SEGGER_RTT_Read
    SEGGER_RTT.o(i.SEGGER_RTT_HasData) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_HasDataUp) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_HasKey) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_HasKey) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_Init) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_PutChar) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_PutChar) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_PutCharSkip) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_PutCharSkip) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_PutCharSkipNoLock) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_Read) refers to SEGGER_RTT.o(i.SEGGER_RTT_ReadNoLock) for SEGGER_RTT_ReadNoLock
    SEGGER_RTT.o(i.SEGGER_RTT_ReadNoLock) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_ReadNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT.o(i.SEGGER_RTT_ReadNoLock) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBuffer) refers to SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBufferNoLock) for SEGGER_RTT_ReadUpBufferNoLock
    SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBufferNoLock) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBufferNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBufferNoLock) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsDownBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsDownBuffer) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsUpBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsUpBuffer) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_SetNameDownBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_SetNameDownBuffer) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_SetNameUpBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_SetNameUpBuffer) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(i._WriteBlocking) for _WriteBlocking
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(i._WriteNoCheck) for _WriteNoCheck
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal) refers to SEGGER_RTT.o(.data) for _aTerminalId
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to strlen.o(.text) for strlen
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(i._PostTerminalSwitch) for _PostTerminalSwitch
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(i._WriteBlocking) for _WriteBlocking
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut) refers to SEGGER_RTT.o(.data) for _ActiveTerminal
    SEGGER_RTT.o(i.SEGGER_RTT_WaitKey) refers to SEGGER_RTT.o(i.SEGGER_RTT_GetKey) for SEGGER_RTT_GetKey
    SEGGER_RTT.o(i.SEGGER_RTT_Write) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_Write) refers to SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock) for SEGGER_RTT_WriteNoLock
    SEGGER_RTT.o(i.SEGGER_RTT_Write) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBuffer) refers to SEGGER_RTT.o(i._DoInit) for _DoInit
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBuffer) refers to SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock) for SEGGER_RTT_WriteDownBufferNoLock
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBuffer) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to SEGGER_RTT.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to SEGGER_RTT.o(i._WriteNoCheck) for _WriteNoCheck
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to SEGGER_RTT.o(i._WriteBlocking) for _WriteBlocking
    SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock) refers to SEGGER_RTT.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock) refers to SEGGER_RTT.o(i._WriteNoCheck) for _WriteNoCheck
    SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock) refers to SEGGER_RTT.o(i._WriteBlocking) for _WriteBlocking
    SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_WriteSkipNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT.o(i.SEGGER_RTT_WriteSkipNoLock) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i.SEGGER_RTT_WriteString) refers to strlen.o(.text) for strlen
    SEGGER_RTT.o(i.SEGGER_RTT_WriteString) refers to SEGGER_RTT.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    SEGGER_RTT.o(i.SEGGER_RTT_WriteWithOverwriteNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT.o(i.SEGGER_RTT_WriteWithOverwriteNoLock) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i._DoInit) refers to memseta.o(.text) for __aeabi_memclr4
    SEGGER_RTT.o(i._DoInit) refers to SEGGER_RTT.o(.bss) for _SEGGER_RTT
    SEGGER_RTT.o(i._DoInit) refers to SEGGER_RTT.o(.constdata) for _aInitStr
    SEGGER_RTT.o(i._PostTerminalSwitch) refers to SEGGER_RTT.o(i._WriteBlocking) for _WriteBlocking
    SEGGER_RTT.o(i._PostTerminalSwitch) refers to SEGGER_RTT.o(.data) for _aTerminalId
    SEGGER_RTT.o(i._WriteBlocking) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT.o(i._WriteNoCheck) refers to memcpya.o(.text) for __aeabi_memcpy
    SEGGER_RTT_printf.o(i.SEGGER_RTT_printf) refers to SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf) for SEGGER_RTT_vprintf
    SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf) refers to SEGGER_RTT_printf.o(i._StoreChar) for _StoreChar
    SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf) refers to SEGGER_RTT_printf.o(i._PrintInt) for _PrintInt
    SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf) refers to SEGGER_RTT_printf.o(i._PrintUnsigned) for _PrintUnsigned
    SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf) refers to SEGGER_RTT.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    SEGGER_RTT_printf.o(i._PrintInt) refers to idiv.o(.text) for __aeabi_idivmod
    SEGGER_RTT_printf.o(i._PrintInt) refers to SEGGER_RTT_printf.o(i._StoreChar) for _StoreChar
    SEGGER_RTT_printf.o(i._PrintInt) refers to SEGGER_RTT_printf.o(i._PrintUnsigned) for _PrintUnsigned
    SEGGER_RTT_printf.o(i._PrintUnsigned) refers to uidiv.o(.text) for __aeabi_uidivmod
    SEGGER_RTT_printf.o(i._PrintUnsigned) refers to SEGGER_RTT_printf.o(i._StoreChar) for _StoreChar
    SEGGER_RTT_printf.o(i._PrintUnsigned) refers to SEGGER_RTT_printf.o(.constdata) for _aV2C
    SEGGER_RTT_printf.o(i._StoreChar) refers to SEGGER_RTT.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    freertos.o(i.CANTaskFunc) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    freertos.o(i.LKS_FREERTOS_Init) refers to timers.o(i.xTimerCreate) for xTimerCreate
    freertos.o(i.LKS_FREERTOS_Init) refers to printf8.o(i.__0printf$8) for __2printf
    freertos.o(i.LKS_FREERTOS_Init) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    freertos.o(i.LKS_FREERTOS_Init) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    freertos.o(i.LKS_FREERTOS_Init) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    freertos.o(i.LKS_FREERTOS_Init) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    freertos.o(i.LKS_FREERTOS_Init) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(i.SysLEDTimerCallback) for SysLEDTimerCallback
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(.data) for sysLEDTimer_Handler
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(i.RS485TaskFunc) for RS485TaskFunc
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(i.CANTaskFunc) for CANTaskFunc
    freertos.o(i.RS485TaskFunc) refers to timers.o(i.xTimerGetPeriod) for xTimerGetPeriod
    freertos.o(i.RS485TaskFunc) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    freertos.o(i.RS485TaskFunc) refers to freertos.o(.data) for sysLEDTimer_Handler
    freertos.o(i.SysLEDTimerCallback) refers to hardware_init.o(i.Invers_GPIO) for Invers_GPIO
    hardware_init.o(i.Clock_Init) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    hardware_init.o(i.HW_NVIC_Init) refers to hardware_init.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    hardware_init.o(i.HW_NVIC_Init) refers to hardware_init.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    hardware_init.o(i.HW_SysLed_Init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hardware_init.o(i.HW_SysLed_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hardware_init.o(i.HW_SysTick_Config) refers to hardware_init.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.HW_SysLed_Init) for HW_SysLed_Init
    hardware_init.o(i.Hardware_Init) refers to hw_uart .o(i.HW_UART_Init) for HW_UART_Init
    hardware_init.o(i.Hardware_Init) refers to hw_can.o(i.HW_CAN_Init) for HW_CAN_Init
    hardware_init.o(i.Hardware_Init) refers to hw_485.o(i.HW_485_Init) for HW_485_Init
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.HW_NVIC_Init) for HW_NVIC_Init
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.HW_SysTick_Config) for HW_SysTick_Config
    hardware_init.o(i.Hardware_Init) refers to printf8.o(i.__0printf$8) for __2printf
    hardware_init.o(i.Invers_GPIO) refers to lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit) for GPIO_ReadOutputDataBit
    hardware_init.o(i.Invers_GPIO) refers to lks32mc08x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    hardware_init.o(i.Invers_GPIO) refers to lks32mc08x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    hardware_init.o(i.SystemInit) refers to hardware_init.o(i.Clock_Init) for Clock_Init
    hardware_init.o(i.fputc) refers to SEGGER_RTT.o(i.SEGGER_RTT_PutChar) for SEGGER_RTT_PutChar
    interrupt.o(i.BusFault_Handler) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    interrupt.o(i.BusFault_Handler) refers to hardware_init.o(i.Invers_GPIO) for Invers_GPIO
    interrupt.o(i.HardFault_Handler) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    interrupt.o(i.HardFault_Handler) refers to hardware_init.o(i.Invers_GPIO) for Invers_GPIO
    interrupt.o(i.SysTick_Handler) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    interrupt.o(i.SysTick_Handler) refers to port.o(i.xPortSysTickHandler) for xPortSysTickHandler
    interrupt.o(i.UART0_IRQHandler) refers to printf8.o(i.__0printf$8) for __2printf
    interrupt.o(i.UART0_IRQHandler) refers to hw_485.o(i.HW_FsmRunningFunc) for HW_FsmRunningFunc
    interrupt.o(i.UTIMER0_IRQHandler) refers to interrupt.o(.data) for timetik
    interrupt.o(i.UsageFault_Handler) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    interrupt.o(i.UsageFault_Handler) refers to hardware_init.o(i.Invers_GPIO) for Invers_GPIO
    main.o(i.main) refers to SEGGER_RTT.o(i.SEGGER_RTT_Init) for SEGGER_RTT_Init
    main.o(i.main) refers to hardware_init.o(i.Hardware_Init) for Hardware_Init
    main.o(i.main) refers to freertos.o(i.LKS_FREERTOS_Init) for LKS_FREERTOS_Init
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to printf8.o(i.__0printf$8) for __2printf
    main.o(i.main) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(.text) for Reset_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.NMI_Handler) for NMI_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.HardFault_Handler) for HardFault_Handler
    startup_lks32mc08x.o(RESET) refers to port.o(i.SVC_Handler) for SVC_Handler
    startup_lks32mc08x.o(RESET) refers to port.o(.emb_text) for PendSV_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.SysTick_Handler) for SysTick_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER0_IRQHandler) for UTIMER0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER1_IRQHandler) for UTIMER1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER2_IRQHandler) for UTIMER2_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER3_IRQHandler) for UTIMER3_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ENCODER0_IRQHandler) for ENCODER0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ENCODER1_IRQHandler) for ENCODER1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.I2C0_IRQHandler) for I2C0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.GPIO_IRQHandler) for GPIO_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.HALL_IRQHandler) for HALL_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.SPI0_IRQHandler) for SPI0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.MCPWM_IRQHandler) for MCPWM_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.CMP_IRQHandler) for CMP_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.DMA_IRQHandler) for DMA_IRQHandler
    startup_lks32mc08x.o(.text) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(.text) refers to hardware_init.o(i.SystemInit) for SystemInit
    startup_lks32mc08x.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000F) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$00000011) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry12b.o(.ARM.Collect$$$$0000000E) for __rt_lib_shutdown_fini
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    ldiv.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing hw_485.o(.rev16_text), (4 bytes).
    Removing hw_485.o(.revsh_text), (4 bytes).
    Removing hw_can.o(.rev16_text), (4 bytes).
    Removing hw_can.o(.revsh_text), (4 bytes).
    Removing hw_can.o(i.HW_CAN_DMA_TX), (108 bytes).
    Removing hw_uart .o(.rev16_text), (4 bytes).
    Removing hw_uart .o(.revsh_text), (4 bytes).
    Removing list.o(.rev16_text), (4 bytes).
    Removing list.o(.revsh_text), (4 bytes).
    Removing list.o(i.vListInsertEnd), (24 bytes).
    Removing heap_4.o(.rev16_text), (4 bytes).
    Removing heap_4.o(.revsh_text), (4 bytes).
    Removing heap_4.o(i.pvPortCalloc), (66 bytes).
    Removing heap_4.o(i.vPortGetHeapStats), (128 bytes).
    Removing heap_4.o(i.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(i.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(i.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing port.o(.rev16_text), (4 bytes).
    Removing port.o(.revsh_text), (4 bytes).
    Removing port.o(i.vPortEndScheduler), (36 bytes).
    Removing queue.o(.rev16_text), (4 bytes).
    Removing queue.o(.revsh_text), (4 bytes).
    Removing queue.o(i.prvGetDisinheritPriorityAfterTimeout), (22 bytes).
    Removing queue.o(i.prvInitialiseMutex), (32 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (28 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (18 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(i.vQueueDelete), (24 bytes).
    Removing queue.o(i.xQueueCreateMutex), (30 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (206 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (28 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (32 bytes).
    Removing queue.o(i.xQueuePeek), (316 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (108 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (190 bytes).
    Removing queue.o(i.xQueueSemaphoreTake), (360 bytes).
    Removing tasks.o(.rev16_text), (4 bytes).
    Removing tasks.o(.revsh_text), (4 bytes).
    Removing tasks.o(i.pcTaskGetName), (36 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (84 bytes).
    Removing tasks.o(i.pvTaskIncrementMutexHeldCount), (32 bytes).
    Removing tasks.o(i.ulTaskGenericNotifyTake), (144 bytes).
    Removing tasks.o(i.ulTaskGenericNotifyValueClear), (68 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (36 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (40 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelete), (188 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (20 bytes).
    Removing tasks.o(i.vTaskGenericNotifyGiveFromISR), (320 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (120 bytes).
    Removing tasks.o(i.vTaskPriorityDisinheritAfterTimeout), (224 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (272 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (236 bytes).
    Removing tasks.o(i.vTaskResume), (160 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (44 bytes).
    Removing tasks.o(i.vTaskSuspend), (196 bytes).
    Removing tasks.o(i.xTaskCatchUpTicks), (68 bytes).
    Removing tasks.o(i.xTaskDelayUntil), (156 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (384 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (448 bytes).
    Removing tasks.o(i.xTaskGenericNotifyStateClear), (80 bytes).
    Removing tasks.o(i.xTaskGenericNotifyWait), (172 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(i.xTaskPriorityInherit), (208 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (192 bytes).
    Removing timers.o(.rev16_text), (4 bytes).
    Removing timers.o(.revsh_text), (4 bytes).
    Removing timers.o(i.pcTimerGetName), (18 bytes).
    Removing timers.o(i.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(i.uxTimerGetReloadMode), (12 bytes).
    Removing timers.o(i.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(i.vTimerSetTimerID), (30 bytes).
    Removing timers.o(i.xTimerGetExpiryTime), (18 bytes).
    Removing timers.o(i.xTimerGetReloadMode), (46 bytes).
    Removing timers.o(i.xTimerGetTimerDaemonTaskHandle), (36 bytes).
    Removing timers.o(i.xTimerIsTimerActive), (46 bytes).
    Removing lks32mc08x_DMA.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_DMA.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_DMA.o(i.DMA_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_DMA.o(i.DMA_GetIRQFlag), (72 bytes).
    Removing lks32mc08x_can.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_can.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_can.o(i.CAN_Manual_Awake), (32 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadALC), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadErrorCode), (44 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadRXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadState), (10 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadTXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReceFramInfor), (20 bytes).
    Removing lks32mc08x_can.o(i.CAN_Receive_Msg), (308 bytes).
    Removing lks32mc08x_can.o(i.CAN_Sleep), (92 bytes).
    Removing lks32mc08x_can.o(i.EFF_ID_Filter), (124 bytes).
    Removing lks32mc08x_can.o(i.ID1_Filter_Dual), (208 bytes).
    Removing lks32mc08x_can.o(i.ID2_Filter_Dual), (176 bytes).
    Removing lks32mc08x_can.o(i.My_CAN_Send_Msg), (260 bytes).
    Removing lks32mc08x_exti.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_exti.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_ClearIRQFlag), (24 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_GetIRQFlag), (52 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_Trigger_Config), (80 bytes).
    Removing lks32mc08x_gpio.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_gpio.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_LockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadInputData), (6 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadInputDataBit), (20 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadOutputData), (6 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_UnlockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_Write), (8 bytes).
    Removing lks32mc08x_iwdg.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_iwdg.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_DISABLE), (20 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_ENABLE), (20 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_Feed), (40 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_Init), (80 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_StrutInit), (10 bytes).
    Removing lks32mc08x_sys.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_sys.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_sys.o(i.DSP_Init), (12 bytes).
    Removing lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd), (52 bytes).
    Removing lks32mc08x_sys.o(i.SYS_ClearRst), (28 bytes).
    Removing lks32mc08x_sys.o(i.SYS_EnablePORFilter), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_FallSleep), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_FeedDog), (76 bytes).
    Removing lks32mc08x_sys.o(i.SYS_GetRstSource), (12 bytes).
    Removing lks32mc08x_sys.o(i.SYS_Init), (120 bytes).
    Removing lks32mc08x_sys.o(i.SYS_SetWakeInterval), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_SoftResetModule), (28 bytes).
    Removing lks32mc08x_sys.o(i.SYS_StructInit), (26 bytes).
    Removing lks32mc08x_sys.o(i.SYS_WatchDogCmd), (52 bytes).
    Removing lks32mc08x_sys.o(i.SetWakeIO), (60 bytes).
    Removing lks32mc08x_sys.o(i.SoftDelay), (24 bytes).
    Removing lks32mc08x_sys.o(i.Switch2HRC), (76 bytes).
    Removing lks32mc08x_sys.o(i.Switch2PLL), (60 bytes).
    Removing lks32mc08x_sys.o(.bss), (12 bytes).
    Removing lks32mc08x_tim.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_tim.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_tim.o(i.ECD_ClearIRQFlag), (36 bytes).
    Removing lks32mc08x_tim.o(i.ECD_GetIRQFlag), (84 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ClearIRQFlag), (68 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDCmd), (84 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDInit), (224 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDStructInit), (24 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECD_GetCount), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_GetIRQFlag), (156 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCMPT0), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCMPT1), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCount), (6 bytes).
    Removing lks32mc08x_uart.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_uart.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_ClearIRQFlag), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_GetIRQFlag), (22 bytes).
    Removing lks32mc08x_uart.o(i.UART_ReadData), (6 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendAddr_485), (52 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendData), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendData_485), (52 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_AllocDownBuffer), (172 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_AllocUpBuffer), (172 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_ConfigDownBuffer), (116 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_ConfigUpBuffer), (116 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_GetAvailWriteSpace), (24 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_GetBytesInBuffer), (56 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_GetKey), (32 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_HasData), (24 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_HasDataUp), (24 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_HasKey), (44 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_PutCharSkip), (112 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_PutCharSkipNoLock), (56 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_Read), (50 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_ReadNoLock), (184 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBuffer), (50 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_ReadUpBufferNoLock), (184 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsDownBuffer), (88 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_SetFlagsUpBuffer), (88 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_SetNameDownBuffer), (88 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_SetNameUpBuffer), (88 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_SetTerminal), (156 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_TerminalOut), (260 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WaitKey), (14 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_Write), (72 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBuffer), (72 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteDownBufferNoLock), (132 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteNoLock), (132 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteSkipNoLock), (152 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteString), (26 bytes).
    Removing SEGGER_RTT.o(i.SEGGER_RTT_WriteWithOverwriteNoLock), (180 bytes).
    Removing SEGGER_RTT.o(i._GetAvailWriteSpace), (28 bytes).
    Removing SEGGER_RTT.o(i._PostTerminalSwitch), (36 bytes).
    Removing SEGGER_RTT.o(i._WriteBlocking), (126 bytes).
    Removing SEGGER_RTT.o(i._WriteNoCheck), (86 bytes).
    Removing SEGGER_RTT.o(.data), (17 bytes).
    Removing SEGGER_RTT_printf.o(i.SEGGER_RTT_printf), (36 bytes).
    Removing SEGGER_RTT_printf.o(i.SEGGER_RTT_vprintf), (536 bytes).
    Removing SEGGER_RTT_printf.o(i._PrintInt), (270 bytes).
    Removing SEGGER_RTT_printf.o(i._PrintUnsigned), (284 bytes).
    Removing SEGGER_RTT_printf.o(i._StoreChar), (68 bytes).
    Removing SEGGER_RTT_printf.o(.constdata), (16 bytes).
    Removing common.o(.rev16_text), (4 bytes).
    Removing common.o(.revsh_text), (4 bytes).
    Removing common.o(i.CheckCrc8), (96 bytes).
    Removing freertos.o(.rev16_text), (4 bytes).
    Removing freertos.o(.revsh_text), (4 bytes).
    Removing hardware_init.o(.rev16_text), (4 bytes).
    Removing hardware_init.o(.revsh_text), (4 bytes).
    Removing interrupt.o(.rev16_text), (4 bytes).
    Removing interrupt.o(.revsh_text), (4 bytes).
    Removing interrupt.o(i.BusFault_Handler), (28 bytes).
    Removing interrupt.o(i.MemManage_Handler), (4 bytes).
    Removing interrupt.o(i.SleepTimer_IRQHandler), (2 bytes).
    Removing interrupt.o(i.UsageFault_Handler), (28 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing startup_lks32mc08x.o(HEAP), (2048 bytes).
    Removing dadd.o(.text), (360 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

220 unused section(s) (total 17485 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_lks32mc08x.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  ldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    .\Driver\Src\hw_485.c                    0x00000000   Number         0  hw_485.o ABSOLUTE
    .\Driver\Src\hw_can.c                    0x00000000   Number         0  hw_can.o ABSOLUTE
    .\Driver\Src\hw_uart .c                  0x00000000   Number         0  hw_uart .o ABSOLUTE
    .\FreeRTOS-Kernel\list.c                 0x00000000   Number         0  list.o ABSOLUTE
    .\FreeRTOS-Kernel\portable\MemMang\heap_4.c 0x00000000   Number         0  heap_4.o ABSOLUTE
    .\FreeRTOS-Kernel\portable\RVDS\ARM_CM0\port.c 0x00000000   Number         0  port.o ABSOLUTE
    .\FreeRTOS-Kernel\queue.c                0x00000000   Number         0  queue.o ABSOLUTE
    .\FreeRTOS-Kernel\tasks.c                0x00000000   Number         0  tasks.o ABSOLUTE
    .\FreeRTOS-Kernel\timers.c               0x00000000   Number         0  timers.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_DMA.c 0x00000000   Number         0  lks32mc08x_DMA.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_can.c 0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_exti.c 0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_gpio.c 0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_iwdg.c 0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_sys.c 0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_tim.c 0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\lks32mc08x_uart.c 0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    .\LKS32MC08x_Periph_Driver\Source\startup_lks32mc08x.s 0x00000000   Number         0  startup_lks32mc08x.o ABSOLUTE
    .\SEGGER_RTT_V764b\RTT\SEGGER_RTT.c      0x00000000   Number         0  SEGGER_RTT.o ABSOLUTE
    .\SEGGER_RTT_V764b\RTT\SEGGER_RTT_printf.c 0x00000000   Number         0  SEGGER_RTT_printf.o ABSOLUTE
    .\System\Src\common.c                    0x00000000   Number         0  common.o ABSOLUTE
    .\System\Src\freertos.c                  0x00000000   Number         0  freertos.o ABSOLUTE
    .\System\Src\hardware_init.c             0x00000000   Number         0  hardware_init.o ABSOLUTE
    .\System\Src\interrupt.c                 0x00000000   Number         0  interrupt.o ABSOLUTE
    .\System\Src\main.c                      0x00000000   Number         0  main.o ABSOLUTE
    .\\Driver\\Src\\hw_485.c                 0x00000000   Number         0  hw_485.o ABSOLUTE
    .\\Driver\\Src\\hw_can.c                 0x00000000   Number         0  hw_can.o ABSOLUTE
    .\\Driver\\Src\\hw_uart .c               0x00000000   Number         0  hw_uart .o ABSOLUTE
    .\\FreeRTOS-Kernel\\list.c               0x00000000   Number         0  list.o ABSOLUTE
    .\\FreeRTOS-Kernel\\portable\\MemMang\\heap_4.c 0x00000000   Number         0  heap_4.o ABSOLUTE
    .\\FreeRTOS-Kernel\\portable\\RVDS\\ARM_CM0\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    .\\FreeRTOS-Kernel\\queue.c              0x00000000   Number         0  queue.o ABSOLUTE
    .\\FreeRTOS-Kernel\\tasks.c              0x00000000   Number         0  tasks.o ABSOLUTE
    .\\FreeRTOS-Kernel\\timers.c             0x00000000   Number         0  timers.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_DMA.c 0x00000000   Number         0  lks32mc08x_DMA.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_can.c 0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_exti.c 0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_gpio.c 0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_iwdg.c 0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_sys.c 0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_tim.c 0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    .\\LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_uart.c 0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    .\\System\\Src\\common.c                 0x00000000   Number         0  common.o ABSOLUTE
    .\\System\\Src\\freertos.c               0x00000000   Number         0  freertos.o ABSOLUTE
    .\\System\\Src\\hardware_init.c          0x00000000   Number         0  hardware_init.o ABSOLUTE
    .\\System\\Src\\interrupt.c              0x00000000   Number         0  interrupt.o ABSOLUTE
    .\\System\\Src\\main.c                   0x00000000   Number         0  main.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000E                 0x000000d0   Section        4  entry12b.o(.ARM.Collect$$$$0000000E)
    .ARM.Collect$$$$0000000F                 0x000000d4   Section        0  entry10a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00000011                 0x000000d4   Section        0  entry11a.o(.ARM.Collect$$$$00000011)
    .ARM.Collect$$$$00002712                 0x000000d4   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d4   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .emb_text                                0x000000d8   Section      120  port.o(.emb_text)
    .text                                    0x00000150   Section       40  startup_lks32mc08x.o(.text)
    .text                                    0x00000178   Section        0  uidiv.o(.text)
    .text                                    0x000001a4   Section        0  ldiv.o(.text)
    .text                                    0x000001f0   Section        0  memcpya.o(.text)
    .text                                    0x00000214   Section        0  memseta.o(.text)
    .text                                    0x00000238   Section        0  uldiv.o(.text)
    .text                                    0x00000298   Section       36  init.o(.text)
    .text                                    0x000002bc   Section        0  llshl.o(.text)
    .text                                    0x000002dc   Section        0  llushr.o(.text)
    i.ADC0_IRQHandler                        0x000002fe   Section        0  interrupt.o(i.ADC0_IRQHandler)
    i.CANTaskFunc                            0x00000300   Section        0  freertos.o(i.CANTaskFunc)
    CANTaskFunc                              0x00000301   Thumb Code    10  freertos.o(i.CANTaskFunc)
    i.CAN_GetIRQFlag                         0x0000030c   Section        0  lks32mc08x_can.o(i.CAN_GetIRQFlag)
    i.CAN_Init                               0x00000318   Section        0  lks32mc08x_can.o(i.CAN_Init)
    i.CAN_StructInit                         0x00000364   Section        0  lks32mc08x_can.o(i.CAN_StructInit)
    i.CMP_IRQHandler                         0x0000037c   Section        0  interrupt.o(i.CMP_IRQHandler)
    i.CheckSum                               0x0000037e   Section        0  common.o(i.CheckSum)
    i.Clock_Init                             0x000003ac   Section        0  hardware_init.o(i.Clock_Init)
    i.DMA_CHx_EN                             0x000003e0   Section        0  lks32mc08x_DMA.o(i.DMA_CHx_EN)
    i.DMA_IRQHandler                         0x000003f8   Section        0  interrupt.o(i.DMA_IRQHandler)
    i.DMA_Init                               0x000003fc   Section        0  lks32mc08x_DMA.o(i.DMA_Init)
    i.DMA_StructInit                         0x00000450   Section        0  lks32mc08x_DMA.o(i.DMA_StructInit)
    i.ENCODER0_IRQHandler                    0x0000045e   Section        0  interrupt.o(i.ENCODER0_IRQHandler)
    i.ENCODER1_IRQHandler                    0x00000460   Section        0  interrupt.o(i.ENCODER1_IRQHandler)
    i.GPIO_IRQHandler                        0x00000462   Section        0  interrupt.o(i.GPIO_IRQHandler)
    i.GPIO_Init                              0x00000464   Section        0  lks32mc08x_gpio.o(i.GPIO_Init)
    i.GPIO_PinAFConfig                       0x0000052c   Section        0  lks32mc08x_gpio.o(i.GPIO_PinAFConfig)
    i.GPIO_ReadOutputDataBit                 0x00000638   Section        0  lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit)
    i.GPIO_ResetBits                         0x0000064c   Section        0  lks32mc08x_gpio.o(i.GPIO_ResetBits)
    i.GPIO_SetBits                           0x0000065e   Section        0  lks32mc08x_gpio.o(i.GPIO_SetBits)
    i.GPIO_StructInit                        0x00000670   Section        0  lks32mc08x_gpio.o(i.GPIO_StructInit)
    i.GPIO_WriteBit                          0x0000067c   Section        0  lks32mc08x_gpio.o(i.GPIO_WriteBit)
    i.HALL_IRQHandler                        0x00000690   Section        0  interrupt.o(i.HALL_IRQHandler)
    i.HW_485_GPIO_Init                       0x00000694   Section        0  hw_485.o(i.HW_485_GPIO_Init)
    i.HW_485_Init                            0x00000710   Section        0  hw_485.o(i.HW_485_Init)
    i.HW_485_UART_Init                       0x00000758   Section        0  hw_485.o(i.HW_485_UART_Init)
    i.HW_CAN_DMA_RX                          0x0000078c   Section        0  hw_can.o(i.HW_CAN_DMA_RX)
    i.HW_CAN_GPIO_Init                       0x00000808   Section        0  hw_can.o(i.HW_CAN_GPIO_Init)
    i.HW_CAN_Init                            0x00000874   Section        0  hw_can.o(i.HW_CAN_Init)
    i.HW_FsmRunningFunc                      0x000008d4   Section        0  hw_485.o(i.HW_FsmRunningFunc)
    i.HW_GetCurEvent                         0x00000944   Section        0  hw_485.o(i.HW_GetCurEvent)
    i.HW_GetCurState                         0x000009e8   Section        0  hw_485.o(i.HW_GetCurState)
    i.HW_NVIC_Init                           0x000009f4   Section        0  hardware_init.o(i.HW_NVIC_Init)
    i.HW_SM_StateTable_Init                  0x00000a28   Section        0  hw_485.o(i.HW_SM_StateTable_Init)
    i.HW_SetCurState                         0x00000ad8   Section        0  hw_485.o(i.HW_SetCurState)
    i.HW_SysLed_Init                         0x00000ae4   Section        0  hardware_init.o(i.HW_SysLed_Init)
    HW_SysLed_Init                           0x00000ae5   Thumb Code    34  hardware_init.o(i.HW_SysLed_Init)
    i.HW_SysTick_Config                      0x00000b0c   Section        0  hardware_init.o(i.HW_SysTick_Config)
    i.HW_TimeoutTimer_Init                   0x00000b64   Section        0  hw_485.o(i.HW_TimeoutTimer_Init)
    i.HW_UART_DMA_Init                       0x00000b98   Section        0  hw_uart .o(i.HW_UART_DMA_Init)
    i.HW_UART_GPIO_Init                      0x00000bec   Section        0  hw_uart .o(i.HW_UART_GPIO_Init)
    i.HW_UART_Init                           0x00000c38   Section        0  hw_uart .o(i.HW_UART_Init)
    i.HardFault_Handler                      0x00000c6c   Section        0  interrupt.o(i.HardFault_Handler)
    i.Hardware_Init                          0x00000c88   Section        0  hardware_init.o(i.Hardware_Init)
    i.I2C0_IRQHandler                        0x00000d30   Section        0  interrupt.o(i.I2C0_IRQHandler)
    i.Invers_GPIO                            0x00000d32   Section        0  hardware_init.o(i.Invers_GPIO)
    i.LKS_FREERTOS_Init                      0x00000d60   Section        0  freertos.o(i.LKS_FREERTOS_Init)
    i.MCPWM_IRQHandler                       0x00000f64   Section        0  interrupt.o(i.MCPWM_IRQHandler)
    i.NMI_Handler                            0x00000f66   Section        0  interrupt.o(i.NMI_Handler)
    i.RS485TaskFunc                          0x00000f6c   Section        0  freertos.o(i.RS485TaskFunc)
    RS485TaskFunc                            0x00000f6d   Thumb Code    20  freertos.o(i.RS485TaskFunc)
    i.SEGGER_RTT_Init                        0x00000f84   Section        0  SEGGER_RTT.o(i.SEGGER_RTT_Init)
    i.SEGGER_RTT_PutChar                     0x00000f8c   Section        0  SEGGER_RTT.o(i.SEGGER_RTT_PutChar)
    i.SFF_ID_Filter                          0x00001008   Section        0  lks32mc08x_can.o(i.SFF_ID_Filter)
    i.SPI0_IRQHandler                        0x00001084   Section        0  interrupt.o(i.SPI0_IRQHandler)
    i.SVC_Handler                            0x00001086   Section        0  port.o(i.SVC_Handler)
    i.SYS_ModuleClockCmd                     0x00001088   Section        0  lks32mc08x_sys.o(i.SYS_ModuleClockCmd)
    i.SoftDelay                              0x000010b8   Section        0  hardware_init.o(i.SoftDelay)
    i.SysLEDTimerCallback                    0x000010d0   Section        0  freertos.o(i.SysLEDTimerCallback)
    SysLEDTimerCallback                      0x000010d1   Thumb Code    14  freertos.o(i.SysLEDTimerCallback)
    i.SysTick_Handler                        0x000010e4   Section        0  interrupt.o(i.SysTick_Handler)
    i.SystemInit                             0x000010f4   Section        0  hardware_init.o(i.SystemInit)
    i.TIM_TimerCmd                           0x000010fc   Section        0  lks32mc08x_tim.o(i.TIM_TimerCmd)
    i.TIM_TimerInit                          0x000011d0   Section        0  lks32mc08x_tim.o(i.TIM_TimerInit)
    i.TIM_TimerStrutInit                     0x0000133c   Section        0  lks32mc08x_tim.o(i.TIM_TimerStrutInit)
    i.UART0_IRQHandler                       0x00001364   Section        0  interrupt.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x00001404   Section        0  interrupt.o(i.UART1_IRQHandler)
    i.UART_Init                              0x00001408   Section        0  lks32mc08x_uart.o(i.UART_Init)
    i.UART_StructInit                        0x0000150c   Section        0  lks32mc08x_uart.o(i.UART_StructInit)
    i.UTIMER0_IRQHandler                     0x0000152c   Section        0  interrupt.o(i.UTIMER0_IRQHandler)
    i.UTIMER1_IRQHandler                     0x00001564   Section        0  interrupt.o(i.UTIMER1_IRQHandler)
    i.UTIMER2_IRQHandler                     0x00001566   Section        0  interrupt.o(i.UTIMER2_IRQHandler)
    i.UTIMER3_IRQHandler                     0x00001568   Section        0  interrupt.o(i.UTIMER3_IRQHandler)
    i._DoInit                                0x0000156c   Section        0  SEGGER_RTT.o(i._DoInit)
    _DoInit                                  0x0000156d   Thumb Code    80  SEGGER_RTT.o(i._DoInit)
    i.__0printf$8                            0x000015d8   Section        0  printf8.o(i.__0printf$8)
    i.__ARM_common_switch8                   0x000015f8   Section        0  hw_485.o(i.__ARM_common_switch8)
    i.__NVIC_EnableIRQ                       0x00001614   Section        0  hardware_init.o(i.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00001615   Thumb Code    26  hardware_init.o(i.__NVIC_EnableIRQ)
    i.__NVIC_SetPriority                     0x00001634   Section        0  hardware_init.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x00001635   Thumb Code   110  hardware_init.o(i.__NVIC_SetPriority)
    i.__scatterload_copy                     0x000016ac   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000016ba   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000016bc   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x000016cc   Section        0  printf8.o(i._printf_core)
    _printf_core                             0x000016cd   Thumb Code  1020  printf8.o(i._printf_core)
    i._printf_post_padding                   0x00001af4   Section        0  printf8.o(i._printf_post_padding)
    _printf_post_padding                     0x00001af5   Thumb Code    32  printf8.o(i._printf_post_padding)
    i._printf_pre_padding                    0x00001b14   Section        0  printf8.o(i._printf_pre_padding)
    _printf_pre_padding                      0x00001b15   Thumb Code    44  printf8.o(i._printf_pre_padding)
    i.fputc                                  0x00001b40   Section        0  hardware_init.o(i.fputc)
    i.fsmActionData1                         0x00001b54   Section        0  hw_485.o(i.fsmActionData1)
    fsmActionData1                           0x00001b55   Thumb Code    30  hw_485.o(i.fsmActionData1)
    i.fsmActionData2                         0x00001b78   Section        0  hw_485.o(i.fsmActionData2)
    fsmActionData2                           0x00001b79   Thumb Code    56  hw_485.o(i.fsmActionData2)
    i.fsmActionDst                           0x00001bc0   Section        0  hw_485.o(i.fsmActionDst)
    fsmActionDst                             0x00001bc1   Thumb Code    46  hw_485.o(i.fsmActionDst)
    i.fsmActionError                         0x00001bf4   Section        0  hw_485.o(i.fsmActionError)
    fsmActionError                           0x00001bf5   Thumb Code    44  hw_485.o(i.fsmActionError)
    i.fsmActionHead                          0x00001c24   Section        0  hw_485.o(i.fsmActionHead)
    fsmActionHead                            0x00001c25   Thumb Code    46  hw_485.o(i.fsmActionHead)
    i.fsmActionIdle                          0x00001c58   Section        0  hw_485.o(i.fsmActionIdle)
    fsmActionIdle                            0x00001c59   Thumb Code    44  hw_485.o(i.fsmActionIdle)
    i.fsmActionLen                           0x00001c88   Section        0  hw_485.o(i.fsmActionLen)
    fsmActionLen                             0x00001c89   Thumb Code    32  hw_485.o(i.fsmActionLen)
    i.fsmActionParity                        0x00001cac   Section        0  hw_485.o(i.fsmActionParity)
    fsmActionParity                          0x00001cad   Thumb Code    44  hw_485.o(i.fsmActionParity)
    i.fsmActionSrc                           0x00001cdc   Section        0  hw_485.o(i.fsmActionSrc)
    fsmActionSrc                             0x00001cdd   Thumb Code    46  hw_485.o(i.fsmActionSrc)
    i.fsmActionType                          0x00001d10   Section        0  hw_485.o(i.fsmActionType)
    fsmActionType                            0x00001d11   Thumb Code    46  hw_485.o(i.fsmActionType)
    i.main                                   0x00001d44   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x00001d94   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x00001d95   Thumb Code   140  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x00001e38   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x00001e39   Thumb Code   184  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckForValidListAndQueue           0x00001f08   Section        0  timers.o(i.prvCheckForValidListAndQueue)
    prvCheckForValidListAndQueue             0x00001f09   Thumb Code    58  timers.o(i.prvCheckForValidListAndQueue)
    i.prvCheckTasksWaitingTermination        0x00001f58   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x00001f59   Thumb Code    60  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x00001fa0   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x00001fa1   Thumb Code    44  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x00001fcc   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x00001fcd   Thumb Code   128  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x0000204c   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x0000204d   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvGetNextExpireTime                   0x00002060   Section        0  timers.o(i.prvGetNextExpireTime)
    prvGetNextExpireTime                     0x00002061   Thumb Code    40  timers.o(i.prvGetNextExpireTime)
    i.prvHeapInit                            0x0000208c   Section        0  heap_4.o(i.prvHeapInit)
    prvHeapInit                              0x0000208d   Thumb Code    92  heap_4.o(i.prvHeapInit)
    i.prvIdleTask                            0x000020fc   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x000020fd   Thumb Code    20  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewQueue                  0x00002114   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x00002115   Thumb Code    34  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewTask                   0x00002136   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x00002137   Thumb Code   174  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseNewTimer                  0x000021e4   Section        0  timers.o(i.prvInitialiseNewTimer)
    prvInitialiseNewTimer                    0x000021e5   Thumb Code    74  timers.o(i.prvInitialiseNewTimer)
    i.prvInitialiseTaskLists                 0x00002230   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x00002231   Thumb Code    68  tasks.o(i.prvInitialiseTaskLists)
    i.prvInsertBlockIntoFreeList             0x00002294   Section        0  heap_4.o(i.prvInsertBlockIntoFreeList)
    prvInsertBlockIntoFreeList               0x00002295   Thumb Code    96  heap_4.o(i.prvInsertBlockIntoFreeList)
    i.prvInsertTimerInActiveList             0x000022fc   Section        0  timers.o(i.prvInsertTimerInActiveList)
    prvInsertTimerInActiveList               0x000022fd   Thumb Code    76  timers.o(i.prvInsertTimerInActiveList)
    i.prvIsQueueEmpty                        0x00002350   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x00002351   Thumb Code    28  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x0000236c   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x0000236d   Thumb Code    30  queue.o(i.prvIsQueueFull)
    i.prvProcessExpiredTimer                 0x0000238c   Section        0  timers.o(i.prvProcessExpiredTimer)
    prvProcessExpiredTimer                   0x0000238d   Thumb Code    64  timers.o(i.prvProcessExpiredTimer)
    i.prvProcessReceivedCommands             0x000023d0   Section        0  timers.o(i.prvProcessReceivedCommands)
    prvProcessReceivedCommands               0x000023d1   Thumb Code   278  timers.o(i.prvProcessReceivedCommands)
    i.prvProcessTimerOrBlockTask             0x000024ec   Section        0  timers.o(i.prvProcessTimerOrBlockTask)
    prvProcessTimerOrBlockTask               0x000024ed   Thumb Code   100  timers.o(i.prvProcessTimerOrBlockTask)
    i.prvReloadTimer                         0x00002558   Section        0  timers.o(i.prvReloadTimer)
    prvReloadTimer                           0x00002559   Thumb Code    40  timers.o(i.prvReloadTimer)
    i.prvResetNextTaskUnblockTime            0x00002580   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x00002581   Thumb Code    44  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvSampleTimeNow                       0x000025b4   Section        0  timers.o(i.prvSampleTimeNow)
    prvSampleTimeNow                         0x000025b5   Thumb Code    40  timers.o(i.prvSampleTimeNow)
    i.prvSwitchTimerLists                    0x000025e0   Section        0  timers.o(i.prvSwitchTimerLists)
    prvSwitchTimerLists                      0x000025e1   Thumb Code    60  timers.o(i.prvSwitchTimerLists)
    i.prvTaskExitError                       0x00002624   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x00002625   Thumb Code    32  port.o(i.prvTaskExitError)
    i.prvTimerTask                           0x00002648   Section        0  timers.o(i.prvTimerTask)
    prvTimerTask                             0x00002649   Thumb Code    26  timers.o(i.prvTimerTask)
    i.prvUnlockQueue                         0x00002662   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x00002663   Thumb Code   142  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x000026f0   Section        0  heap_4.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x00002810   Section        0  port.o(i.pxPortInitialiseStack)
    i.uxListRemove                           0x00002830   Section        0  list.o(i.uxListRemove)
    i.uxTaskGetNumberOfTasks                 0x00002858   Section        0  tasks.o(i.uxTaskGetNumberOfTasks)
    i.vListInitialise                        0x00002864   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x0000287e   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x00002884   Section        0  list.o(i.vListInsert)
    i.vPortEnterCritical                     0x000028bc   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x000028d8   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x00002900   Section        0  heap_4.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x00002978   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vPortYield                             0x000029a4   Section        0  port.o(i.vPortYield)
    i.vQueueWaitForMessageRestricted         0x000029bc   Section        0  queue.o(i.vQueueWaitForMessageRestricted)
    i.vTaskDelay                             0x00002a08   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskInternalSetTimeOutState           0x00002a4c   Section        0  tasks.o(i.vTaskInternalSetTimeOutState)
    i.vTaskMissedYield                       0x00002a64   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x00002a70   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPlaceOnEventListRestricted        0x00002a9c   Section        0  tasks.o(i.vTaskPlaceOnEventListRestricted)
    i.vTaskStartScheduler                    0x00002af4   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x00002b74   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x00002b84   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x00002c04   Section        0  port.o(i.xPortStartScheduler)
    i.xPortSysTickHandler                    0x00002c3c   Section        0  port.o(i.xPortSysTickHandler)
    i.xQueueGenericCreate                    0x00002c60   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReset                     0x00002cc2   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x00002d78   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueGenericSendFromISR               0x00002ed2   Section        0  queue.o(i.xQueueGenericSendFromISR)
    i.xQueueReceive                          0x00002fb0   Section        0  queue.o(i.xQueueReceive)
    i.xTaskCheckForTimeOut                   0x000030e8   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x00003160   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskGetSchedulerState                 0x000031c4   Section        0  tasks.o(i.xTaskGetSchedulerState)
    i.xTaskGetTickCount                      0x000031e8   Section        0  tasks.o(i.xTaskGetTickCount)
    i.xTaskIncrementTick                     0x000031f4   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x0000339c   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskRemoveFromEventList               0x00003450   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x00003558   Section        0  tasks.o(i.xTaskResumeAll)
    i.xTimerCreate                           0x000036b4   Section        0  timers.o(i.xTimerCreate)
    i.xTimerCreateTimerTask                  0x000036e8   Section        0  timers.o(i.xTimerCreateTimerTask)
    i.xTimerGenericCommand                   0x00003730   Section        0  timers.o(i.xTimerGenericCommand)
    i.xTimerGetPeriod                        0x000037a4   Section        0  timers.o(i.xTimerGetPeriod)
    .constdata                               0x000037b6   Section       17  SEGGER_RTT.o(.constdata)
    _aInitStr                                0x000037b6   Data          17  SEGGER_RTT.o(.constdata)
    .data                                    0x20000000   Section       11  hw_485.o(.data)
    tmpState                                 0x20000009   Data           1  hw_485.o(.data)
    tmpEvent                                 0x2000000a   Data           1  hw_485.o(.data)
    .data                                    0x2000000c   Section       28  heap_4.o(.data)
    xStart                                   0x2000000c   Data           8  heap_4.o(.data)
    pxEnd                                    0x20000014   Data           4  heap_4.o(.data)
    xFreeBytesRemaining                      0x20000018   Data           4  heap_4.o(.data)
    xMinimumEverFreeBytesRemaining           0x2000001c   Data           4  heap_4.o(.data)
    xNumberOfSuccessfulAllocations           0x20000020   Data           4  heap_4.o(.data)
    xNumberOfSuccessfulFrees                 0x20000024   Data           4  heap_4.o(.data)
    .data                                    0x20000028   Section        4  port.o(.data)
    uxCriticalNesting                        0x20000028   Data           4  port.o(.data)
    .data                                    0x2000002c   Section       64  tasks.o(.data)
    pxDelayedTaskList                        0x20000030   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x20000034   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x20000038   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x2000003c   Data           4  tasks.o(.data)
    xTickCount                               0x20000040   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x20000044   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000048   Data           4  tasks.o(.data)
    xPendedTicks                             0x2000004c   Data           4  tasks.o(.data)
    xYieldPending                            0x20000050   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x20000054   Data           4  tasks.o(.data)
    uxTaskNumber                             0x20000058   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x2000005c   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x20000060   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x20000068   Data           4  tasks.o(.data)
    .data                                    0x2000006c   Section       20  timers.o(.data)
    pxCurrentTimerList                       0x2000006c   Data           4  timers.o(.data)
    pxOverflowTimerList                      0x20000070   Data           4  timers.o(.data)
    xTimerQueue                              0x20000074   Data           4  timers.o(.data)
    xTimerTaskHandle                         0x20000078   Data           4  timers.o(.data)
    xLastTime                                0x2000007c   Data           4  timers.o(.data)
    .data                                    0x20000080   Section       20  freertos.o(.data)
    .data                                    0x20000094   Section        4  hardware_init.o(.data)
    .data                                    0x20000098   Section        2  interrupt.o(.data)
    .data                                    0x2000009c   Section        4  stdout.o(.data)
    .bss                                     0x200000a0   Section      100  hw_485.o(.bss)
    .bss                                     0x20000104   Section       55  hw_can.o(.bss)
    .bss                                     0x2000013b   Section      128  hw_uart .o(.bss)
    .bss                                     0x200001bb   Section     3072  heap_4.o(.bss)
    ucHeap                                   0x200001bb   Data        3072  heap_4.o(.bss)
    .bss                                     0x20000dbc   Section      240  tasks.o(.bss)
    pxReadyTasksLists                        0x20000dbc   Data         140  tasks.o(.bss)
    xDelayedTaskList1                        0x20000e48   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x20000e5c   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x20000e70   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x20000e84   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x20000e98   Data          20  tasks.o(.bss)
    .bss                                     0x20000eac   Section       40  timers.o(.bss)
    xActiveTimerList1                        0x20000eac   Data          20  timers.o(.bss)
    xActiveTimerList2                        0x20000ec0   Data          20  timers.o(.bss)
    .bss                                     0x20000ed4   Section      312  SEGGER_RTT.o(.bss)
    _acUpBuffer                              0x20000f7c   Data         128  SEGGER_RTT.o(.bss)
    _acDownBuffer                            0x20000ffc   Data          16  SEGGER_RTT.o(.bss)
    STACK                                    0x20001010   Section      512  startup_lks32mc08x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lks32mc08x.o(RESET)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __arm_fini_                               - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_lks32mc08x.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_lks32mc08x.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_lib_shutdown_fini                   0x000000d1   Thumb Code     0  entry12b.o(.ARM.Collect$$$$0000000E)
    __rt_final_cpp                           0x000000d5   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000F)
    __rt_final_exit                          0x000000d5   Thumb Code     0  entry11a.o(.ARM.Collect$$$$00000011)
    __asm___6_port_c_39a90d8d__prvPortStartFirstTask 0x000000d9   Thumb Code    36  port.o(.emb_text)
    ulSetInterruptMaskFromISR                0x00000101   Thumb Code     8  port.o(.emb_text)
    vClearInterruptMaskFromISR               0x00000109   Thumb Code     6  port.o(.emb_text)
    PendSV_Handler                           0x0000010f   Thumb Code    62  port.o(.emb_text)
    Reset_Handler                            0x00000151   Thumb Code    14  startup_lks32mc08x.o(.text)
    CAN_IRQHandler                           0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    DSP_IRQHandler                           0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    PWRDN_IRQHandler                         0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    SIF_IRQHandler                           0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    WAKE_IRQHandler                          0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    __aeabi_uidiv                            0x00000179   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000179   Thumb Code    44  uidiv.o(.text)
    __aeabi_ldivmod                          0x000001a5   Thumb Code    76  ldiv.o(.text)
    __aeabi_memcpy                           0x000001f1   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000001f1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000001f1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x00000215   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000215   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000215   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000223   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000223   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000223   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00000227   Thumb Code    18  memseta.o(.text)
    __aeabi_uldivmod                         0x00000239   Thumb Code    96  uldiv.o(.text)
    __scatterload                            0x00000299   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000299   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x000002bd   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x000002bd   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x000002dd   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x000002dd   Thumb Code     0  llushr.o(.text)
    ADC0_IRQHandler                          0x000002ff   Thumb Code     2  interrupt.o(i.ADC0_IRQHandler)
    CAN_GetIRQFlag                           0x0000030d   Thumb Code     6  lks32mc08x_can.o(i.CAN_GetIRQFlag)
    CAN_Init                                 0x00000319   Thumb Code    72  lks32mc08x_can.o(i.CAN_Init)
    CAN_StructInit                           0x00000365   Thumb Code    24  lks32mc08x_can.o(i.CAN_StructInit)
    CMP_IRQHandler                           0x0000037d   Thumb Code     2  interrupt.o(i.CMP_IRQHandler)
    CheckSum                                 0x0000037f   Thumb Code    44  common.o(i.CheckSum)
    Clock_Init                               0x000003ad   Thumb Code    40  hardware_init.o(i.Clock_Init)
    DMA_CHx_EN                               0x000003e1   Thumb Code    24  lks32mc08x_DMA.o(i.DMA_CHx_EN)
    DMA_IRQHandler                           0x000003f9   Thumb Code     2  interrupt.o(i.DMA_IRQHandler)
    DMA_Init                                 0x000003fd   Thumb Code    78  lks32mc08x_DMA.o(i.DMA_Init)
    DMA_StructInit                           0x00000451   Thumb Code    14  lks32mc08x_DMA.o(i.DMA_StructInit)
    ENCODER0_IRQHandler                      0x0000045f   Thumb Code     2  interrupt.o(i.ENCODER0_IRQHandler)
    ENCODER1_IRQHandler                      0x00000461   Thumb Code     2  interrupt.o(i.ENCODER1_IRQHandler)
    GPIO_IRQHandler                          0x00000463   Thumb Code     2  interrupt.o(i.GPIO_IRQHandler)
    GPIO_Init                                0x00000465   Thumb Code   198  lks32mc08x_gpio.o(i.GPIO_Init)
    GPIO_PinAFConfig                         0x0000052d   Thumb Code   258  lks32mc08x_gpio.o(i.GPIO_PinAFConfig)
    GPIO_ReadOutputDataBit                   0x00000639   Thumb Code    20  lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit)
    GPIO_ResetBits                           0x0000064d   Thumb Code    18  lks32mc08x_gpio.o(i.GPIO_ResetBits)
    GPIO_SetBits                             0x0000065f   Thumb Code    18  lks32mc08x_gpio.o(i.GPIO_SetBits)
    GPIO_StructInit                          0x00000671   Thumb Code    12  lks32mc08x_gpio.o(i.GPIO_StructInit)
    GPIO_WriteBit                            0x0000067d   Thumb Code    20  lks32mc08x_gpio.o(i.GPIO_WriteBit)
    HALL_IRQHandler                          0x00000691   Thumb Code     2  interrupt.o(i.HALL_IRQHandler)
    HW_485_GPIO_Init                         0x00000695   Thumb Code   120  hw_485.o(i.HW_485_GPIO_Init)
    HW_485_Init                              0x00000711   Thumb Code    60  hw_485.o(i.HW_485_Init)
    HW_485_UART_Init                         0x00000759   Thumb Code    46  hw_485.o(i.HW_485_UART_Init)
    HW_CAN_DMA_RX                            0x0000078d   Thumb Code   114  hw_can.o(i.HW_CAN_DMA_RX)
    HW_CAN_GPIO_Init                         0x00000809   Thumb Code   102  hw_can.o(i.HW_CAN_GPIO_Init)
    HW_CAN_Init                              0x00000875   Thumb Code    86  hw_can.o(i.HW_CAN_Init)
    HW_FsmRunningFunc                        0x000008d5   Thumb Code    94  hw_485.o(i.HW_FsmRunningFunc)
    HW_GetCurEvent                           0x00000945   Thumb Code   158  hw_485.o(i.HW_GetCurEvent)
    HW_GetCurState                           0x000009e9   Thumb Code     6  hw_485.o(i.HW_GetCurState)
    HW_NVIC_Init                             0x000009f5   Thumb Code    44  hardware_init.o(i.HW_NVIC_Init)
    HW_SM_StateTable_Init                    0x00000a29   Thumb Code   130  hw_485.o(i.HW_SM_StateTable_Init)
    HW_SetCurState                           0x00000ad9   Thumb Code     8  hw_485.o(i.HW_SetCurState)
    HW_SysTick_Config                        0x00000b0d   Thumb Code    78  hardware_init.o(i.HW_SysTick_Config)
    HW_TimeoutTimer_Init                     0x00000b65   Thumb Code    42  hw_485.o(i.HW_TimeoutTimer_Init)
    HW_UART_DMA_Init                         0x00000b99   Thumb Code    72  hw_uart .o(i.HW_UART_DMA_Init)
    HW_UART_GPIO_Init                        0x00000bed   Thumb Code    70  hw_uart .o(i.HW_UART_GPIO_Init)
    HW_UART_Init                             0x00000c39   Thumb Code    48  hw_uart .o(i.HW_UART_Init)
    HardFault_Handler                        0x00000c6d   Thumb Code    18  interrupt.o(i.HardFault_Handler)
    Hardware_Init                            0x00000c89   Thumb Code   104  hardware_init.o(i.Hardware_Init)
    I2C0_IRQHandler                          0x00000d31   Thumb Code     2  interrupt.o(i.I2C0_IRQHandler)
    Invers_GPIO                              0x00000d33   Thumb Code    44  hardware_init.o(i.Invers_GPIO)
    LKS_FREERTOS_Init                        0x00000d61   Thumb Code   208  freertos.o(i.LKS_FREERTOS_Init)
    MCPWM_IRQHandler                         0x00000f65   Thumb Code     2  interrupt.o(i.MCPWM_IRQHandler)
    NMI_Handler                              0x00000f67   Thumb Code     4  interrupt.o(i.NMI_Handler)
    SEGGER_RTT_Init                          0x00000f85   Thumb Code     8  SEGGER_RTT.o(i.SEGGER_RTT_Init)
    SEGGER_RTT_PutChar                       0x00000f8d   Thumb Code   120  SEGGER_RTT.o(i.SEGGER_RTT_PutChar)
    SFF_ID_Filter                            0x00001009   Thumb Code   118  lks32mc08x_can.o(i.SFF_ID_Filter)
    SPI0_IRQHandler                          0x00001085   Thumb Code     2  interrupt.o(i.SPI0_IRQHandler)
    SVC_Handler                              0x00001087   Thumb Code     2  port.o(i.SVC_Handler)
    SYS_ModuleClockCmd                       0x00001089   Thumb Code    38  lks32mc08x_sys.o(i.SYS_ModuleClockCmd)
    SoftDelay                                0x000010b9   Thumb Code    24  hardware_init.o(i.SoftDelay)
    SysTick_Handler                          0x000010e5   Thumb Code    16  interrupt.o(i.SysTick_Handler)
    SystemInit                               0x000010f5   Thumb Code     8  hardware_init.o(i.SystemInit)
    TIM_TimerCmd                             0x000010fd   Thumb Code   208  lks32mc08x_tim.o(i.TIM_TimerCmd)
    TIM_TimerInit                            0x000011d1   Thumb Code   360  lks32mc08x_tim.o(i.TIM_TimerInit)
    TIM_TimerStrutInit                       0x0000133d   Thumb Code    38  lks32mc08x_tim.o(i.TIM_TimerStrutInit)
    UART0_IRQHandler                         0x00001365   Thumb Code    96  interrupt.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x00001405   Thumb Code     2  interrupt.o(i.UART1_IRQHandler)
    UART_Init                                0x00001409   Thumb Code   238  lks32mc08x_uart.o(i.UART_Init)
    UART_StructInit                          0x0000150d   Thumb Code    30  lks32mc08x_uart.o(i.UART_StructInit)
    UTIMER0_IRQHandler                       0x0000152d   Thumb Code    48  interrupt.o(i.UTIMER0_IRQHandler)
    UTIMER1_IRQHandler                       0x00001565   Thumb Code     2  interrupt.o(i.UTIMER1_IRQHandler)
    UTIMER2_IRQHandler                       0x00001567   Thumb Code     2  interrupt.o(i.UTIMER2_IRQHandler)
    UTIMER3_IRQHandler                       0x00001569   Thumb Code     2  interrupt.o(i.UTIMER3_IRQHandler)
    __0printf$8                              0x000015d9   Thumb Code    24  printf8.o(i.__0printf$8)
    __1printf$8                              0x000015d9   Thumb Code     0  printf8.o(i.__0printf$8)
    __2printf                                0x000015d9   Thumb Code     0  printf8.o(i.__0printf$8)
    __ARM_common_switch8                     0x000015f9   Thumb Code    28  hw_485.o(i.__ARM_common_switch8)
    __scatterload_copy                       0x000016ad   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000016bb   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000016bd   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputc                                    0x00001b41   Thumb Code    18  hardware_init.o(i.fputc)
    main                                     0x00001d45   Thumb Code    32  main.o(i.main)
    pvPortMalloc                             0x000026f1   Thumb Code   268  heap_4.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x00002811   Thumb Code    26  port.o(i.pxPortInitialiseStack)
    uxListRemove                             0x00002831   Thumb Code    40  list.o(i.uxListRemove)
    uxTaskGetNumberOfTasks                   0x00002859   Thumb Code     6  tasks.o(i.uxTaskGetNumberOfTasks)
    vListInitialise                          0x00002865   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x0000287f   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x00002885   Thumb Code    54  list.o(i.vListInsert)
    vPortEnterCritical                       0x000028bd   Thumb Code    22  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x000028d9   Thumb Code    36  port.o(i.vPortExitCritical)
    vPortFree                                0x00002901   Thumb Code   110  heap_4.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x00002979   Thumb Code    34  port.o(i.vPortSetupTimerInterrupt)
    vPortYield                               0x000029a5   Thumb Code    18  port.o(i.vPortYield)
    vQueueWaitForMessageRestricted           0x000029bd   Thumb Code    76  queue.o(i.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00002a09   Thumb Code    62  tasks.o(i.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00002a4d   Thumb Code    14  tasks.o(i.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00002a65   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00002a71   Thumb Code    38  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00002a9d   Thumb Code    82  tasks.o(i.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x00002af5   Thumb Code    94  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x00002b75   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002b85   Thumb Code   108  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x00002c05   Thumb Code    48  port.o(i.xPortStartScheduler)
    xPortSysTickHandler                      0x00002c3d   Thumb Code    32  port.o(i.xPortSysTickHandler)
    xQueueGenericCreate                      0x00002c61   Thumb Code    98  queue.o(i.xQueueGenericCreate)
    xQueueGenericReset                       0x00002cc3   Thumb Code   182  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x00002d79   Thumb Code   346  queue.o(i.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x00002ed3   Thumb Code   222  queue.o(i.xQueueGenericSendFromISR)
    xQueueReceive                            0x00002fb1   Thumb Code   312  queue.o(i.xQueueReceive)
    xTaskCheckForTimeOut                     0x000030e9   Thumb Code   110  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x00003161   Thumb Code   100  tasks.o(i.xTaskCreate)
    xTaskGetSchedulerState                   0x000031c5   Thumb Code    28  tasks.o(i.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x000031e9   Thumb Code     6  tasks.o(i.xTaskGetTickCount)
    xTaskIncrementTick                       0x000031f5   Thumb Code   380  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x0000339d   Thumb Code   168  tasks.o(i.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00003451   Thumb Code   240  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00003559   Thumb Code   314  tasks.o(i.xTaskResumeAll)
    xTimerCreate                             0x000036b5   Thumb Code    50  timers.o(i.xTimerCreate)
    xTimerCreateTimerTask                    0x000036e9   Thumb Code    52  timers.o(i.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x00003731   Thumb Code   110  timers.o(i.xTimerGenericCommand)
    xTimerGetPeriod                          0x000037a5   Thumb Code    18  timers.o(i.xTimerGetPeriod)
    Region$$Table$$Base                      0x000037c8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000037e8   Number         0  anon$$obj.o(Region$$Table)
    rs485_Rx                                 0x20000000   Data           8  hw_485.o(.data)
    rs485_RxFlag                             0x20000008   Data           1  hw_485.o(.data)
    pxCurrentTCB                             0x2000002c   Data           4  tasks.o(.data)
    uxTopUsedPriority                        0x20000064   Data           4  tasks.o(.data)
    rs485Task_Handler                        0x20000080   Data           4  freertos.o(.data)
    canTask_Handler                          0x20000084   Data           4  freertos.o(.data)
    sysLEDTimer_Handler                      0x20000088   Data           4  freertos.o(.data)
    sysLEDTimerStart                         0x2000008c   Data           4  freertos.o(.data)
    taskCreateStatus                         0x20000090   Data           4  freertos.o(.data)
    SystemCoreClock                          0x20000094   Data           4  hardware_init.o(.data)
    timetik                                  0x20000098   Data           2  interrupt.o(.data)
    __stdout                                 0x2000009c   Data           4  stdout.o(.data)
    hw_FsmNodeTable                          0x200000a0   Data          80  hw_485.o(.bss)
    hw_485_Manage                            0x200000f0   Data          20  hw_485.o(.bss)
    CAN_Rx                                   0x20000104   Data          55  hw_can.o(.bss)
    DUART_DMA_RX                             0x2000013b   Data         128  hw_uart .o(.bss)
    _SEGGER_RTT                              0x20000ed4   Data         168  SEGGER_RTT.o(.bss)
    __initial_sp                             0x20001210   Data           0  startup_lks32mc08x.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00003888, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x000037e8, Max: 0x00010000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x000000c0   Data   RO         2481    RESET               startup_lks32mc08x.o
    0x000000c0   0x00000000   Code   RO         2486  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x00000004   Code   RO         2764    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x00000004   Code   RO         2767    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x00000000   Code   RO         2769    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x00000000   Code   RO         2771    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x00000008   Code   RO         2772    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x00000004   Code   RO         2779    .ARM.Collect$$$$0000000E  mc_p.l(entry12b.o)
    0x000000d4   0x00000000   Code   RO         2774    .ARM.Collect$$$$0000000F  mc_p.l(entry10a.o)
    0x000000d4   0x00000000   Code   RO         2776    .ARM.Collect$$$$00000011  mc_p.l(entry11a.o)
    0x000000d4   0x00000004   Code   RO         2765    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d8   0x00000078   Code   RO          469    .emb_text           port.o
    0x00000150   0x00000028   Code   RO         2482    .text               startup_lks32mc08x.o
    0x00000178   0x0000002c   Code   RO         2489    .text               mc_p.l(uidiv.o)
    0x000001a4   0x0000004c   Code   RO         2493    .text               mc_p.l(ldiv.o)
    0x000001f0   0x00000024   Code   RO         2495    .text               mc_p.l(memcpya.o)
    0x00000214   0x00000024   Code   RO         2497    .text               mc_p.l(memseta.o)
    0x00000238   0x00000060   Code   RO         2781    .text               mc_p.l(uldiv.o)
    0x00000298   0x00000024   Code   RO         2794    .text               mc_p.l(init.o)
    0x000002bc   0x00000020   Code   RO         2796    .text               mc_p.l(llshl.o)
    0x000002dc   0x00000022   Code   RO         2798    .text               mc_p.l(llushr.o)
    0x000002fe   0x00000002   Code   RO         2306    i.ADC0_IRQHandler   interrupt.o
    0x00000300   0x0000000a   Code   RO         2137    i.CANTaskFunc       freertos.o
    0x0000030a   0x00000002   PAD
    0x0000030c   0x0000000c   Code   RO         1268    i.CAN_GetIRQFlag    lks32mc08x_can.o
    0x00000318   0x0000004c   Code   RO         1269    i.CAN_Init          lks32mc08x_can.o
    0x00000364   0x00000018   Code   RO         1279    i.CAN_StructInit    lks32mc08x_can.o
    0x0000037c   0x00000002   Code   RO         2308    i.CMP_IRQHandler    interrupt.o
    0x0000037e   0x0000002c   Code   RO         2112    i.CheckSum          common.o
    0x000003aa   0x00000002   PAD
    0x000003ac   0x00000034   Code   RO         2211    i.Clock_Init        hardware_init.o
    0x000003e0   0x00000018   Code   RO         1221    i.DMA_CHx_EN        lks32mc08x_DMA.o
    0x000003f8   0x00000002   Code   RO         2309    i.DMA_IRQHandler    interrupt.o
    0x000003fa   0x00000002   PAD
    0x000003fc   0x00000054   Code   RO         1224    i.DMA_Init          lks32mc08x_DMA.o
    0x00000450   0x0000000e   Code   RO         1225    i.DMA_StructInit    lks32mc08x_DMA.o
    0x0000045e   0x00000002   Code   RO         2310    i.ENCODER0_IRQHandler  interrupt.o
    0x00000460   0x00000002   Code   RO         2311    i.ENCODER1_IRQHandler  interrupt.o
    0x00000462   0x00000002   Code   RO         2312    i.GPIO_IRQHandler   interrupt.o
    0x00000464   0x000000c6   Code   RO         1422    i.GPIO_Init         lks32mc08x_gpio.o
    0x0000052a   0x00000002   PAD
    0x0000052c   0x0000010c   Code   RO         1424    i.GPIO_PinAFConfig  lks32mc08x_gpio.o
    0x00000638   0x00000014   Code   RO         1428    i.GPIO_ReadOutputDataBit  lks32mc08x_gpio.o
    0x0000064c   0x00000012   Code   RO         1429    i.GPIO_ResetBits    lks32mc08x_gpio.o
    0x0000065e   0x00000012   Code   RO         1430    i.GPIO_SetBits      lks32mc08x_gpio.o
    0x00000670   0x0000000c   Code   RO         1431    i.GPIO_StructInit   lks32mc08x_gpio.o
    0x0000067c   0x00000014   Code   RO         1434    i.GPIO_WriteBit     lks32mc08x_gpio.o
    0x00000690   0x00000002   Code   RO         2313    i.HALL_IRQHandler   interrupt.o
    0x00000692   0x00000002   PAD
    0x00000694   0x0000007c   Code   RO            3    i.HW_485_GPIO_Init  hw_485.o
    0x00000710   0x00000048   Code   RO            4    i.HW_485_Init       hw_485.o
    0x00000758   0x00000034   Code   RO            5    i.HW_485_UART_Init  hw_485.o
    0x0000078c   0x0000007c   Code   RO          237    i.HW_CAN_DMA_RX     hw_can.o
    0x00000808   0x0000006c   Code   RO          239    i.HW_CAN_GPIO_Init  hw_can.o
    0x00000874   0x00000060   Code   RO          240    i.HW_CAN_Init       hw_can.o
    0x000008d4   0x00000070   Code   RO            6    i.HW_FsmRunningFunc  hw_485.o
    0x00000944   0x000000a4   Code   RO            7    i.HW_GetCurEvent    hw_485.o
    0x000009e8   0x0000000c   Code   RO            8    i.HW_GetCurState    hw_485.o
    0x000009f4   0x00000034   Code   RO         2212    i.HW_NVIC_Init      hardware_init.o
    0x00000a28   0x000000b0   Code   RO            9    i.HW_SM_StateTable_Init  hw_485.o
    0x00000ad8   0x0000000c   Code   RO           10    i.HW_SetCurState    hw_485.o
    0x00000ae4   0x00000028   Code   RO         2213    i.HW_SysLed_Init    hardware_init.o
    0x00000b0c   0x00000058   Code   RO         2214    i.HW_SysTick_Config  hardware_init.o
    0x00000b64   0x00000034   Code   RO           11    i.HW_TimeoutTimer_Init  hw_485.o
    0x00000b98   0x00000054   Code   RO          281    i.HW_UART_DMA_Init  hw_uart .o
    0x00000bec   0x0000004c   Code   RO          282    i.HW_UART_GPIO_Init  hw_uart .o
    0x00000c38   0x00000034   Code   RO          283    i.HW_UART_Init      hw_uart .o
    0x00000c6c   0x0000001c   Code   RO         2314    i.HardFault_Handler  interrupt.o
    0x00000c88   0x000000a8   Code   RO         2215    i.Hardware_Init     hardware_init.o
    0x00000d30   0x00000002   Code   RO         2315    i.I2C0_IRQHandler   interrupt.o
    0x00000d32   0x0000002c   Code   RO         2216    i.Invers_GPIO       hardware_init.o
    0x00000d5e   0x00000002   PAD
    0x00000d60   0x00000204   Code   RO         2138    i.LKS_FREERTOS_Init  freertos.o
    0x00000f64   0x00000002   Code   RO         2316    i.MCPWM_IRQHandler  interrupt.o
    0x00000f66   0x00000004   Code   RO         2318    i.NMI_Handler       interrupt.o
    0x00000f6a   0x00000002   PAD
    0x00000f6c   0x00000018   Code   RO         2139    i.RS485TaskFunc     freertos.o
    0x00000f84   0x00000008   Code   RO         1844    i.SEGGER_RTT_Init   SEGGER_RTT.o
    0x00000f8c   0x0000007c   Code   RO         1845    i.SEGGER_RTT_PutChar  SEGGER_RTT.o
    0x00001008   0x0000007c   Code   RO         1284    i.SFF_ID_Filter     lks32mc08x_can.o
    0x00001084   0x00000002   Code   RO         2319    i.SPI0_IRQHandler   interrupt.o
    0x00001086   0x00000002   Code   RO          470    i.SVC_Handler       port.o
    0x00001088   0x00000030   Code   RO         1566    i.SYS_ModuleClockCmd  lks32mc08x_sys.o
    0x000010b8   0x00000018   Code   RO         2217    i.SoftDelay         hardware_init.o
    0x000010d0   0x00000014   Code   RO         2140    i.SysLEDTimerCallback  freertos.o
    0x000010e4   0x00000010   Code   RO         2321    i.SysTick_Handler   interrupt.o
    0x000010f4   0x00000008   Code   RO         2218    i.SystemInit        hardware_init.o
    0x000010fc   0x000000d4   Code   RO         1684    i.TIM_TimerCmd      lks32mc08x_tim.o
    0x000011d0   0x0000016c   Code   RO         1685    i.TIM_TimerInit     lks32mc08x_tim.o
    0x0000133c   0x00000026   Code   RO         1686    i.TIM_TimerStrutInit  lks32mc08x_tim.o
    0x00001362   0x00000002   PAD
    0x00001364   0x000000a0   Code   RO         2322    i.UART0_IRQHandler  interrupt.o
    0x00001404   0x00000002   Code   RO         2323    i.UART1_IRQHandler  interrupt.o
    0x00001406   0x00000002   PAD
    0x00001408   0x00000104   Code   RO         1776    i.UART_Init         lks32mc08x_uart.o
    0x0000150c   0x0000001e   Code   RO         1781    i.UART_StructInit   lks32mc08x_uart.o
    0x0000152a   0x00000002   PAD
    0x0000152c   0x00000038   Code   RO         2324    i.UTIMER0_IRQHandler  interrupt.o
    0x00001564   0x00000002   Code   RO         2325    i.UTIMER1_IRQHandler  interrupt.o
    0x00001566   0x00000002   Code   RO         2326    i.UTIMER2_IRQHandler  interrupt.o
    0x00001568   0x00000002   Code   RO         2327    i.UTIMER3_IRQHandler  interrupt.o
    0x0000156a   0x00000002   PAD
    0x0000156c   0x0000006c   Code   RO         1866    i._DoInit           SEGGER_RTT.o
    0x000015d8   0x00000020   Code   RO         2710    i.__0printf$8       mc_p.l(printf8.o)
    0x000015f8   0x0000001c   Code   RO          121    i.__ARM_common_switch8  hw_485.o
    0x00001614   0x00000020   Code   RO         2219    i.__NVIC_EnableIRQ  hardware_init.o
    0x00001634   0x00000078   Code   RO         2220    i.__NVIC_SetPriority  hardware_init.o
    0x000016ac   0x0000000e   Code   RO         2808    i.__scatterload_copy  mc_p.l(handlers.o)
    0x000016ba   0x00000002   Code   RO         2809    i.__scatterload_null  mc_p.l(handlers.o)
    0x000016bc   0x0000000e   Code   RO         2810    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x000016ca   0x00000002   PAD
    0x000016cc   0x00000428   Code   RO         2717    i._printf_core      mc_p.l(printf8.o)
    0x00001af4   0x00000020   Code   RO         2718    i._printf_post_padding  mc_p.l(printf8.o)
    0x00001b14   0x0000002c   Code   RO         2719    i._printf_pre_padding  mc_p.l(printf8.o)
    0x00001b40   0x00000012   Code   RO         2221    i.fputc             hardware_init.o
    0x00001b52   0x00000002   PAD
    0x00001b54   0x00000024   Code   RO           12    i.fsmActionData1    hw_485.o
    0x00001b78   0x00000048   Code   RO           13    i.fsmActionData2    hw_485.o
    0x00001bc0   0x00000034   Code   RO           14    i.fsmActionDst      hw_485.o
    0x00001bf4   0x00000030   Code   RO           15    i.fsmActionError    hw_485.o
    0x00001c24   0x00000034   Code   RO           16    i.fsmActionHead     hw_485.o
    0x00001c58   0x00000030   Code   RO           17    i.fsmActionIdle     hw_485.o
    0x00001c88   0x00000024   Code   RO           18    i.fsmActionLen      hw_485.o
    0x00001cac   0x00000030   Code   RO           19    i.fsmActionParity   hw_485.o
    0x00001cdc   0x00000034   Code   RO           20    i.fsmActionSrc      hw_485.o
    0x00001d10   0x00000034   Code   RO           21    i.fsmActionType     hw_485.o
    0x00001d44   0x00000050   Code   RO         2461    i.main              main.o
    0x00001d94   0x000000a4   Code   RO          730    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001e38   0x000000d0   Code   RO          731    i.prvAddNewTaskToReadyList  tasks.o
    0x00001f08   0x00000050   Code   RO         1066    i.prvCheckForValidListAndQueue  timers.o
    0x00001f58   0x00000048   Code   RO          732    i.prvCheckTasksWaitingTermination  tasks.o
    0x00001fa0   0x0000002c   Code   RO          564    i.prvCopyDataFromQueue  queue.o
    0x00001fcc   0x00000080   Code   RO          565    i.prvCopyDataToQueue  queue.o
    0x0000204c   0x00000012   Code   RO          733    i.prvDeleteTCB      tasks.o
    0x0000205e   0x00000002   PAD
    0x00002060   0x0000002c   Code   RO         1067    i.prvGetNextExpireTime  timers.o
    0x0000208c   0x00000070   Code   RO          397    i.prvHeapInit       heap_4.o
    0x000020fc   0x00000018   Code   RO          734    i.prvIdleTask       tasks.o
    0x00002114   0x00000022   Code   RO          568    i.prvInitialiseNewQueue  queue.o
    0x00002136   0x000000ae   Code   RO          735    i.prvInitialiseNewTask  tasks.o
    0x000021e4   0x0000004a   Code   RO         1068    i.prvInitialiseNewTimer  timers.o
    0x0000222e   0x00000002   PAD
    0x00002230   0x00000064   Code   RO          736    i.prvInitialiseTaskLists  tasks.o
    0x00002294   0x00000068   Code   RO          398    i.prvInsertBlockIntoFreeList  heap_4.o
    0x000022fc   0x00000054   Code   RO         1069    i.prvInsertTimerInActiveList  timers.o
    0x00002350   0x0000001c   Code   RO          569    i.prvIsQueueEmpty   queue.o
    0x0000236c   0x0000001e   Code   RO          570    i.prvIsQueueFull    queue.o
    0x0000238a   0x00000002   PAD
    0x0000238c   0x00000044   Code   RO         1070    i.prvProcessExpiredTimer  timers.o
    0x000023d0   0x0000011c   Code   RO         1071    i.prvProcessReceivedCommands  timers.o
    0x000024ec   0x0000006c   Code   RO         1072    i.prvProcessTimerOrBlockTask  timers.o
    0x00002558   0x00000028   Code   RO         1073    i.prvReloadTimer    timers.o
    0x00002580   0x00000034   Code   RO          737    i.prvResetNextTaskUnblockTime  tasks.o
    0x000025b4   0x0000002c   Code   RO         1074    i.prvSampleTimeNow  timers.o
    0x000025e0   0x00000044   Code   RO         1075    i.prvSwitchTimerLists  timers.o
    0x00002624   0x00000024   Code   RO          471    i.prvTaskExitError  port.o
    0x00002648   0x0000001a   Code   RO         1076    i.prvTimerTask      timers.o
    0x00002662   0x0000008e   Code   RO          571    i.prvUnlockQueue    queue.o
    0x000026f0   0x00000120   Code   RO          400    i.pvPortMalloc      heap_4.o
    0x00002810   0x00000020   Code   RO          472    i.pxPortInitialiseStack  port.o
    0x00002830   0x00000028   Code   RO          319    i.uxListRemove      list.o
    0x00002858   0x0000000c   Code   RO          742    i.uxTaskGetNumberOfTasks  tasks.o
    0x00002864   0x0000001a   Code   RO          320    i.vListInitialise   list.o
    0x0000287e   0x00000006   Code   RO          321    i.vListInitialiseItem  list.o
    0x00002884   0x00000036   Code   RO          322    i.vListInsert       list.o
    0x000028ba   0x00000002   PAD
    0x000028bc   0x0000001c   Code   RO          474    i.vPortEnterCritical  port.o
    0x000028d8   0x00000028   Code   RO          475    i.vPortExitCritical  port.o
    0x00002900   0x00000078   Code   RO          401    i.vPortFree         heap_4.o
    0x00002978   0x0000002c   Code   RO          476    i.vPortSetupTimerInterrupt  port.o
    0x000029a4   0x00000018   Code   RO          477    i.vPortYield        port.o
    0x000029bc   0x0000004c   Code   RO          576    i.vQueueWaitForMessageRestricted  queue.o
    0x00002a08   0x00000044   Code   RO          746    i.vTaskDelay        tasks.o
    0x00002a4c   0x00000018   Code   RO          750    i.vTaskInternalSetTimeOutState  tasks.o
    0x00002a64   0x0000000c   Code   RO          751    i.vTaskMissedYield  tasks.o
    0x00002a70   0x0000002c   Code   RO          752    i.vTaskPlaceOnEventList  tasks.o
    0x00002a9c   0x00000058   Code   RO          753    i.vTaskPlaceOnEventListRestricted  tasks.o
    0x00002af4   0x00000080   Code   RO          760    i.vTaskStartScheduler  tasks.o
    0x00002b74   0x00000010   Code   RO          762    i.vTaskSuspendAll   tasks.o
    0x00002b84   0x00000080   Code   RO          763    i.vTaskSwitchContext  tasks.o
    0x00002c04   0x00000038   Code   RO          478    i.xPortStartScheduler  port.o
    0x00002c3c   0x00000024   Code   RO          479    i.xPortSysTickHandler  port.o
    0x00002c60   0x00000062   Code   RO          578    i.xQueueGenericCreate  queue.o
    0x00002cc2   0x000000b6   Code   RO          579    i.xQueueGenericReset  queue.o
    0x00002d78   0x0000015a   Code   RO          580    i.xQueueGenericSend  queue.o
    0x00002ed2   0x000000de   Code   RO          581    i.xQueueGenericSendFromISR  queue.o
    0x00002fb0   0x00000138   Code   RO          587    i.xQueueReceive     queue.o
    0x000030e8   0x00000078   Code   RO          765    i.xTaskCheckForTimeOut  tasks.o
    0x00003160   0x00000064   Code   RO          766    i.xTaskCreate       tasks.o
    0x000031c4   0x00000024   Code   RO          773    i.xTaskGetSchedulerState  tasks.o
    0x000031e8   0x0000000c   Code   RO          774    i.xTaskGetTickCount  tasks.o
    0x000031f4   0x000001a8   Code   RO          776    i.xTaskIncrementTick  tasks.o
    0x0000339c   0x000000b4   Code   RO          777    i.xTaskPriorityDisinherit  tasks.o
    0x00003450   0x00000108   Code   RO          779    i.xTaskRemoveFromEventList  tasks.o
    0x00003558   0x0000015c   Code   RO          780    i.xTaskResumeAll    tasks.o
    0x000036b4   0x00000032   Code   RO         1081    i.xTimerCreate      timers.o
    0x000036e6   0x00000002   PAD
    0x000036e8   0x00000048   Code   RO         1082    i.xTimerCreateTimerTask  timers.o
    0x00003730   0x00000074   Code   RO         1083    i.xTimerGenericCommand  timers.o
    0x000037a4   0x00000012   Code   RO         1085    i.xTimerGetPeriod   timers.o
    0x000037b6   0x00000011   Data   RO         1872    .constdata          SEGGER_RTT.o
    0x000037c7   0x00000001   PAD
    0x000037c8   0x00000020   Data   RO         2806    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00001210, Max: 0x00002000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0000000b   Data   RW           23    .data               hw_485.o
    0x2000000b   0x00000001   PAD
    0x2000000c   0x0000001c   Data   RW          407    .data               heap_4.o
    0x20000028   0x00000004   Data   RW          480    .data               port.o
    0x2000002c   0x00000040   Data   RW          783    .data               tasks.o
    0x2000006c   0x00000014   Data   RW         1090    .data               timers.o
    0x20000080   0x00000014   Data   RW         2141    .data               freertos.o
    0x20000094   0x00000004   Data   RW         2222    .data               hardware_init.o
    0x20000098   0x00000002   Data   RW         2329    .data               interrupt.o
    0x2000009a   0x00000002   PAD
    0x2000009c   0x00000004   Data   RW         2780    .data               mc_p.l(stdout.o)
    0x200000a0   0x00000064   Zero   RW           22    .bss                hw_485.o
    0x20000104   0x00000037   Zero   RW          241    .bss                hw_can.o
    0x2000013b   0x00000080   Zero   RW          284    .bss                hw_uart .o
    0x200001bb   0x00000c00   Zero   RW          406    .bss                heap_4.o
    0x20000dbb   0x00000001   PAD
    0x20000dbc   0x000000f0   Zero   RW          782    .bss                tasks.o
    0x20000eac   0x00000028   Zero   RW         1089    .bss                timers.o
    0x20000ed4   0x00000138   Zero   RW         1871    .bss                SEGGER_RTT.o
    0x2000100c   0x00000004   PAD
    0x20001010   0x00000200   Zero   RW         2479    STACK               startup_lks32mc08x.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       240         32         17          0        312       7353   SEGGER_RTT.o
        44          0          0          0          0       1019   common.o
       570        318          0         20          0       2362   freertos.o
       646        116          0          4          0      15137   hardware_init.o
       624         58          0         28       3072      11087   heap_4.o
      1300        186          0         11        100      47812   hw_485.o
       328         26          0          0         55       2446   hw_can.o
       212         22          0          0        128       2185   hw_uart .o
       292         82          0          2          0       8711   interrupt.o
       126          0          0          0          0      10865   list.o
       122          6          0          0          0       3369   lks32mc08x_DMA.o
       236         16          0          0          0       2909   lks32mc08x_can.o
       554         28          0          0          0       4918   lks32mc08x_gpio.o
        48         10          0          0          0        573   lks32mc08x_sys.o
       614          8          0          0          0       2520   lks32mc08x_tim.o
       290         22          0          0          0       1762   lks32mc08x_uart.o
        80         48          0          0          0        439   main.o
       418         58          0          4          0       6911   port.o
      1642          0          0          0          0      14699   queue.o
        40         14        192          0        512        664   startup_lks32mc08x.o
      2816        338          0         64        240      29021   tasks.o
      1176        102          0         20         40      16060   timers.o

    ----------------------------------------------------------------------
     12452       1490        242        156       4464     192822   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        34          0          1          3          5          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         4          0          0          0          0          0   entry12b.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        76          0          0          0          0         76   ldiv.o
        32          0          0          0          0         68   llshl.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
      1172         52          0          0          0        324   printf8.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         72   uidiv.o
        96          0          0          0          0         84   uldiv.o

    ----------------------------------------------------------------------
      1618         68          0          4          0        920   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1616         68          0          4          0        920   mc_p.l

    ----------------------------------------------------------------------
      1618         68          0          4          0        920   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14070       1558        242        160       4464     186890   Grand Totals
     14070       1558        242        160       4464     186890   ELF Image Totals
     14070       1558        242        160          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                14312 (  13.98kB)
    Total RW  Size (RW Data + ZI Data)              4624 (   4.52kB)
    Total ROM Size (Code + RO Data + RW Data)      14472 (  14.13kB)

==============================================================================

