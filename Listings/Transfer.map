Component: ARM Compiler 5.06 update 7 (build 960) Tool: armlink [4d3601]

==============================================================================

Section Cross References

    main.o(i.main) refers to common.o(i.CheckSum) for CheckSum
    main.o(i.main) refers to segger_rtt.o(i.SEGGER_RTT_Init) for SEGGER_RTT_Init
    main.o(i.main) refers to hardware_init.o(i.Hardware_Init) for Hardware_Init
    main.o(i.main) refers to freertos.o(i.LKS_FREERTOS_Init) for LKS_FREERTOS_Init
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(.data) for sumCheck
    freertos.o(i.LED0Task) refers to printf8.o(i.__0printf$8) for __2printf
    freertos.o(i.LED0Task) refers to hw_485.o(i.HW_485_RxDMAClearCTMS) for HW_485_RxDMAClearCTMS
    freertos.o(i.LED0Task) refers to memseta.o(.text) for __aeabi_memclr
    freertos.o(i.LED0Task) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    freertos.o(i.LED0Task) refers to hw_485.o(.data) for RS485_RxFlag
    freertos.o(i.LKS_FREERTOS_Init) refers to timers.o(i.xTimerCreate) for xTimerCreate
    freertos.o(i.LKS_FREERTOS_Init) refers to printf8.o(i.__0printf$8) for __2printf
    freertos.o(i.LKS_FREERTOS_Init) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    freertos.o(i.LKS_FREERTOS_Init) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    freertos.o(i.LKS_FREERTOS_Init) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    freertos.o(i.LKS_FREERTOS_Init) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    freertos.o(i.LKS_FREERTOS_Init) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(i.SysLEDTimerCallback) for SysLEDTimerCallback
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(.data) for sysLEDTimer_Handler
    freertos.o(i.LKS_FREERTOS_Init) refers to freertos.o(i.LED0Task) for LED0Task
    freertos.o(i.SysLEDTimerCallback) refers to hardware_init.o(i.Invers_GPIO) for Invers_GPIO
    interrupt.o(i.DMA_IRQHandler) refers to lks32mc08x_dma.o(i.DMA_CHx_EN) for DMA_CHx_EN
    interrupt.o(i.DMA_IRQHandler) refers to hw_485.o(.data) for RS485_RxFlag
    interrupt.o(i.SysTick_Handler) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    interrupt.o(i.SysTick_Handler) refers to port.o(i.xPortSysTickHandler) for xPortSysTickHandler
    hardware_init.o(i.Clock_Init) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    hardware_init.o(i.HW_SysTick_Config) refers to hardware_init.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    hardware_init.o(i.Hardware_Init) refers to hw_uart .o(i.HW_UART_GPIO_Init) for HW_UART_GPIO_Init
    hardware_init.o(i.Hardware_Init) refers to hw_uart .o(i.HW_UART_Init) for HW_UART_Init
    hardware_init.o(i.Hardware_Init) refers to hw_485.o(i.HW_485_GPIO_Init) for HW_485_GPIO_Init
    hardware_init.o(i.Hardware_Init) refers to hw_485.o(i.HW_485_Init) for HW_485_Init
    hardware_init.o(i.Hardware_Init) refers to hw_485.o(i.HW_485_DMA_Init) for HW_485_DMA_Init
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.SysGPIO_Init) for SysGPIO_Init
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.SoftDelay) for SoftDelay
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    hardware_init.o(i.Hardware_Init) refers to hardware_init.o(i.HW_SysTick_Config) for HW_SysTick_Config
    hardware_init.o(i.Invers_GPIO) refers to lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit) for GPIO_ReadOutputDataBit
    hardware_init.o(i.Invers_GPIO) refers to lks32mc08x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    hardware_init.o(i.Invers_GPIO) refers to lks32mc08x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    hardware_init.o(i.SysGPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hardware_init.o(i.SysGPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hardware_init.o(i.SystemInit) refers to hardware_init.o(i.Clock_Init) for Clock_Init
    hardware_init.o(i.fputc) refers to segger_rtt.o(i.SEGGER_RTT_PutChar) for SEGGER_RTT_PutChar
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(RESET) refers to startup_lks32mc08x.o(.text) for Reset_Handler
    startup_lks32mc08x.o(RESET) refers to port.o(i.SVC_Handler) for SVC_Handler
    startup_lks32mc08x.o(RESET) refers to port.o(.emb_text) for PendSV_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.SysTick_Handler) for SysTick_Handler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER0_IRQHandler) for UTIMER0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER1_IRQHandler) for UTIMER1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER2_IRQHandler) for UTIMER2_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UTIMER3_IRQHandler) for UTIMER3_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ENCODER0_IRQHandler) for ENCODER0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ENCODER1_IRQHandler) for ENCODER1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.I2C0_IRQHandler) for I2C0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.GPIO_IRQHandler) for GPIO_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.HALL_IRQHandler) for HALL_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.SPI0_IRQHandler) for SPI0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.MCPWM_IRQHandler) for MCPWM_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.CMP_IRQHandler) for CMP_IRQHandler
    startup_lks32mc08x.o(RESET) refers to interrupt.o(i.DMA_IRQHandler) for DMA_IRQHandler
    startup_lks32mc08x.o(.text) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    startup_lks32mc08x.o(.text) refers to hardware_init.o(i.SystemInit) for SystemInit
    startup_lks32mc08x.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    lks32mc08x_can.o(i.CAN_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_can.o(i.CAN_Sleep) refers to uidiv.o(.text) for __aeabi_uidivmod
    lks32mc08x_dma.o(i.DMA_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    lks32mc08x_gpio.o(i.GPIO_PinAFConfig) refers to lks32mc08x_gpio.o(i.__ARM_common_switch8) for __ARM_common_switch8
    lks32mc08x_gpio.o(i.GPIO_ResetBits) refers to lks32mc08x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    lks32mc08x_gpio.o(i.GPIO_SetBits) refers to lks32mc08x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    lks32mc08x_sys.o(i.DSP_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_sys.o(i.Switch2HRC) refers to lks32mc08x_sys.o(.bss) for WAKE_InitStruct
    lks32mc08x_sys.o(i.Switch2PLL) refers to lks32mc08x_sys.o(i.SoftDelay) for SoftDelay
    lks32mc08x_sys.o(i.Switch2PLL) refers to lks32mc08x_sys.o(.bss) for WAKE_InitStruct
    lks32mc08x_tim.o(i.TIM_ECDInit) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_tim.o(i.TIM_TimerInit) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_uart.o(i.UART_Init) refers to lks32mc08x_sys.o(i.SYS_ModuleClockCmd) for SYS_ModuleClockCmd
    lks32mc08x_uart.o(i.UART_Init) refers to ldiv.o(.text) for __aeabi_ldivmod
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_dma.o(i.DMA_StructInit) for DMA_StructInit
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_dma.o(i.DMA_Init) for DMA_Init
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_can.o(i.CAN_GetIRQFlag) for CAN_GetIRQFlag
    hw_can.o(i.HW_CAN_DMA_RX) refers to lks32mc08x_dma.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_can.o(i.HW_CAN_DMA_TX) refers to lks32mc08x_dma.o(i.DMA_StructInit) for DMA_StructInit
    hw_can.o(i.HW_CAN_DMA_TX) refers to lks32mc08x_dma.o(i.DMA_Init) for DMA_Init
    hw_can.o(i.HW_CAN_DMA_TX) refers to lks32mc08x_dma.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_can.o(i.HW_CAN_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hw_can.o(i.HW_CAN_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hw_can.o(i.HW_CAN_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hw_can.o(i.HW_CAN_Init) refers to lks32mc08x_can.o(i.CAN_StructInit) for CAN_StructInit
    hw_can.o(i.HW_CAN_Init) refers to lks32mc08x_can.o(i.CAN_Init) for CAN_Init
    hw_can.o(i.HW_CAN_Init) refers to lks32mc08x_can.o(i.SFF_ID_Filter) for SFF_ID_Filter
    hw_can.o(i.HW_CAN_Init) refers to hw_can.o(i.HW_CAN_GPIO_Init) for HW_CAN_GPIO_Init
    hw_uart .o(i.HW_UART_DMA_Init) refers to lks32mc08x_dma.o(i.DMA_StructInit) for DMA_StructInit
    hw_uart .o(i.HW_UART_DMA_Init) refers to lks32mc08x_dma.o(i.DMA_Init) for DMA_Init
    hw_uart .o(i.HW_UART_DMA_Init) refers to lks32mc08x_dma.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_uart .o(i.HW_UART_DMA_Init) refers to hw_uart .o(.bss) for DUART_DMA_RX
    hw_uart .o(i.HW_UART_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hw_uart .o(i.HW_UART_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hw_uart .o(i.HW_UART_Init) refers to lks32mc08x_uart.o(i.UART_StructInit) for UART_StructInit
    hw_uart .o(i.HW_UART_Init) refers to lks32mc08x_uart.o(i.UART_Init) for UART_Init
    hw_485.o(i.HW_485_DMA_Init) refers to lks32mc08x_dma.o(i.DMA_StructInit) for DMA_StructInit
    hw_485.o(i.HW_485_DMA_Init) refers to lks32mc08x_dma.o(i.DMA_Init) for DMA_Init
    hw_485.o(i.HW_485_DMA_Init) refers to lks32mc08x_dma.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_485.o(i.HW_485_DMA_Init) refers to hw_485.o(.bss) for DMA_InitStruct
    hw_485.o(i.HW_485_DMA_Init) refers to hw_485.o(.data) for RS485_RX
    hw_485.o(i.HW_485_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_StructInit) for GPIO_StructInit
    hw_485.o(i.HW_485_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_Init) for GPIO_Init
    hw_485.o(i.HW_485_GPIO_Init) refers to lks32mc08x_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    hw_485.o(i.HW_485_Init) refers to lks32mc08x_uart.o(i.UART_StructInit) for UART_StructInit
    hw_485.o(i.HW_485_Init) refers to lks32mc08x_uart.o(i.UART_Init) for UART_Init
    hw_485.o(i.HW_485_RxDMAClearCTMS) refers to lks32mc08x_dma.o(i.DMA_CHx_EN) for DMA_CHx_EN
    hw_485.o(i.HW_485_RxDMAClearCTMS) refers to lks32mc08x_dma.o(i.DMA_Init) for DMA_Init
    hw_485.o(i.HW_485_RxDMAClearCTMS) refers to hw_485.o(.bss) for DMA_InitStruct
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.bss) for ucHeap
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.data) for xStart
    heap_4.o(i.prvInsertBlockIntoFreeList) refers to heap_4.o(.data) for xStart
    heap_4.o(i.pvPortCalloc) refers to uidiv.o(.text) for __aeabi_uidivmod
    heap_4.o(i.pvPortCalloc) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    heap_4.o(i.pvPortCalloc) refers to memseta.o(.text) for __aeabi_memclr
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvHeapInit) for prvHeapInit
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(.data) for pxEnd
    heap_4.o(i.vPortFree) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortFree) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.vPortFree) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortFree) refers to heap_4.o(.data) for xFreeBytesRemaining
    heap_4.o(i.vPortGetHeapStats) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortGetHeapStats) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortGetHeapStats) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(i.vPortGetHeapStats) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    heap_4.o(i.vPortGetHeapStats) refers to heap_4.o(.data) for xStart
    heap_4.o(i.xPortGetFreeHeapSize) refers to heap_4.o(.data) for xFreeBytesRemaining
    heap_4.o(i.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.data) for xMinimumEverFreeBytesRemaining
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(i.prvTaskExitError) refers to port.o(.data) for uxCriticalNesting
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEndScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortSetupTimerInterrupt) refers to uidiv.o(.text) for __aeabi_uidivmod
    port.o(i.vPortSetupTimerInterrupt) refers to hardware_init.o(.data) for SystemCoreClock
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvPortStartFirstTask
    port.o(i.xPortStartScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.xPortSysTickHandler) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    port.o(i.xPortSysTickHandler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    queue.o(i.pcQueueGetName) refers to queue.o(.bss) for xQueueRegistry
    queue.o(i.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvNotifyQueueSetContainer) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.prvNotifyQueueSetContainer) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvNotifyQueueSetContainer) refers to tasks.o(i.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueAddToRegistry) refers to queue.o(.bss) for xQueueRegistry
    queue.o(i.vQueueDelete) refers to queue.o(i.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(i.vQueueDelete) refers to heap_4.o(i.vPortFree) for vPortFree
    queue.o(i.vQueueUnregisterQueue) refers to queue.o(.bss) for xQueueRegistry
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to tasks.o(i.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(i.vQueueWaitForMessageRestricted) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(i.xQueueCreateSet) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueGenericCreate) refers to uidiv.o(.text) for __aeabi_uidivmod
    queue.o(i.xQueueGenericCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReset) refers to uidiv.o(.text) for __aeabi_uidivmod
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(i.xQueueGiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueGiveFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeekFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSelectFromSet) refers to queue.o(i.xQueueReceive) for xQueueReceive
    queue.o(i.xQueueSelectFromSetFromISR) refers to queue.o(i.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskGenericNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.ulTaskGenericNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskGenericNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskGenericNotifyValueClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to timers.o(i.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskCatchUpTicks) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCatchUpTicks) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to memseta.o(.text) for __aeabi_memclr4
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskDelayUntil) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskDelayUntil) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to lks32mc08x_gpio.o(i.__ARM_common_switch8) for __ARM_common_switch8
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.xTaskGenericNotifyFromISR) refers to lks32mc08x_gpio.o(i.__ARM_common_switch8) for __ARM_common_switch8
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskGenericNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetSchedulerState) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to list.o(i.vListInitialise) for vListInitialise
    timers.o(i.prvCheckForValidListAndQueue) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(i.prvCheckForValidListAndQueue) refers to queue.o(i.vQueueAddToRegistry) for vQueueAddToRegistry
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.bss) for xActiveTimerList1
    timers.o(i.prvGetNextExpireTime) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvInitialiseNewTimer) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.prvInitialiseNewTimer) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    timers.o(i.prvInsertTimerInActiveList) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvInsertTimerInActiveList) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvProcessExpiredTimer) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.prvReloadTimer) for prvReloadTimer
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvProcessReceivedCommands) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessReceivedCommands) refers to lks32mc08x_gpio.o(i.__ARM_common_switch8) for __ARM_common_switch8
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvReloadTimer) for prvReloadTimer
    timers.o(i.prvProcessReceivedCommands) refers to heap_4.o(i.vPortFree) for vPortFree
    timers.o(i.prvProcessReceivedCommands) refers to queue.o(i.xQueueReceive) for xQueueReceive
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(i.prvProcessTimerOrBlockTask) refers to queue.o(i.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(i.prvProcessTimerOrBlockTask) refers to port.o(i.vPortYield) for vPortYield
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvReloadTimer) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvSampleTimeNow) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(i.prvSampleTimeNow) refers to timers.o(i.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(i.prvSampleTimeNow) refers to timers.o(.data) for xLastTime
    timers.o(i.prvSwitchTimerLists) refers to timers.o(i.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(i.prvSwitchTimerLists) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvTimerTask) refers to timers.o(i.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.uxTimerGetReloadMode) refers to timers.o(i.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(i.vTimerSetReloadMode) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetReloadMode) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    timers.o(i.xTimerCreate) refers to timers.o(i.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.xTimerCreateTimerTask) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvTimerTask) for prvTimerTask
    timers.o(i.xTimerGenericCommand) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(i.xTimerGenericCommand) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerGetReloadMode) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.xTimerGetReloadMode) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.data) for xTimerTaskHandle
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    segger_rtt.o(i.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_GetAvailWriteSpace) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_GetAvailWriteSpace) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_GetBytesInBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_GetKey) refers to segger_rtt.o(i.SEGGER_RTT_Read) for SEGGER_RTT_Read
    segger_rtt.o(i.SEGGER_RTT_HasData) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_HasDataUp) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_HasKey) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_HasKey) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_Init) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_PutChar) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_PutChar) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_PutCharSkipNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_Read) refers to segger_rtt.o(i.SEGGER_RTT_ReadNoLock) for SEGGER_RTT_ReadNoLock
    segger_rtt.o(i.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_ReadNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_ReadUpBuffer) refers to segger_rtt.o(i.SEGGER_RTT_ReadUpBufferNoLock) for SEGGER_RTT_ReadUpBufferNoLock
    segger_rtt.o(i.SEGGER_RTT_ReadUpBufferNoLock) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_ReadUpBufferNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i.SEGGER_RTT_ReadUpBufferNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(i._WriteNoCheck) for _WriteNoCheck
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.data) for _aTerminalId
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to strlen.o(.text) for strlen
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._PostTerminalSwitch) for _PostTerminalSwitch
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.data) for _ActiveTerminal
    segger_rtt.o(i.SEGGER_RTT_WaitKey) refers to segger_rtt.o(i.SEGGER_RTT_GetKey) for SEGGER_RTT_GetKey
    segger_rtt.o(i.SEGGER_RTT_Write) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_Write) refers to segger_rtt.o(i.SEGGER_RTT_WriteNoLock) for SEGGER_RTT_WriteNoLock
    segger_rtt.o(i.SEGGER_RTT_Write) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(i._DoInit) for _DoInit
    segger_rtt.o(i.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(i.SEGGER_RTT_WriteDownBufferNoLock) for SEGGER_RTT_WriteDownBufferNoLock
    segger_rtt.o(i.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(i._WriteNoCheck) for _WriteNoCheck
    segger_rtt.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(i._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(i._WriteNoCheck) for _WriteNoCheck
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteSkipNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i.SEGGER_RTT_WriteSkipNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i.SEGGER_RTT_WriteString) refers to strlen.o(.text) for strlen
    segger_rtt.o(i.SEGGER_RTT_WriteString) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt.o(i.SEGGER_RTT_WriteWithOverwriteNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i.SEGGER_RTT_WriteWithOverwriteNoLock) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i._DoInit) refers to memseta.o(.text) for __aeabi_memclr4
    segger_rtt.o(i._DoInit) refers to segger_rtt.o(.bss) for _SEGGER_RTT
    segger_rtt.o(i._DoInit) refers to segger_rtt.o(.constdata) for _aInitStr
    segger_rtt.o(i._PostTerminalSwitch) refers to segger_rtt.o(i._WriteBlocking) for _WriteBlocking
    segger_rtt.o(i._PostTerminalSwitch) refers to segger_rtt.o(.data) for _aTerminalId
    segger_rtt.o(i._WriteBlocking) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(i._WriteNoCheck) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt_printf.o(i.SEGGER_RTT_printf) refers to segger_rtt_printf.o(i.SEGGER_RTT_vprintf) for SEGGER_RTT_vprintf
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(i._StoreChar) for _StoreChar
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(i._PrintInt) for _PrintInt
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(i._PrintUnsigned) for _PrintUnsigned
    segger_rtt_printf.o(i.SEGGER_RTT_vprintf) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt_printf.o(i._PrintInt) refers to idiv.o(.text) for __aeabi_idivmod
    segger_rtt_printf.o(i._PrintInt) refers to segger_rtt_printf.o(i._StoreChar) for _StoreChar
    segger_rtt_printf.o(i._PrintInt) refers to segger_rtt_printf.o(i._PrintUnsigned) for _PrintUnsigned
    segger_rtt_printf.o(i._PrintUnsigned) refers to uidiv.o(.text) for __aeabi_uidivmod
    segger_rtt_printf.o(i._PrintUnsigned) refers to segger_rtt_printf.o(i._StoreChar) for _StoreChar
    segger_rtt_printf.o(i._PrintUnsigned) refers to segger_rtt_printf.o(.constdata) for _aV2C
    segger_rtt_printf.o(i._StoreChar) refers to segger_rtt.o(i.SEGGER_RTT_Write) for SEGGER_RTT_Write
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000F) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$00000011) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry12b.o(.ARM.Collect$$$$0000000E) for __rt_lib_shutdown_fini
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    ldiv.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to hardware_init.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to hardware_init.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to hardware_init.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to hardware_init.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to hardware_init.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to hardware_init.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to hardware_init.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to hardware_init.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to hardware_init.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to hardware_init.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to hardware_init.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_lks32mc08x.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing freertos.o(.rev16_text), (4 bytes).
    Removing freertos.o(.revsh_text), (4 bytes).
    Removing interrupt.o(.rev16_text), (4 bytes).
    Removing interrupt.o(.revsh_text), (4 bytes).
    Removing interrupt.o(i.SleepTimer_IRQHandler), (2 bytes).
    Removing hardware_init.o(.rev16_text), (4 bytes).
    Removing hardware_init.o(.revsh_text), (4 bytes).
    Removing startup_lks32mc08x.o(HEAP), (512 bytes).
    Removing common.o(.rev16_text), (4 bytes).
    Removing common.o(.revsh_text), (4 bytes).
    Removing common.o(i.CheckCrc8), (96 bytes).
    Removing lks32mc08x_can.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_can.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_can.o(i.CAN_GetIRQFlag), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_Init), (76 bytes).
    Removing lks32mc08x_can.o(i.CAN_Manual_Awake), (32 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadALC), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadErrorCode), (44 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadRXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadState), (10 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReadTXERRCNT), (12 bytes).
    Removing lks32mc08x_can.o(i.CAN_ReceFramInfor), (20 bytes).
    Removing lks32mc08x_can.o(i.CAN_Receive_Msg), (308 bytes).
    Removing lks32mc08x_can.o(i.CAN_Sleep), (92 bytes).
    Removing lks32mc08x_can.o(i.CAN_StructInit), (24 bytes).
    Removing lks32mc08x_can.o(i.EFF_ID_Filter), (124 bytes).
    Removing lks32mc08x_can.o(i.ID1_Filter_Dual), (208 bytes).
    Removing lks32mc08x_can.o(i.ID2_Filter_Dual), (176 bytes).
    Removing lks32mc08x_can.o(i.My_CAN_Send_Msg), (260 bytes).
    Removing lks32mc08x_can.o(i.SFF_ID_Filter), (124 bytes).
    Removing lks32mc08x_dma.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_dma.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_dma.o(i.DMA_ClearIRQFlag), (12 bytes).
    Removing lks32mc08x_dma.o(i.DMA_GetIRQFlag), (72 bytes).
    Removing lks32mc08x_exti.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_exti.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_ClearIRQFlag), (24 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_GetIRQFlag), (52 bytes).
    Removing lks32mc08x_exti.o(i.EXTI_Trigger_Config), (80 bytes).
    Removing lks32mc08x_gpio.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_gpio.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_LockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadInputData), (6 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadInputDataBit), (20 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_ReadOutputData), (6 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_UnlockRegister), (32 bytes).
    Removing lks32mc08x_gpio.o(i.GPIO_Write), (8 bytes).
    Removing lks32mc08x_iwdg.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_iwdg.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_DISABLE), (20 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_ENABLE), (20 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_Feed), (40 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_Init), (80 bytes).
    Removing lks32mc08x_iwdg.o(i.IWDG_StrutInit), (10 bytes).
    Removing lks32mc08x_sys.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_sys.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_sys.o(i.DSP_Init), (12 bytes).
    Removing lks32mc08x_sys.o(i.SYS_AnalogModuleClockCmd), (52 bytes).
    Removing lks32mc08x_sys.o(i.SYS_ClearRst), (28 bytes).
    Removing lks32mc08x_sys.o(i.SYS_EnablePORFilter), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_FallSleep), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_FeedDog), (76 bytes).
    Removing lks32mc08x_sys.o(i.SYS_GetRstSource), (12 bytes).
    Removing lks32mc08x_sys.o(i.SYS_Init), (120 bytes).
    Removing lks32mc08x_sys.o(i.SYS_SetWakeInterval), (32 bytes).
    Removing lks32mc08x_sys.o(i.SYS_SoftResetModule), (28 bytes).
    Removing lks32mc08x_sys.o(i.SYS_StructInit), (26 bytes).
    Removing lks32mc08x_sys.o(i.SYS_WatchDogCmd), (52 bytes).
    Removing lks32mc08x_sys.o(i.SetWakeIO), (60 bytes).
    Removing lks32mc08x_sys.o(i.SoftDelay), (24 bytes).
    Removing lks32mc08x_sys.o(i.Switch2HRC), (76 bytes).
    Removing lks32mc08x_sys.o(i.Switch2PLL), (60 bytes).
    Removing lks32mc08x_sys.o(.bss), (12 bytes).
    Removing lks32mc08x_tim.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_tim.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_tim.o(i.ECD_ClearIRQFlag), (36 bytes).
    Removing lks32mc08x_tim.o(i.ECD_GetIRQFlag), (84 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ClearIRQFlag), (68 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDCmd), (84 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDInit), (224 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECDStructInit), (24 bytes).
    Removing lks32mc08x_tim.o(i.TIM_ECD_GetCount), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_GetIRQFlag), (156 bytes).
    Removing lks32mc08x_tim.o(i.TIM_TimerCmd), (212 bytes).
    Removing lks32mc08x_tim.o(i.TIM_TimerInit), (364 bytes).
    Removing lks32mc08x_tim.o(i.TIM_TimerStrutInit), (38 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCMPT0), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCMPT1), (6 bytes).
    Removing lks32mc08x_tim.o(i.TIM_Timer_GetCount), (6 bytes).
    Removing lks32mc08x_uart.o(.rev16_text), (4 bytes).
    Removing lks32mc08x_uart.o(.revsh_text), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_ClearIRQFlag), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_GetIRQFlag), (22 bytes).
    Removing lks32mc08x_uart.o(i.UART_ReadData), (6 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendAddr_485), (52 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendData), (4 bytes).
    Removing lks32mc08x_uart.o(i.UART_SendData_485), (52 bytes).
    Removing hw_can.o(.rev16_text), (4 bytes).
    Removing hw_can.o(.revsh_text), (4 bytes).
    Removing hw_can.o(i.HW_CAN_DMA_RX), (124 bytes).
    Removing hw_can.o(i.HW_CAN_DMA_TX), (108 bytes).
    Removing hw_can.o(i.HW_CAN_GPIO_Init), (108 bytes).
    Removing hw_can.o(i.HW_CAN_Init), (80 bytes).
    Removing hw_uart .o(.rev16_text), (4 bytes).
    Removing hw_uart .o(.revsh_text), (4 bytes).
    Removing hw_uart .o(i.HW_UART_DMA_Init), (84 bytes).
    Removing hw_uart .o(.bss), (128 bytes).
    Removing hw_485.o(.rev16_text), (4 bytes).
    Removing hw_485.o(.revsh_text), (4 bytes).
    Removing hw_485.o(i.HW_485_DMA_RxCompleteCallback), (6 bytes).
    Removing heap_4.o(.rev16_text), (4 bytes).
    Removing heap_4.o(.revsh_text), (4 bytes).
    Removing heap_4.o(i.pvPortCalloc), (66 bytes).
    Removing heap_4.o(i.vPortGetHeapStats), (128 bytes).
    Removing heap_4.o(i.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(i.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(i.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing port.o(.rev16_text), (4 bytes).
    Removing port.o(.revsh_text), (4 bytes).
    Removing port.o(i.vPortEndScheduler), (36 bytes).
    Removing list.o(.rev16_text), (4 bytes).
    Removing list.o(.revsh_text), (4 bytes).
    Removing list.o(i.vListInsertEnd), (24 bytes).
    Removing queue.o(.rev16_text), (4 bytes).
    Removing queue.o(.revsh_text), (4 bytes).
    Removing queue.o(i.pcQueueGetName), (52 bytes).
    Removing queue.o(i.prvGetDisinheritPriorityAfterTimeout), (22 bytes).
    Removing queue.o(i.prvInitialiseMutex), (32 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (28 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (18 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(i.vQueueDelete), (30 bytes).
    Removing queue.o(i.vQueueUnregisterQueue), (60 bytes).
    Removing queue.o(i.xQueueAddToSet), (42 bytes).
    Removing queue.o(i.xQueueCreateMutex), (30 bytes).
    Removing queue.o(i.xQueueCreateSet), (20 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (232 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (28 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (32 bytes).
    Removing queue.o(i.xQueuePeek), (316 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (108 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (190 bytes).
    Removing queue.o(i.xQueueRemoveFromSet), (46 bytes).
    Removing queue.o(i.xQueueSelectFromSet), (24 bytes).
    Removing queue.o(i.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(i.xQueueSemaphoreTake), (360 bytes).
    Removing tasks.o(.rev16_text), (4 bytes).
    Removing tasks.o(.revsh_text), (4 bytes).
    Removing tasks.o(i.pcTaskGetName), (36 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (84 bytes).
    Removing tasks.o(i.pvTaskIncrementMutexHeldCount), (32 bytes).
    Removing tasks.o(i.ulTaskGenericNotifyTake), (144 bytes).
    Removing tasks.o(i.ulTaskGenericNotifyValueClear), (68 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (36 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (40 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelete), (188 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (20 bytes).
    Removing tasks.o(i.vTaskGenericNotifyGiveFromISR), (320 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (120 bytes).
    Removing tasks.o(i.vTaskPriorityDisinheritAfterTimeout), (224 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (272 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (236 bytes).
    Removing tasks.o(i.vTaskResume), (160 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (44 bytes).
    Removing tasks.o(i.vTaskSuspend), (196 bytes).
    Removing tasks.o(i.xTaskCatchUpTicks), (68 bytes).
    Removing tasks.o(i.xTaskDelayUntil), (156 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (384 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (448 bytes).
    Removing tasks.o(i.xTaskGenericNotifyStateClear), (80 bytes).
    Removing tasks.o(i.xTaskGenericNotifyWait), (172 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(i.xTaskPriorityInherit), (208 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (192 bytes).
    Removing timers.o(.rev16_text), (4 bytes).
    Removing timers.o(.revsh_text), (4 bytes).
    Removing timers.o(i.pcTimerGetName), (18 bytes).
    Removing timers.o(i.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(i.uxTimerGetReloadMode), (12 bytes).
    Removing timers.o(i.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(i.vTimerSetTimerID), (30 bytes).
    Removing timers.o(i.xTimerGetExpiryTime), (18 bytes).
    Removing timers.o(i.xTimerGetPeriod), (18 bytes).
    Removing timers.o(i.xTimerGetReloadMode), (46 bytes).
    Removing timers.o(i.xTimerGetTimerDaemonTaskHandle), (36 bytes).
    Removing timers.o(i.xTimerIsTimerActive), (46 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_AllocDownBuffer), (172 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_AllocUpBuffer), (172 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_ConfigDownBuffer), (116 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer), (116 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_GetAvailWriteSpace), (24 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_GetBytesInBuffer), (56 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_GetKey), (32 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_HasData), (24 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_HasDataUp), (24 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_HasKey), (44 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_PutCharSkip), (112 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_PutCharSkipNoLock), (56 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_Read), (50 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_ReadNoLock), (184 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_ReadUpBuffer), (50 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_ReadUpBufferNoLock), (184 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetFlagsDownBuffer), (88 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetFlagsUpBuffer), (88 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetNameDownBuffer), (88 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetNameUpBuffer), (88 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_SetTerminal), (156 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_TerminalOut), (260 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WaitKey), (14 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_Write), (72 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteDownBuffer), (72 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteDownBufferNoLock), (132 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteNoLock), (132 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteSkipNoLock), (152 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteString), (26 bytes).
    Removing segger_rtt.o(i.SEGGER_RTT_WriteWithOverwriteNoLock), (180 bytes).
    Removing segger_rtt.o(i._GetAvailWriteSpace), (28 bytes).
    Removing segger_rtt.o(i._PostTerminalSwitch), (36 bytes).
    Removing segger_rtt.o(i._WriteBlocking), (126 bytes).
    Removing segger_rtt.o(i._WriteNoCheck), (86 bytes).
    Removing segger_rtt.o(.data), (17 bytes).
    Removing segger_rtt_printf.o(i.SEGGER_RTT_printf), (36 bytes).
    Removing segger_rtt_printf.o(i.SEGGER_RTT_vprintf), (536 bytes).
    Removing segger_rtt_printf.o(i._PrintInt), (270 bytes).
    Removing segger_rtt_printf.o(i._PrintUnsigned), (284 bytes).
    Removing segger_rtt_printf.o(i._StoreChar), (68 bytes).
    Removing segger_rtt_printf.o(.constdata), (16 bytes).
    Removing dadd.o(.text), (360 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

238 unused section(s) (total 17585 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_lks32mc08x.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  ldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12a.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    Driver\Src\hw_485.c                      0x00000000   Number         0  hw_485.o ABSOLUTE
    Driver\Src\hw_can.c                      0x00000000   Number         0  hw_can.o ABSOLUTE
    Driver\Src\hw_uart .c                    0x00000000   Number         0  hw_uart .o ABSOLUTE
    Driver\\Src\\hw_485.c                    0x00000000   Number         0  hw_485.o ABSOLUTE
    Driver\\Src\\hw_can.c                    0x00000000   Number         0  hw_can.o ABSOLUTE
    Driver\\Src\\hw_uart .c                  0x00000000   Number         0  hw_uart .o ABSOLUTE
    FreeRTOS-Kernel\\list.c                  0x00000000   Number         0  list.o ABSOLUTE
    FreeRTOS-Kernel\\portable\\MemMang\\heap_4.c 0x00000000   Number         0  heap_4.o ABSOLUTE
    FreeRTOS-Kernel\\portable\\RVDS\\ARM_CM0\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    FreeRTOS-Kernel\\queue.c                 0x00000000   Number         0  queue.o ABSOLUTE
    FreeRTOS-Kernel\\tasks.c                 0x00000000   Number         0  tasks.o ABSOLUTE
    FreeRTOS-Kernel\\timers.c                0x00000000   Number         0  timers.o ABSOLUTE
    FreeRTOS-Kernel\list.c                   0x00000000   Number         0  list.o ABSOLUTE
    FreeRTOS-Kernel\portable\MemMang\heap_4.c 0x00000000   Number         0  heap_4.o ABSOLUTE
    FreeRTOS-Kernel\portable\RVDS\ARM_CM0\port.c 0x00000000   Number         0  port.o ABSOLUTE
    FreeRTOS-Kernel\queue.c                  0x00000000   Number         0  queue.o ABSOLUTE
    FreeRTOS-Kernel\tasks.c                  0x00000000   Number         0  tasks.o ABSOLUTE
    FreeRTOS-Kernel\timers.c                 0x00000000   Number         0  timers.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_DMA.c 0x00000000   Number         0  lks32mc08x_dma.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_can.c 0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_exti.c 0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_gpio.c 0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_iwdg.c 0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_sys.c 0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_tim.c 0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\lks32mc08x_uart.c 0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    LKS32MC08x_Periph_Driver\Source\startup_lks32mc08x.s 0x00000000   Number         0  startup_lks32mc08x.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_DMA.c 0x00000000   Number         0  lks32mc08x_dma.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_can.c 0x00000000   Number         0  lks32mc08x_can.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_exti.c 0x00000000   Number         0  lks32mc08x_exti.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_gpio.c 0x00000000   Number         0  lks32mc08x_gpio.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_iwdg.c 0x00000000   Number         0  lks32mc08x_iwdg.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_sys.c 0x00000000   Number         0  lks32mc08x_sys.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_tim.c 0x00000000   Number         0  lks32mc08x_tim.o ABSOLUTE
    LKS32MC08x_Periph_Driver\\Source\\lks32mc08x_uart.c 0x00000000   Number         0  lks32mc08x_uart.o ABSOLUTE
    SEGGER_RTT_V764b\RTT\SEGGER_RTT.c        0x00000000   Number         0  segger_rtt.o ABSOLUTE
    SEGGER_RTT_V764b\RTT\SEGGER_RTT_printf.c 0x00000000   Number         0  segger_rtt_printf.o ABSOLUTE
    System\Src\common.c                      0x00000000   Number         0  common.o ABSOLUTE
    System\Src\freertos.c                    0x00000000   Number         0  freertos.o ABSOLUTE
    System\Src\hardware_init.c               0x00000000   Number         0  hardware_init.o ABSOLUTE
    System\Src\interrupt.c                   0x00000000   Number         0  interrupt.o ABSOLUTE
    System\Src\main.c                        0x00000000   Number         0  main.o ABSOLUTE
    System\\Src\\common.c                    0x00000000   Number         0  common.o ABSOLUTE
    System\\Src\\freertos.c                  0x00000000   Number         0  freertos.o ABSOLUTE
    System\\Src\\hardware_init.c             0x00000000   Number         0  hardware_init.o ABSOLUTE
    System\\Src\\interrupt.c                 0x00000000   Number         0  interrupt.o ABSOLUTE
    System\\Src\\main.c                      0x00000000   Number         0  main.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000E                 0x000000d0   Section        4  entry12b.o(.ARM.Collect$$$$0000000E)
    .ARM.Collect$$$$0000000F                 0x000000d4   Section        0  entry10a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00000011                 0x000000d4   Section        0  entry11a.o(.ARM.Collect$$$$00000011)
    .ARM.Collect$$$$00002712                 0x000000d4   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d4   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .emb_text                                0x000000d8   Section      120  port.o(.emb_text)
    .text                                    0x00000150   Section       40  startup_lks32mc08x.o(.text)
    .text                                    0x00000178   Section        0  uidiv.o(.text)
    .text                                    0x000001a4   Section        0  ldiv.o(.text)
    .text                                    0x000001f0   Section        0  memcpya.o(.text)
    .text                                    0x00000214   Section        0  memseta.o(.text)
    .text                                    0x00000238   Section        0  uldiv.o(.text)
    .text                                    0x00000298   Section       36  init.o(.text)
    .text                                    0x000002bc   Section        0  llshl.o(.text)
    .text                                    0x000002dc   Section        0  llushr.o(.text)
    i.ADC0_IRQHandler                        0x000002fe   Section        0  interrupt.o(i.ADC0_IRQHandler)
    i.CMP_IRQHandler                         0x00000300   Section        0  interrupt.o(i.CMP_IRQHandler)
    i.CheckSum                               0x00000302   Section        0  common.o(i.CheckSum)
    i.Clock_Init                             0x00000330   Section        0  hardware_init.o(i.Clock_Init)
    i.DMA_CHx_EN                             0x00000364   Section        0  lks32mc08x_dma.o(i.DMA_CHx_EN)
    i.DMA_IRQHandler                         0x0000037c   Section        0  interrupt.o(i.DMA_IRQHandler)
    i.DMA_Init                               0x000003ac   Section        0  lks32mc08x_dma.o(i.DMA_Init)
    i.DMA_StructInit                         0x00000400   Section        0  lks32mc08x_dma.o(i.DMA_StructInit)
    i.ENCODER0_IRQHandler                    0x0000040e   Section        0  interrupt.o(i.ENCODER0_IRQHandler)
    i.ENCODER1_IRQHandler                    0x00000410   Section        0  interrupt.o(i.ENCODER1_IRQHandler)
    i.GPIO_IRQHandler                        0x00000412   Section        0  interrupt.o(i.GPIO_IRQHandler)
    i.GPIO_Init                              0x00000414   Section        0  lks32mc08x_gpio.o(i.GPIO_Init)
    i.GPIO_PinAFConfig                       0x000004dc   Section        0  lks32mc08x_gpio.o(i.GPIO_PinAFConfig)
    i.GPIO_ReadOutputDataBit                 0x000005e8   Section        0  lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit)
    i.GPIO_ResetBits                         0x000005fc   Section        0  lks32mc08x_gpio.o(i.GPIO_ResetBits)
    i.GPIO_SetBits                           0x0000060e   Section        0  lks32mc08x_gpio.o(i.GPIO_SetBits)
    i.GPIO_StructInit                        0x00000620   Section        0  lks32mc08x_gpio.o(i.GPIO_StructInit)
    i.GPIO_WriteBit                          0x0000062c   Section        0  lks32mc08x_gpio.o(i.GPIO_WriteBit)
    i.HALL_IRQHandler                        0x00000640   Section        0  interrupt.o(i.HALL_IRQHandler)
    i.HW_485_DMA_Init                        0x00000644   Section        0  hw_485.o(i.HW_485_DMA_Init)
    i.HW_485_GPIO_Init                       0x00000698   Section        0  hw_485.o(i.HW_485_GPIO_Init)
    i.HW_485_Init                            0x00000714   Section        0  hw_485.o(i.HW_485_Init)
    i.HW_485_RxDMAClearCTMS                  0x00000740   Section        0  hw_485.o(i.HW_485_RxDMAClearCTMS)
    i.HW_SysTick_Config                      0x0000076c   Section        0  hardware_init.o(i.HW_SysTick_Config)
    i.HW_UART_GPIO_Init                      0x000007c4   Section        0  hw_uart .o(i.HW_UART_GPIO_Init)
    i.HW_UART_Init                           0x00000810   Section        0  hw_uart .o(i.HW_UART_Init)
    i.Hardware_Init                          0x0000083c   Section        0  hardware_init.o(i.Hardware_Init)
    i.I2C0_IRQHandler                        0x000008b8   Section        0  interrupt.o(i.I2C0_IRQHandler)
    i.Invers_GPIO                            0x000008ba   Section        0  hardware_init.o(i.Invers_GPIO)
    i.LED0Task                               0x000008e8   Section        0  freertos.o(i.LED0Task)
    LED0Task                                 0x000008e9   Thumb Code    70  freertos.o(i.LED0Task)
    i.LKS_FREERTOS_Init                      0x00000958   Section        0  freertos.o(i.LKS_FREERTOS_Init)
    i.MCPWM_IRQHandler                       0x00000a64   Section        0  interrupt.o(i.MCPWM_IRQHandler)
    i.SEGGER_RTT_Init                        0x00000a66   Section        0  segger_rtt.o(i.SEGGER_RTT_Init)
    i.SEGGER_RTT_PutChar                     0x00000a70   Section        0  segger_rtt.o(i.SEGGER_RTT_PutChar)
    i.SPI0_IRQHandler                        0x00000aec   Section        0  interrupt.o(i.SPI0_IRQHandler)
    i.SVC_Handler                            0x00000aee   Section        0  port.o(i.SVC_Handler)
    i.SYS_ModuleClockCmd                     0x00000af0   Section        0  lks32mc08x_sys.o(i.SYS_ModuleClockCmd)
    i.SoftDelay                              0x00000b20   Section        0  hardware_init.o(i.SoftDelay)
    i.SysGPIO_Init                           0x00000b38   Section        0  hardware_init.o(i.SysGPIO_Init)
    SysGPIO_Init                             0x00000b39   Thumb Code    34  hardware_init.o(i.SysGPIO_Init)
    i.SysLEDTimerCallback                    0x00000b60   Section        0  freertos.o(i.SysLEDTimerCallback)
    SysLEDTimerCallback                      0x00000b61   Thumb Code    14  freertos.o(i.SysLEDTimerCallback)
    i.SysTick_Handler                        0x00000b74   Section        0  interrupt.o(i.SysTick_Handler)
    i.SystemInit                             0x00000b84   Section        0  hardware_init.o(i.SystemInit)
    i.UART0_IRQHandler                       0x00000b8c   Section        0  interrupt.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x00000ba4   Section        0  interrupt.o(i.UART1_IRQHandler)
    i.UART_Init                              0x00000ba8   Section        0  lks32mc08x_uart.o(i.UART_Init)
    i.UART_StructInit                        0x00000cac   Section        0  lks32mc08x_uart.o(i.UART_StructInit)
    i.UTIMER0_IRQHandler                     0x00000cca   Section        0  interrupt.o(i.UTIMER0_IRQHandler)
    i.UTIMER1_IRQHandler                     0x00000ccc   Section        0  interrupt.o(i.UTIMER1_IRQHandler)
    i.UTIMER2_IRQHandler                     0x00000cce   Section        0  interrupt.o(i.UTIMER2_IRQHandler)
    i.UTIMER3_IRQHandler                     0x00000cd0   Section        0  interrupt.o(i.UTIMER3_IRQHandler)
    i._DoInit                                0x00000cd4   Section        0  segger_rtt.o(i._DoInit)
    _DoInit                                  0x00000cd5   Thumb Code    80  segger_rtt.o(i._DoInit)
    i.__0printf$8                            0x00000d40   Section        0  printf8.o(i.__0printf$8)
    i.__ARM_common_switch8                   0x00000d60   Section        0  lks32mc08x_gpio.o(i.__ARM_common_switch8)
    i.__NVIC_SetPriority                     0x00000d7c   Section        0  hardware_init.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x00000d7d   Thumb Code   110  hardware_init.o(i.__NVIC_SetPriority)
    i.__scatterload_copy                     0x00000df4   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000e02   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00000e04   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00000e14   Section        0  printf8.o(i._printf_core)
    _printf_core                             0x00000e15   Thumb Code  1020  printf8.o(i._printf_core)
    i._printf_post_padding                   0x0000123c   Section        0  printf8.o(i._printf_post_padding)
    _printf_post_padding                     0x0000123d   Thumb Code    32  printf8.o(i._printf_post_padding)
    i._printf_pre_padding                    0x0000125c   Section        0  printf8.o(i._printf_pre_padding)
    _printf_pre_padding                      0x0000125d   Thumb Code    44  printf8.o(i._printf_pre_padding)
    i.fputc                                  0x00001288   Section        0  hardware_init.o(i.fputc)
    i.main                                   0x0000129c   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x000012c4   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x000012c5   Thumb Code   140  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x00001368   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x00001369   Thumb Code   184  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckForValidListAndQueue           0x00001438   Section        0  timers.o(i.prvCheckForValidListAndQueue)
    prvCheckForValidListAndQueue             0x00001439   Thumb Code    76  timers.o(i.prvCheckForValidListAndQueue)
    i.prvCheckTasksWaitingTermination        0x000014a0   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x000014a1   Thumb Code    60  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x000014e8   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x000014e9   Thumb Code    44  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x00001514   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x00001515   Thumb Code   128  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x00001594   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x00001595   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvGetNextExpireTime                   0x000015a8   Section        0  timers.o(i.prvGetNextExpireTime)
    prvGetNextExpireTime                     0x000015a9   Thumb Code    40  timers.o(i.prvGetNextExpireTime)
    i.prvHeapInit                            0x000015d4   Section        0  heap_4.o(i.prvHeapInit)
    prvHeapInit                              0x000015d5   Thumb Code    92  heap_4.o(i.prvHeapInit)
    i.prvIdleTask                            0x00001644   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x00001645   Thumb Code    20  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewQueue                  0x0000165c   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x0000165d   Thumb Code    38  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewTask                   0x00001682   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x00001683   Thumb Code   174  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseNewTimer                  0x00001730   Section        0  timers.o(i.prvInitialiseNewTimer)
    prvInitialiseNewTimer                    0x00001731   Thumb Code    74  timers.o(i.prvInitialiseNewTimer)
    i.prvInitialiseTaskLists                 0x0000177c   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x0000177d   Thumb Code    68  tasks.o(i.prvInitialiseTaskLists)
    i.prvInsertBlockIntoFreeList             0x000017e0   Section        0  heap_4.o(i.prvInsertBlockIntoFreeList)
    prvInsertBlockIntoFreeList               0x000017e1   Thumb Code    96  heap_4.o(i.prvInsertBlockIntoFreeList)
    i.prvInsertTimerInActiveList             0x00001848   Section        0  timers.o(i.prvInsertTimerInActiveList)
    prvInsertTimerInActiveList               0x00001849   Thumb Code    76  timers.o(i.prvInsertTimerInActiveList)
    i.prvIsQueueEmpty                        0x0000189c   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x0000189d   Thumb Code    28  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x000018b8   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x000018b9   Thumb Code    30  queue.o(i.prvIsQueueFull)
    i.prvNotifyQueueSetContainer             0x000018d6   Section        0  queue.o(i.prvNotifyQueueSetContainer)
    prvNotifyQueueSetContainer               0x000018d7   Thumb Code   150  queue.o(i.prvNotifyQueueSetContainer)
    i.prvProcessExpiredTimer                 0x0000196c   Section        0  timers.o(i.prvProcessExpiredTimer)
    prvProcessExpiredTimer                   0x0000196d   Thumb Code    64  timers.o(i.prvProcessExpiredTimer)
    i.prvProcessReceivedCommands             0x000019b0   Section        0  timers.o(i.prvProcessReceivedCommands)
    prvProcessReceivedCommands               0x000019b1   Thumb Code   278  timers.o(i.prvProcessReceivedCommands)
    i.prvProcessTimerOrBlockTask             0x00001acc   Section        0  timers.o(i.prvProcessTimerOrBlockTask)
    prvProcessTimerOrBlockTask               0x00001acd   Thumb Code   100  timers.o(i.prvProcessTimerOrBlockTask)
    i.prvReloadTimer                         0x00001b38   Section        0  timers.o(i.prvReloadTimer)
    prvReloadTimer                           0x00001b39   Thumb Code    40  timers.o(i.prvReloadTimer)
    i.prvResetNextTaskUnblockTime            0x00001b60   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x00001b61   Thumb Code    44  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvSampleTimeNow                       0x00001b94   Section        0  timers.o(i.prvSampleTimeNow)
    prvSampleTimeNow                         0x00001b95   Thumb Code    40  timers.o(i.prvSampleTimeNow)
    i.prvSwitchTimerLists                    0x00001bc0   Section        0  timers.o(i.prvSwitchTimerLists)
    prvSwitchTimerLists                      0x00001bc1   Thumb Code    60  timers.o(i.prvSwitchTimerLists)
    i.prvTaskExitError                       0x00001c04   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x00001c05   Thumb Code    32  port.o(i.prvTaskExitError)
    i.prvTimerTask                           0x00001c28   Section        0  timers.o(i.prvTimerTask)
    prvTimerTask                             0x00001c29   Thumb Code    26  timers.o(i.prvTimerTask)
    i.prvUnlockQueue                         0x00001c42   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x00001c43   Thumb Code   164  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x00001ce8   Section        0  heap_4.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x00001e08   Section        0  port.o(i.pxPortInitialiseStack)
    i.uxListRemove                           0x00001e28   Section        0  list.o(i.uxListRemove)
    i.uxTaskGetNumberOfTasks                 0x00001e50   Section        0  tasks.o(i.uxTaskGetNumberOfTasks)
    i.vListInitialise                        0x00001e5c   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x00001e76   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x00001e7c   Section        0  list.o(i.vListInsert)
    i.vPortEnterCritical                     0x00001eb4   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x00001ed0   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x00001ef8   Section        0  heap_4.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x00001f70   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vPortYield                             0x00001f9c   Section        0  port.o(i.vPortYield)
    i.vQueueAddToRegistry                    0x00001fb4   Section        0  queue.o(i.vQueueAddToRegistry)
    i.vQueueWaitForMessageRestricted         0x00002008   Section        0  queue.o(i.vQueueWaitForMessageRestricted)
    i.vTaskDelay                             0x00002054   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskInternalSetTimeOutState           0x00002098   Section        0  tasks.o(i.vTaskInternalSetTimeOutState)
    i.vTaskMissedYield                       0x000020b0   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x000020bc   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPlaceOnEventListRestricted        0x000020e8   Section        0  tasks.o(i.vTaskPlaceOnEventListRestricted)
    i.vTaskStartScheduler                    0x00002140   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x000021c0   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x000021d0   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x00002250   Section        0  port.o(i.xPortStartScheduler)
    i.xPortSysTickHandler                    0x00002288   Section        0  port.o(i.xPortSysTickHandler)
    i.xQueueGenericCreate                    0x000022ac   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReset                     0x0000230e   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x000023c4   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueGenericSendFromISR               0x00002542   Section        0  queue.o(i.xQueueGenericSendFromISR)
    i.xQueueReceive                          0x00002640   Section        0  queue.o(i.xQueueReceive)
    i.xTaskCheckForTimeOut                   0x00002778   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x000027f0   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskGetSchedulerState                 0x00002854   Section        0  tasks.o(i.xTaskGetSchedulerState)
    i.xTaskGetTickCount                      0x00002878   Section        0  tasks.o(i.xTaskGetTickCount)
    i.xTaskIncrementTick                     0x00002884   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x00002a2c   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskRemoveFromEventList               0x00002ae0   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x00002be8   Section        0  tasks.o(i.xTaskResumeAll)
    i.xTimerCreate                           0x00002d44   Section        0  timers.o(i.xTimerCreate)
    i.xTimerCreateTimerTask                  0x00002d78   Section        0  timers.o(i.xTimerCreateTimerTask)
    i.xTimerGenericCommand                   0x00002dc0   Section        0  timers.o(i.xTimerGenericCommand)
    .constdata                               0x00002e34   Section       17  segger_rtt.o(.constdata)
    _aInitStr                                0x00002e34   Data          17  segger_rtt.o(.constdata)
    .data                                    0x20000000   Section        7  main.o(.data)
    .data                                    0x20000008   Section       12  freertos.o(.data)
    .data                                    0x20000014   Section        4  hardware_init.o(.data)
    .data                                    0x20000018   Section        9  hw_485.o(.data)
    .data                                    0x20000024   Section       28  heap_4.o(.data)
    xStart                                   0x20000024   Data           8  heap_4.o(.data)
    pxEnd                                    0x2000002c   Data           4  heap_4.o(.data)
    xFreeBytesRemaining                      0x20000030   Data           4  heap_4.o(.data)
    xMinimumEverFreeBytesRemaining           0x20000034   Data           4  heap_4.o(.data)
    xNumberOfSuccessfulAllocations           0x20000038   Data           4  heap_4.o(.data)
    xNumberOfSuccessfulFrees                 0x2000003c   Data           4  heap_4.o(.data)
    .data                                    0x20000040   Section        4  port.o(.data)
    uxCriticalNesting                        0x20000040   Data           4  port.o(.data)
    .data                                    0x20000044   Section       64  tasks.o(.data)
    pxDelayedTaskList                        0x20000048   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x2000004c   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x20000050   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000054   Data           4  tasks.o(.data)
    xTickCount                               0x20000058   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x2000005c   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000060   Data           4  tasks.o(.data)
    xPendedTicks                             0x20000064   Data           4  tasks.o(.data)
    xYieldPending                            0x20000068   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x2000006c   Data           4  tasks.o(.data)
    uxTaskNumber                             0x20000070   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x20000074   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x20000078   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x20000080   Data           4  tasks.o(.data)
    .data                                    0x20000084   Section       20  timers.o(.data)
    pxCurrentTimerList                       0x20000084   Data           4  timers.o(.data)
    pxOverflowTimerList                      0x20000088   Data           4  timers.o(.data)
    xTimerQueue                              0x2000008c   Data           4  timers.o(.data)
    xTimerTaskHandle                         0x20000090   Data           4  timers.o(.data)
    xLastTime                                0x20000094   Data           4  timers.o(.data)
    .data                                    0x20000098   Section        4  stdout.o(.data)
    .bss                                     0x2000009c   Section       20  hw_485.o(.bss)
    DMA_InitStruct                           0x2000009c   Data          20  hw_485.o(.bss)
    .bss                                     0x200000b0   Section     2048  heap_4.o(.bss)
    ucHeap                                   0x200000b0   Data        2048  heap_4.o(.bss)
    .bss                                     0x200008b0   Section       64  queue.o(.bss)
    .bss                                     0x200008f0   Section      200  tasks.o(.bss)
    pxReadyTasksLists                        0x200008f0   Data         100  tasks.o(.bss)
    xDelayedTaskList1                        0x20000954   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x20000968   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x2000097c   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x20000990   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x200009a4   Data          20  tasks.o(.bss)
    .bss                                     0x200009b8   Section       40  timers.o(.bss)
    xActiveTimerList1                        0x200009b8   Data          20  timers.o(.bss)
    xActiveTimerList2                        0x200009cc   Data          20  timers.o(.bss)
    .bss                                     0x200009e0   Section      312  segger_rtt.o(.bss)
    _acUpBuffer                              0x20000a88   Data         128  segger_rtt.o(.bss)
    _acDownBuffer                            0x20000b08   Data          16  segger_rtt.o(.bss)
    STACK                                    0x20000b18   Section      768  startup_lks32mc08x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lks32mc08x.o(RESET)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __arm_fini_                               - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_lks32mc08x.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_lks32mc08x.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_lib_shutdown_fini                   0x000000d1   Thumb Code     0  entry12b.o(.ARM.Collect$$$$0000000E)
    __rt_final_cpp                           0x000000d5   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000F)
    __rt_final_exit                          0x000000d5   Thumb Code     0  entry11a.o(.ARM.Collect$$$$00000011)
    __asm___6_port_c_39a90d8d__prvPortStartFirstTask 0x000000d9   Thumb Code    36  port.o(.emb_text)
    ulSetInterruptMaskFromISR                0x00000101   Thumb Code     8  port.o(.emb_text)
    vClearInterruptMaskFromISR               0x00000109   Thumb Code     6  port.o(.emb_text)
    PendSV_Handler                           0x0000010f   Thumb Code    62  port.o(.emb_text)
    Reset_Handler                            0x00000151   Thumb Code    14  startup_lks32mc08x.o(.text)
    NMI_Handler                              0x0000015f   Thumb Code     2  startup_lks32mc08x.o(.text)
    HardFault_Handler                        0x00000161   Thumb Code     2  startup_lks32mc08x.o(.text)
    CAN_IRQHandler                           0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    DSP_IRQHandler                           0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    PWRDN_IRQHandler                         0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    SIF_IRQHandler                           0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    WAKE_IRQHandler                          0x00000169   Thumb Code     0  startup_lks32mc08x.o(.text)
    __aeabi_uidiv                            0x00000179   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000179   Thumb Code    44  uidiv.o(.text)
    __aeabi_ldivmod                          0x000001a5   Thumb Code    76  ldiv.o(.text)
    __aeabi_memcpy                           0x000001f1   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000001f1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000001f1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x00000215   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000215   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000215   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000223   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000223   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000223   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00000227   Thumb Code    18  memseta.o(.text)
    __aeabi_uldivmod                         0x00000239   Thumb Code    96  uldiv.o(.text)
    __scatterload                            0x00000299   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000299   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x000002bd   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x000002bd   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x000002dd   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x000002dd   Thumb Code     0  llushr.o(.text)
    ADC0_IRQHandler                          0x000002ff   Thumb Code     2  interrupt.o(i.ADC0_IRQHandler)
    CMP_IRQHandler                           0x00000301   Thumb Code     2  interrupt.o(i.CMP_IRQHandler)
    CheckSum                                 0x00000303   Thumb Code    44  common.o(i.CheckSum)
    Clock_Init                               0x00000331   Thumb Code    38  hardware_init.o(i.Clock_Init)
    DMA_CHx_EN                               0x00000365   Thumb Code    24  lks32mc08x_dma.o(i.DMA_CHx_EN)
    DMA_IRQHandler                           0x0000037d   Thumb Code    38  interrupt.o(i.DMA_IRQHandler)
    DMA_Init                                 0x000003ad   Thumb Code    78  lks32mc08x_dma.o(i.DMA_Init)
    DMA_StructInit                           0x00000401   Thumb Code    14  lks32mc08x_dma.o(i.DMA_StructInit)
    ENCODER0_IRQHandler                      0x0000040f   Thumb Code     2  interrupt.o(i.ENCODER0_IRQHandler)
    ENCODER1_IRQHandler                      0x00000411   Thumb Code     2  interrupt.o(i.ENCODER1_IRQHandler)
    GPIO_IRQHandler                          0x00000413   Thumb Code     2  interrupt.o(i.GPIO_IRQHandler)
    GPIO_Init                                0x00000415   Thumb Code   198  lks32mc08x_gpio.o(i.GPIO_Init)
    GPIO_PinAFConfig                         0x000004dd   Thumb Code   258  lks32mc08x_gpio.o(i.GPIO_PinAFConfig)
    GPIO_ReadOutputDataBit                   0x000005e9   Thumb Code    20  lks32mc08x_gpio.o(i.GPIO_ReadOutputDataBit)
    GPIO_ResetBits                           0x000005fd   Thumb Code    18  lks32mc08x_gpio.o(i.GPIO_ResetBits)
    GPIO_SetBits                             0x0000060f   Thumb Code    18  lks32mc08x_gpio.o(i.GPIO_SetBits)
    GPIO_StructInit                          0x00000621   Thumb Code    12  lks32mc08x_gpio.o(i.GPIO_StructInit)
    GPIO_WriteBit                            0x0000062d   Thumb Code    20  lks32mc08x_gpio.o(i.GPIO_WriteBit)
    HALL_IRQHandler                          0x00000641   Thumb Code     2  interrupt.o(i.HALL_IRQHandler)
    HW_485_DMA_Init                          0x00000645   Thumb Code    66  hw_485.o(i.HW_485_DMA_Init)
    HW_485_GPIO_Init                         0x00000699   Thumb Code   120  hw_485.o(i.HW_485_GPIO_Init)
    HW_485_Init                              0x00000715   Thumb Code    40  hw_485.o(i.HW_485_Init)
    HW_485_RxDMAClearCTMS                    0x00000741   Thumb Code    38  hw_485.o(i.HW_485_RxDMAClearCTMS)
    HW_SysTick_Config                        0x0000076d   Thumb Code    78  hardware_init.o(i.HW_SysTick_Config)
    HW_UART_GPIO_Init                        0x000007c5   Thumb Code    70  hw_uart .o(i.HW_UART_GPIO_Init)
    HW_UART_Init                             0x00000811   Thumb Code    40  hw_uart .o(i.HW_UART_Init)
    Hardware_Init                            0x0000083d   Thumb Code   104  hardware_init.o(i.Hardware_Init)
    I2C0_IRQHandler                          0x000008b9   Thumb Code     2  interrupt.o(i.I2C0_IRQHandler)
    Invers_GPIO                              0x000008bb   Thumb Code    44  hardware_init.o(i.Invers_GPIO)
    LKS_FREERTOS_Init                        0x00000959   Thumb Code   128  freertos.o(i.LKS_FREERTOS_Init)
    MCPWM_IRQHandler                         0x00000a65   Thumb Code     2  interrupt.o(i.MCPWM_IRQHandler)
    SEGGER_RTT_Init                          0x00000a67   Thumb Code     8  segger_rtt.o(i.SEGGER_RTT_Init)
    SEGGER_RTT_PutChar                       0x00000a71   Thumb Code   120  segger_rtt.o(i.SEGGER_RTT_PutChar)
    SPI0_IRQHandler                          0x00000aed   Thumb Code     2  interrupt.o(i.SPI0_IRQHandler)
    SVC_Handler                              0x00000aef   Thumb Code     2  port.o(i.SVC_Handler)
    SYS_ModuleClockCmd                       0x00000af1   Thumb Code    38  lks32mc08x_sys.o(i.SYS_ModuleClockCmd)
    SoftDelay                                0x00000b21   Thumb Code    24  hardware_init.o(i.SoftDelay)
    SysTick_Handler                          0x00000b75   Thumb Code    16  interrupt.o(i.SysTick_Handler)
    SystemInit                               0x00000b85   Thumb Code     8  hardware_init.o(i.SystemInit)
    UART0_IRQHandler                         0x00000b8d   Thumb Code    20  interrupt.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x00000ba5   Thumb Code     2  interrupt.o(i.UART1_IRQHandler)
    UART_Init                                0x00000ba9   Thumb Code   238  lks32mc08x_uart.o(i.UART_Init)
    UART_StructInit                          0x00000cad   Thumb Code    30  lks32mc08x_uart.o(i.UART_StructInit)
    UTIMER0_IRQHandler                       0x00000ccb   Thumb Code     2  interrupt.o(i.UTIMER0_IRQHandler)
    UTIMER1_IRQHandler                       0x00000ccd   Thumb Code     2  interrupt.o(i.UTIMER1_IRQHandler)
    UTIMER2_IRQHandler                       0x00000ccf   Thumb Code     2  interrupt.o(i.UTIMER2_IRQHandler)
    UTIMER3_IRQHandler                       0x00000cd1   Thumb Code     2  interrupt.o(i.UTIMER3_IRQHandler)
    __0printf$8                              0x00000d41   Thumb Code    24  printf8.o(i.__0printf$8)
    __1printf$8                              0x00000d41   Thumb Code     0  printf8.o(i.__0printf$8)
    __2printf                                0x00000d41   Thumb Code     0  printf8.o(i.__0printf$8)
    __ARM_common_switch8                     0x00000d61   Thumb Code    28  lks32mc08x_gpio.o(i.__ARM_common_switch8)
    __scatterload_copy                       0x00000df5   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000e03   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00000e05   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputc                                    0x00001289   Thumb Code    18  hardware_init.o(i.fputc)
    main                                     0x0000129d   Thumb Code    32  main.o(i.main)
    pvPortMalloc                             0x00001ce9   Thumb Code   268  heap_4.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x00001e09   Thumb Code    26  port.o(i.pxPortInitialiseStack)
    uxListRemove                             0x00001e29   Thumb Code    40  list.o(i.uxListRemove)
    uxTaskGetNumberOfTasks                   0x00001e51   Thumb Code     6  tasks.o(i.uxTaskGetNumberOfTasks)
    vListInitialise                          0x00001e5d   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x00001e77   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x00001e7d   Thumb Code    54  list.o(i.vListInsert)
    vPortEnterCritical                       0x00001eb5   Thumb Code    22  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x00001ed1   Thumb Code    36  port.o(i.vPortExitCritical)
    vPortFree                                0x00001ef9   Thumb Code   110  heap_4.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x00001f71   Thumb Code    34  port.o(i.vPortSetupTimerInterrupt)
    vPortYield                               0x00001f9d   Thumb Code    18  port.o(i.vPortYield)
    vQueueAddToRegistry                      0x00001fb5   Thumb Code    80  queue.o(i.vQueueAddToRegistry)
    vQueueWaitForMessageRestricted           0x00002009   Thumb Code    76  queue.o(i.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00002055   Thumb Code    62  tasks.o(i.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00002099   Thumb Code    14  tasks.o(i.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x000020b1   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000020bd   Thumb Code    38  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x000020e9   Thumb Code    82  tasks.o(i.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x00002141   Thumb Code    94  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x000021c1   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x000021d1   Thumb Code   108  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x00002251   Thumb Code    48  port.o(i.xPortStartScheduler)
    xPortSysTickHandler                      0x00002289   Thumb Code    32  port.o(i.xPortSysTickHandler)
    xQueueGenericCreate                      0x000022ad   Thumb Code    98  queue.o(i.xQueueGenericCreate)
    xQueueGenericReset                       0x0000230f   Thumb Code   182  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x000023c5   Thumb Code   382  queue.o(i.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x00002543   Thumb Code   254  queue.o(i.xQueueGenericSendFromISR)
    xQueueReceive                            0x00002641   Thumb Code   312  queue.o(i.xQueueReceive)
    xTaskCheckForTimeOut                     0x00002779   Thumb Code   110  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x000027f1   Thumb Code   100  tasks.o(i.xTaskCreate)
    xTaskGetSchedulerState                   0x00002855   Thumb Code    28  tasks.o(i.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00002879   Thumb Code     6  tasks.o(i.xTaskGetTickCount)
    xTaskIncrementTick                       0x00002885   Thumb Code   380  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002a2d   Thumb Code   168  tasks.o(i.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00002ae1   Thumb Code   240  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00002be9   Thumb Code   314  tasks.o(i.xTaskResumeAll)
    xTimerCreate                             0x00002d45   Thumb Code    50  timers.o(i.xTimerCreate)
    xTimerCreateTimerTask                    0x00002d79   Thumb Code    52  timers.o(i.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x00002dc1   Thumb Code   110  timers.o(i.xTimerGenericCommand)
    Region$$Table$$Base                      0x00002e48   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00002e68   Number         0  anon$$obj.o(Region$$Table)
    sumCheck                                 0x20000000   Data           6  main.o(.data)
    sumCheckParity                           0x20000006   Data           1  main.o(.data)
    sysLEDTimerStart                         0x20000008   Data           4  freertos.o(.data)
    led0Task_Handler                         0x2000000c   Data           4  freertos.o(.data)
    sysLEDTimer_Handler                      0x20000010   Data           4  freertos.o(.data)
    SystemCoreClock                          0x20000014   Data           4  hardware_init.o(.data)
    RS485_RX                                 0x20000018   Data           8  hw_485.o(.data)
    RS485_RxFlag                             0x20000020   Data           1  hw_485.o(.data)
    pxCurrentTCB                             0x20000044   Data           4  tasks.o(.data)
    uxTopUsedPriority                        0x2000007c   Data           4  tasks.o(.data)
    __stdout                                 0x20000098   Data           4  stdout.o(.data)
    xQueueRegistry                           0x200008b0   Data          64  queue.o(.bss)
    _SEGGER_RTT                              0x200009e0   Data         168  segger_rtt.o(.bss)
    __initial_sp                             0x20000e18   Data           0  startup_lks32mc08x.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00002f04, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00002e68, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          446    RESET               startup_lks32mc08x.o
    0x000000c0   0x000000c0   0x00000000   Code   RO         2482  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO         2760    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO         2763    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         2765    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         2767    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         2768    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         2775    .ARM.Collect$$$$0000000E  mc_p.l(entry12b.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO         2770    .ARM.Collect$$$$0000000F  mc_p.l(entry10a.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO         2772    .ARM.Collect$$$$00000011  mc_p.l(entry11a.o)
    0x000000d4   0x000000d4   0x00000004   Code   RO         2761    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d8   0x000000d8   0x00000078   Code   RO         1350    .emb_text           port.o
    0x00000150   0x00000150   0x00000028   Code   RO          447    .text               startup_lks32mc08x.o
    0x00000178   0x00000178   0x0000002c   Code   RO         2485    .text               mc_p.l(uidiv.o)
    0x000001a4   0x000001a4   0x0000004c   Code   RO         2489    .text               mc_p.l(ldiv.o)
    0x000001f0   0x000001f0   0x00000024   Code   RO         2491    .text               mc_p.l(memcpya.o)
    0x00000214   0x00000214   0x00000024   Code   RO         2493    .text               mc_p.l(memseta.o)
    0x00000238   0x00000238   0x00000060   Code   RO         2777    .text               mc_p.l(uldiv.o)
    0x00000298   0x00000298   0x00000024   Code   RO         2790    .text               mc_p.l(init.o)
    0x000002bc   0x000002bc   0x00000020   Code   RO         2792    .text               mc_p.l(llshl.o)
    0x000002dc   0x000002dc   0x00000022   Code   RO         2794    .text               mc_p.l(llushr.o)
    0x000002fe   0x000002fe   0x00000002   Code   RO          242    i.ADC0_IRQHandler   interrupt.o
    0x00000300   0x00000300   0x00000002   Code   RO          243    i.CMP_IRQHandler    interrupt.o
    0x00000302   0x00000302   0x0000002c   Code   RO          454    i.CheckSum          common.o
    0x0000032e   0x0000032e   0x00000002   PAD
    0x00000330   0x00000330   0x00000034   Code   RO          371    i.Clock_Init        hardware_init.o
    0x00000364   0x00000364   0x00000018   Code   RO          612    i.DMA_CHx_EN        lks32mc08x_dma.o
    0x0000037c   0x0000037c   0x00000030   Code   RO          244    i.DMA_IRQHandler    interrupt.o
    0x000003ac   0x000003ac   0x00000054   Code   RO          615    i.DMA_Init          lks32mc08x_dma.o
    0x00000400   0x00000400   0x0000000e   Code   RO          616    i.DMA_StructInit    lks32mc08x_dma.o
    0x0000040e   0x0000040e   0x00000002   Code   RO          245    i.ENCODER0_IRQHandler  interrupt.o
    0x00000410   0x00000410   0x00000002   Code   RO          246    i.ENCODER1_IRQHandler  interrupt.o
    0x00000412   0x00000412   0x00000002   Code   RO          247    i.GPIO_IRQHandler   interrupt.o
    0x00000414   0x00000414   0x000000c6   Code   RO          705    i.GPIO_Init         lks32mc08x_gpio.o
    0x000004da   0x000004da   0x00000002   PAD
    0x000004dc   0x000004dc   0x0000010c   Code   RO          707    i.GPIO_PinAFConfig  lks32mc08x_gpio.o
    0x000005e8   0x000005e8   0x00000014   Code   RO          711    i.GPIO_ReadOutputDataBit  lks32mc08x_gpio.o
    0x000005fc   0x000005fc   0x00000012   Code   RO          712    i.GPIO_ResetBits    lks32mc08x_gpio.o
    0x0000060e   0x0000060e   0x00000012   Code   RO          713    i.GPIO_SetBits      lks32mc08x_gpio.o
    0x00000620   0x00000620   0x0000000c   Code   RO          714    i.GPIO_StructInit   lks32mc08x_gpio.o
    0x0000062c   0x0000062c   0x00000014   Code   RO          717    i.GPIO_WriteBit     lks32mc08x_gpio.o
    0x00000640   0x00000640   0x00000002   Code   RO          248    i.HALL_IRQHandler   interrupt.o
    0x00000642   0x00000642   0x00000002   PAD
    0x00000644   0x00000644   0x00000054   Code   RO         1222    i.HW_485_DMA_Init   hw_485.o
    0x00000698   0x00000698   0x0000007c   Code   RO         1224    i.HW_485_GPIO_Init  hw_485.o
    0x00000714   0x00000714   0x0000002c   Code   RO         1225    i.HW_485_Init       hw_485.o
    0x00000740   0x00000740   0x0000002c   Code   RO         1226    i.HW_485_RxDMAClearCTMS  hw_485.o
    0x0000076c   0x0000076c   0x00000058   Code   RO          372    i.HW_SysTick_Config  hardware_init.o
    0x000007c4   0x000007c4   0x0000004c   Code   RO         1184    i.HW_UART_GPIO_Init  hw_uart .o
    0x00000810   0x00000810   0x0000002c   Code   RO         1185    i.HW_UART_Init      hw_uart .o
    0x0000083c   0x0000083c   0x0000007c   Code   RO          373    i.Hardware_Init     hardware_init.o
    0x000008b8   0x000008b8   0x00000002   Code   RO          249    i.I2C0_IRQHandler   interrupt.o
    0x000008ba   0x000008ba   0x0000002c   Code   RO          374    i.Invers_GPIO       hardware_init.o
    0x000008e6   0x000008e6   0x00000002   PAD
    0x000008e8   0x000008e8   0x00000070   Code   RO          180    i.LED0Task          freertos.o
    0x00000958   0x00000958   0x0000010c   Code   RO          181    i.LKS_FREERTOS_Init  freertos.o
    0x00000a64   0x00000a64   0x00000002   Code   RO          250    i.MCPWM_IRQHandler  interrupt.o
    0x00000a66   0x00000a66   0x00000008   Code   RO         2223    i.SEGGER_RTT_Init   segger_rtt.o
    0x00000a6e   0x00000a6e   0x00000002   PAD
    0x00000a70   0x00000a70   0x0000007c   Code   RO         2224    i.SEGGER_RTT_PutChar  segger_rtt.o
    0x00000aec   0x00000aec   0x00000002   Code   RO          251    i.SPI0_IRQHandler   interrupt.o
    0x00000aee   0x00000aee   0x00000002   Code   RO         1351    i.SVC_Handler       port.o
    0x00000af0   0x00000af0   0x00000030   Code   RO          859    i.SYS_ModuleClockCmd  lks32mc08x_sys.o
    0x00000b20   0x00000b20   0x00000018   Code   RO          375    i.SoftDelay         hardware_init.o
    0x00000b38   0x00000b38   0x00000028   Code   RO          376    i.SysGPIO_Init      hardware_init.o
    0x00000b60   0x00000b60   0x00000014   Code   RO          182    i.SysLEDTimerCallback  freertos.o
    0x00000b74   0x00000b74   0x00000010   Code   RO          253    i.SysTick_Handler   interrupt.o
    0x00000b84   0x00000b84   0x00000008   Code   RO          377    i.SystemInit        hardware_init.o
    0x00000b8c   0x00000b8c   0x00000018   Code   RO          254    i.UART0_IRQHandler  interrupt.o
    0x00000ba4   0x00000ba4   0x00000002   Code   RO          255    i.UART1_IRQHandler  interrupt.o
    0x00000ba6   0x00000ba6   0x00000002   PAD
    0x00000ba8   0x00000ba8   0x00000104   Code   RO         1077    i.UART_Init         lks32mc08x_uart.o
    0x00000cac   0x00000cac   0x0000001e   Code   RO         1082    i.UART_StructInit   lks32mc08x_uart.o
    0x00000cca   0x00000cca   0x00000002   Code   RO          256    i.UTIMER0_IRQHandler  interrupt.o
    0x00000ccc   0x00000ccc   0x00000002   Code   RO          257    i.UTIMER1_IRQHandler  interrupt.o
    0x00000cce   0x00000cce   0x00000002   Code   RO          258    i.UTIMER2_IRQHandler  interrupt.o
    0x00000cd0   0x00000cd0   0x00000002   Code   RO          259    i.UTIMER3_IRQHandler  interrupt.o
    0x00000cd2   0x00000cd2   0x00000002   PAD
    0x00000cd4   0x00000cd4   0x0000006c   Code   RO         2245    i._DoInit           segger_rtt.o
    0x00000d40   0x00000d40   0x00000020   Code   RO         2706    i.__0printf$8       mc_p.l(printf8.o)
    0x00000d60   0x00000d60   0x0000001c   Code   RO          792    i.__ARM_common_switch8  lks32mc08x_gpio.o
    0x00000d7c   0x00000d7c   0x00000078   Code   RO          378    i.__NVIC_SetPriority  hardware_init.o
    0x00000df4   0x00000df4   0x0000000e   Code   RO         2804    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00000e02   0x00000e02   0x00000002   Code   RO         2805    i.__scatterload_null  mc_p.l(handlers.o)
    0x00000e04   0x00000e04   0x0000000e   Code   RO         2806    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00000e12   0x00000e12   0x00000002   PAD
    0x00000e14   0x00000e14   0x00000428   Code   RO         2713    i._printf_core      mc_p.l(printf8.o)
    0x0000123c   0x0000123c   0x00000020   Code   RO         2714    i._printf_post_padding  mc_p.l(printf8.o)
    0x0000125c   0x0000125c   0x0000002c   Code   RO         2715    i._printf_pre_padding  mc_p.l(printf8.o)
    0x00001288   0x00001288   0x00000012   Code   RO          379    i.fputc             hardware_init.o
    0x0000129a   0x0000129a   0x00000002   PAD
    0x0000129c   0x0000129c   0x00000028   Code   RO            3    i.main              main.o
    0x000012c4   0x000012c4   0x000000a4   Code   RO         1719    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001368   0x00001368   0x000000d0   Code   RO         1720    i.prvAddNewTaskToReadyList  tasks.o
    0x00001438   0x00001438   0x00000068   Code   RO         2056    i.prvCheckForValidListAndQueue  timers.o
    0x000014a0   0x000014a0   0x00000048   Code   RO         1721    i.prvCheckTasksWaitingTermination  tasks.o
    0x000014e8   0x000014e8   0x0000002c   Code   RO         1494    i.prvCopyDataFromQueue  queue.o
    0x00001514   0x00001514   0x00000080   Code   RO         1495    i.prvCopyDataToQueue  queue.o
    0x00001594   0x00001594   0x00000012   Code   RO         1722    i.prvDeleteTCB      tasks.o
    0x000015a6   0x000015a6   0x00000002   PAD
    0x000015a8   0x000015a8   0x0000002c   Code   RO         2057    i.prvGetNextExpireTime  timers.o
    0x000015d4   0x000015d4   0x00000070   Code   RO         1277    i.prvHeapInit       heap_4.o
    0x00001644   0x00001644   0x00000018   Code   RO         1723    i.prvIdleTask       tasks.o
    0x0000165c   0x0000165c   0x00000026   Code   RO         1498    i.prvInitialiseNewQueue  queue.o
    0x00001682   0x00001682   0x000000ae   Code   RO         1724    i.prvInitialiseNewTask  tasks.o
    0x00001730   0x00001730   0x0000004a   Code   RO         2058    i.prvInitialiseNewTimer  timers.o
    0x0000177a   0x0000177a   0x00000002   PAD
    0x0000177c   0x0000177c   0x00000064   Code   RO         1725    i.prvInitialiseTaskLists  tasks.o
    0x000017e0   0x000017e0   0x00000068   Code   RO         1278    i.prvInsertBlockIntoFreeList  heap_4.o
    0x00001848   0x00001848   0x00000054   Code   RO         2059    i.prvInsertTimerInActiveList  timers.o
    0x0000189c   0x0000189c   0x0000001c   Code   RO         1499    i.prvIsQueueEmpty   queue.o
    0x000018b8   0x000018b8   0x0000001e   Code   RO         1500    i.prvIsQueueFull    queue.o
    0x000018d6   0x000018d6   0x00000096   Code   RO         1501    i.prvNotifyQueueSetContainer  queue.o
    0x0000196c   0x0000196c   0x00000044   Code   RO         2060    i.prvProcessExpiredTimer  timers.o
    0x000019b0   0x000019b0   0x0000011c   Code   RO         2061    i.prvProcessReceivedCommands  timers.o
    0x00001acc   0x00001acc   0x0000006c   Code   RO         2062    i.prvProcessTimerOrBlockTask  timers.o
    0x00001b38   0x00001b38   0x00000028   Code   RO         2063    i.prvReloadTimer    timers.o
    0x00001b60   0x00001b60   0x00000034   Code   RO         1726    i.prvResetNextTaskUnblockTime  tasks.o
    0x00001b94   0x00001b94   0x0000002c   Code   RO         2064    i.prvSampleTimeNow  timers.o
    0x00001bc0   0x00001bc0   0x00000044   Code   RO         2065    i.prvSwitchTimerLists  timers.o
    0x00001c04   0x00001c04   0x00000024   Code   RO         1352    i.prvTaskExitError  port.o
    0x00001c28   0x00001c28   0x0000001a   Code   RO         2066    i.prvTimerTask      timers.o
    0x00001c42   0x00001c42   0x000000a4   Code   RO         1502    i.prvUnlockQueue    queue.o
    0x00001ce6   0x00001ce6   0x00000002   PAD
    0x00001ce8   0x00001ce8   0x00000120   Code   RO         1280    i.pvPortMalloc      heap_4.o
    0x00001e08   0x00001e08   0x00000020   Code   RO         1353    i.pxPortInitialiseStack  port.o
    0x00001e28   0x00001e28   0x00000028   Code   RO         1445    i.uxListRemove      list.o
    0x00001e50   0x00001e50   0x0000000c   Code   RO         1731    i.uxTaskGetNumberOfTasks  tasks.o
    0x00001e5c   0x00001e5c   0x0000001a   Code   RO         1446    i.vListInitialise   list.o
    0x00001e76   0x00001e76   0x00000006   Code   RO         1447    i.vListInitialiseItem  list.o
    0x00001e7c   0x00001e7c   0x00000036   Code   RO         1448    i.vListInsert       list.o
    0x00001eb2   0x00001eb2   0x00000002   PAD
    0x00001eb4   0x00001eb4   0x0000001c   Code   RO         1355    i.vPortEnterCritical  port.o
    0x00001ed0   0x00001ed0   0x00000028   Code   RO         1356    i.vPortExitCritical  port.o
    0x00001ef8   0x00001ef8   0x00000078   Code   RO         1281    i.vPortFree         heap_4.o
    0x00001f70   0x00001f70   0x0000002c   Code   RO         1357    i.vPortSetupTimerInterrupt  port.o
    0x00001f9c   0x00001f9c   0x00000018   Code   RO         1358    i.vPortYield        port.o
    0x00001fb4   0x00001fb4   0x00000054   Code   RO         1506    i.vQueueAddToRegistry  queue.o
    0x00002008   0x00002008   0x0000004c   Code   RO         1509    i.vQueueWaitForMessageRestricted  queue.o
    0x00002054   0x00002054   0x00000044   Code   RO         1735    i.vTaskDelay        tasks.o
    0x00002098   0x00002098   0x00000018   Code   RO         1739    i.vTaskInternalSetTimeOutState  tasks.o
    0x000020b0   0x000020b0   0x0000000c   Code   RO         1740    i.vTaskMissedYield  tasks.o
    0x000020bc   0x000020bc   0x0000002c   Code   RO         1741    i.vTaskPlaceOnEventList  tasks.o
    0x000020e8   0x000020e8   0x00000058   Code   RO         1742    i.vTaskPlaceOnEventListRestricted  tasks.o
    0x00002140   0x00002140   0x00000080   Code   RO         1749    i.vTaskStartScheduler  tasks.o
    0x000021c0   0x000021c0   0x00000010   Code   RO         1751    i.vTaskSuspendAll   tasks.o
    0x000021d0   0x000021d0   0x00000080   Code   RO         1752    i.vTaskSwitchContext  tasks.o
    0x00002250   0x00002250   0x00000038   Code   RO         1359    i.xPortStartScheduler  port.o
    0x00002288   0x00002288   0x00000024   Code   RO         1360    i.xPortSysTickHandler  port.o
    0x000022ac   0x000022ac   0x00000062   Code   RO         1513    i.xQueueGenericCreate  queue.o
    0x0000230e   0x0000230e   0x000000b6   Code   RO         1514    i.xQueueGenericReset  queue.o
    0x000023c4   0x000023c4   0x0000017e   Code   RO         1515    i.xQueueGenericSend  queue.o
    0x00002542   0x00002542   0x000000fe   Code   RO         1516    i.xQueueGenericSendFromISR  queue.o
    0x00002640   0x00002640   0x00000138   Code   RO         1522    i.xQueueReceive     queue.o
    0x00002778   0x00002778   0x00000078   Code   RO         1754    i.xTaskCheckForTimeOut  tasks.o
    0x000027f0   0x000027f0   0x00000064   Code   RO         1755    i.xTaskCreate       tasks.o
    0x00002854   0x00002854   0x00000024   Code   RO         1762    i.xTaskGetSchedulerState  tasks.o
    0x00002878   0x00002878   0x0000000c   Code   RO         1763    i.xTaskGetTickCount  tasks.o
    0x00002884   0x00002884   0x000001a8   Code   RO         1765    i.xTaskIncrementTick  tasks.o
    0x00002a2c   0x00002a2c   0x000000b4   Code   RO         1766    i.xTaskPriorityDisinherit  tasks.o
    0x00002ae0   0x00002ae0   0x00000108   Code   RO         1768    i.xTaskRemoveFromEventList  tasks.o
    0x00002be8   0x00002be8   0x0000015c   Code   RO         1769    i.xTaskResumeAll    tasks.o
    0x00002d44   0x00002d44   0x00000032   Code   RO         2071    i.xTimerCreate      timers.o
    0x00002d76   0x00002d76   0x00000002   PAD
    0x00002d78   0x00002d78   0x00000048   Code   RO         2072    i.xTimerCreateTimerTask  timers.o
    0x00002dc0   0x00002dc0   0x00000074   Code   RO         2073    i.xTimerGenericCommand  timers.o
    0x00002e34   0x00002e34   0x00000011   Data   RO         2251    .constdata          segger_rtt.o
    0x00002e45   0x00002e45   0x00000003   PAD
    0x00002e48   0x00002e48   0x00000020   Data   RO         2802    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00002e68, Size: 0x00000e18, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00002e68   0x00000007   Data   RW            4    .data               main.o
    0x20000007   0x00002e6f   0x00000001   PAD
    0x20000008   0x00002e70   0x0000000c   Data   RW          183    .data               freertos.o
    0x20000014   0x00002e7c   0x00000004   Data   RW          380    .data               hardware_init.o
    0x20000018   0x00002e80   0x00000009   Data   RW         1228    .data               hw_485.o
    0x20000021   0x00002e89   0x00000003   PAD
    0x20000024   0x00002e8c   0x0000001c   Data   RW         1287    .data               heap_4.o
    0x20000040   0x00002ea8   0x00000004   Data   RW         1361    .data               port.o
    0x20000044   0x00002eac   0x00000040   Data   RW         1772    .data               tasks.o
    0x20000084   0x00002eec   0x00000014   Data   RW         2080    .data               timers.o
    0x20000098   0x00002f00   0x00000004   Data   RW         2776    .data               mc_p.l(stdout.o)
    0x2000009c        -       0x00000014   Zero   RW         1227    .bss                hw_485.o
    0x200000b0        -       0x00000800   Zero   RW         1286    .bss                heap_4.o
    0x200008b0        -       0x00000040   Zero   RW         1528    .bss                queue.o
    0x200008f0        -       0x000000c8   Zero   RW         1771    .bss                tasks.o
    0x200009b8        -       0x00000028   Zero   RW         2079    .bss                timers.o
    0x200009e0        -       0x00000138   Zero   RW         2250    .bss                segger_rtt.o
    0x20000b18        -       0x00000300   Zero   RW          444    STACK               startup_lks32mc08x.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        44          0          0          0          0       1103   common.o
       400        188          0         12          0       4292   freertos.o
       518         60          0          4          0      32110   hardware_init.o
       624         58          0         28       2048       5055   heap_4.o
       296         32          0          9         20       2803   hw_485.o
       120         10          0          0          0        983   hw_uart .o
       116         14          0          0          0       7167   interrupt.o
       126          0          0          0          0       2689   list.o
       122          6          0          0          0       3505   lks32mc08x_dma.o
       582         28          0          0          0       5118   lks32mc08x_gpio.o
        48         10          0          0          0        573   lks32mc08x_sys.o
       290         22          0          0          0       1886   lks32mc08x_uart.o
        40          8          0          7          0      30157   main.o
       418         58          0          4          0       7003   port.o
      1970          4          0          0         64      16998   queue.o
       240         32         17          0        312       6865   segger_rtt.o
        40         14        192          0        768        660   startup_lks32mc08x.o
      2816        338          0         64        200      26677   tasks.o
      1182        108          0         20         40      15606   timers.o

    ----------------------------------------------------------------------
     10018        990        244        152       3452     171250   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        26          0          3          4          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         4          0          0          0          0          0   entry12b.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        76          0          0          0          0         76   ldiv.o
        32          0          0          0          0         68   llshl.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
      1172         52          0          0          0        324   printf8.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         72   uidiv.o
        96          0          0          0          0         84   uldiv.o

    ----------------------------------------------------------------------
      1618         68          0          4          0        920   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1616         68          0          4          0        920   mc_p.l

    ----------------------------------------------------------------------
      1618         68          0          4          0        920   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11636       1058        244        156       3452     166638   Grand Totals
     11636       1058        244        156       3452     166638   ELF Image Totals
     11636       1058        244        156          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                11880 (  11.60kB)
    Total RW  Size (RW Data + ZI Data)              3608 (   3.52kB)
    Total ROM Size (Code + RO Data + RW Data)      12036 (  11.75kB)

==============================================================================

